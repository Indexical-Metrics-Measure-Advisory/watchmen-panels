{"version":3,"sources":["data/utils.ts","services/factor-calculator.ts","services/styles.ts","assets/build-metrics.png","assets/domain-select.png","assets/export-report.png","assets/import-data.png","assets/mapping-factor.png","assets/measure-indicator.png","pages/guide/component/object-list.tsx","pages/guide/component/operations-bar.tsx","charts/chart-instance-context.tsx","charts/chart.tsx","charts/custom/types.ts","charts/custom/elements/aggregator/average.ts","charts/custom/elements/aggregator/count.ts","charts/custom/elements/aggregator/maximum.ts","charts/custom/elements/aggregator/median.ts","charts/custom/elements/aggregator/minimum.ts","charts/custom/elements/aggregator/summary.ts","charts/custom/elements/aggregator/index.ts","charts/custom/elements/dimension.ts","charts/custom/elements/axis.ts","charts/custom/elements/indicator.ts","charts/custom/elements/series.ts","charts/custom/elements/shortcuts.ts","charts/custom/elements/title.ts","charts/custom/pie-doughnut-nightingale.ts","charts/count-doughnut.tsx","charts/gantt.tsx","charts/segment-bar.tsx","services/guide/software-implementation.tsx","services/guide/software-implementation.csv","services/guide/domain.ts","pages/guide/guide-context.tsx","pages/guide/build-metrics/add-paragraph-button.tsx","pages/guide/build-metrics/as-rnd.tsx","pages/component/chart.tsx","pages/guide/build-metrics/hide-on-print-context.tsx","pages/guide/build-metrics/settings-context.tsx","pages/guide/build-metrics/chart-context.tsx","charts/custom/validation-utils.ts","charts/custom/bar-or-line.ts","charts/custom/bar.ts","charts/custom/doughnut.ts","charts/custom/line.ts","charts/custom/nightingale.ts","charts/custom/pie.ts","charts/custom/defs.ts","charts/custom/scatter.ts","charts/custom/sunburst.ts","charts/custom/tree.ts","charts/custom/treemap.ts","charts/custom-chart.tsx","pages/guide/build-metrics/custom/dropdown-in-cell.tsx","pages/guide/build-metrics/custom/dropdown-item.tsx","pages/guide/build-metrics/custom/dimension-dropdown-item.tsx","pages/guide/build-metrics/custom/indicator-dropdown-item.tsx","pages/guide/build-metrics/custom/input-item.tsx","pages/guide/build-metrics/download-button.tsx","pages/guide/build-metrics/hide-on-print-button.tsx","pages/guide/build-metrics/resize-buttons.tsx","pages/guide/build-metrics/saved-custom-chart-context.tsx","pages/guide/build-metrics/save-button.tsx","pages/guide/build-metrics/settings-button.tsx","pages/guide/build-metrics/settings-container.tsx","pages/guide/build-metrics/custom-chart-panel.tsx","charts/custom/settings.ts","pages/guide/build-metrics/autonomous-custom-chart.tsx","pages/guide/build-metrics/custom-charts.tsx","pages/guide/build-metrics/hidden-charts-stack-button.tsx","pages/guide/build-metrics/metrics-container.ts","pages/guide/build-metrics/paragraphs.tsx","pages/guide/build-metrics/predefined-chart-panel.tsx","pages/guide/build-metrics/predefined-charts.tsx","pages/guide/build-metrics/print-pdf-button.tsx","pages/guide/build-metrics/quit-export.tsx","pages/guide/build-metrics/index.tsx","pages/guide/domain-select/index.tsx","services/file-reader/csv-reader.ts","services/file-reader/json-reader.ts","services/guide/file.ts","pages/guide/import-data/parse-data.ts","pages/guide/import-data/index.tsx","pages/guide/component/dropdown-in-grid.tsx","pages/guide/component/input-in-grid.tsx","pages/guide/component/object-detail.tsx","pages/guide/utils.ts","pages/guide/mapping-factor/index.tsx","services/guide/types.ts","pages/guide/measure-indicator/calc-column.tsx","pages/guide/measure-indicator/native-column.tsx","pages/guide/measure-indicator/index.tsx","pages/guide/steps.tsx","pages/guide/index.tsx","charts/color-theme.ts","pages/component/dropdown.tsx","data/types.ts"],"names":["BOOLEAN_TEXTS","NUMBER_PATTERN","DATE_PATTERN","TIME_PATTERN","DATETIME_PATTERN","detectDataType","value","DataColumnType","NUMERIC","BOOLEAN","Array","isArray","ARRAY","includes","toUpperCase","test","isNaN","Date","getTime","DATE","TIME","DATETIME","TEXT","OBJECT","UNKNOWN","workdays","start","end","endDate","dayjs","endWeekday","day","startDate","startWeekday","diffDays","diff","Math","floor","doc","styles","console","info","fontWeightBold","expression","days","dateDiff","unit","float","groupCollapsed","fontWeightNormal","join","group","parameterLead","groupEnd","year","date","month","quarter","week","weekday","hour","minute","second","printDocs","forEach","func","expressionStyle","parameterLeadStyle","funcName","name","printDateTimeDocs","x","VARIABLE_PATTERN","calculate","options","target","propName","topic","trim","length","result","match","exec","matchedWord","matchedPropName","startIndex","index","column","columns","find","c","type","replace","toString","v","parseFloat","substring","eval","e","error","isExpressionIncorrect","variables","allColumnNames","map","findIndex","variable","detectColumnTypeByExpression","prefix","some","startsWith","calculateColumn","detected","data","item","types","distinctTypes","from","Set","ObjectsContainer","styled","div","ObjectsList","ObjectItem","NoObjects","ChartInstanceContextEvent","OperationBar","attrs","OperationBarPlaceholder","Context","React","createContext","displayName","ChartInstanceContextProvider","props","children","useState","EventEmitter","emitter","context","download","Promise","resolve","reject","once","IMAGE","dataUrl","emit","DOWNLOAD","on","event","listener","off","sendImage","Provider","useChartInstanceContext","useContext","ChartAxisType","IndicatorAggregator","ChartKey","ChartContainer","Chart","EChart","className","theme","useTheme","chartInstance","rootRef","useRef","chart","setChart","useEffect","current","resizeObserver","ResizeObserver","resize","observe","disconnect","echarts","init","backgroundColor","chartBgColorLight","setOption","getDataURL","pixelRatio","window","devicePixelRatio","ref","average","params","items","keyCount","final","reduce","label","aggregator","AVERAGE","count","COUNT","maximum","indicator","a","b","isBefore","MAXIMUM","median","sorted","sort","minus","y","localeCompare","MEDIAN","minimum","MINIMUM","summary","findAggregator","SUMMARY","NONE","aggregate","seriesData","keys","fill","key","exists","get","set","push","Map","values","aggregated","detectDimensionCategory","dimension","VALUE","CATEGORY","isDimensionValid","asDimensionData","topicName","getDimensionValue","row","parsed","getDimensionLabel","buildSingleAxis","undefined","getAxisValue","dimensions","d","isIndicatorValid","getIndicatorLabel","getSeriesDataWhenDimensionsOnXAxis","getSeriesDataWhen2DimensionsOnXYAxis","getSeriesDataAsTree","groups","colorIndex","topMap","allMap","suspectedMap","parentKey","me","itemStyle","color","BaseColors24","parent","format","Intl","NumberFormat","maximumFractionDigits","node","round","pow","getValidDimensionsAndIndicators","indicators","filter","buildTitle","title","text","bottom","left","textAlign","textStyle","fontColor","fontSize","lineHeight","fontWeight","fontBold","buildRichLabel","colors","rich","borderRadius","width","height","padding","buildOptionsForPieOrDoughnutOrNightingale","rose","innerRing","settings","validDimensions","series","radius","center","clockwise","avoidLabelOverlap","roseType","show","position","alignTo","formatter","percent","dataIndex","labelLine","normal","length2","lineStyle","tooltip","item1","item2","grid","top","containLabel","trigger","linearTypes","x2","y2","buildOptions","Object","v1","decorate","BaseColors12","BaseColors6","colorCount","itemStyles","colour","colorStops","offset","fade","rgb","buildItemStyle","CountDoughnut","renderItem","api","categoryIndex","coord","size","shape","graphic","clipRectByRect","coordSys","style","add","yAxis","owner","taskCount","memberCount","minStartDate","d1","d2","maxEndDate","dataZoom","filterMode","showDataShadow","borderColor","chartZoomSliderBgColor","handleIcon","chartZoomHandlerIcon","handleSize","labelFormatter","xAxis","min","max","encode","itemIndex","Gantt","SegmentBar","segments","definition","decorated","segment","take","decoratedData","SoftwareImplementation","code","expressions","body","demo","tasks","charts","chartData","Category","Owner","categoryBy","groupBy","default","Task","StartDate","EndDate","enabled","Workdays","reason","NoDomain","InsuranceVisualization","MarketingInvestigating","SalesPlanning","AssetsManagement","listTopDomains","domains","hasMore","getDomainDemoData","location","fetch","response","setDomain","emptySetter","getDomain","clearDomain","setData","getData","emptyGetter","clearData","GuideContextProvider","domain","setContext","operator","useGuideContext","ParagraphButton","Button","AddParagraphButton","rnd","onAdd","inkType","ButtonType","PRIMARY","onClick","icon","faParagraph","HideDiv","AsRnd","lock","hidden","enableResizing","disableDragging","ChartHeader","ChartTitle","ChartOperators","ChartSettings","ChartSettingsItem","ChartSettingsItemLabel","ChartSettingsItemEditor","HideOnPrintProvider","hideCharts","setHideCharts","hide","recover","clear","useHideOnPrintContext","ChartSettingsContextProvider","active","setActive","toggleActive","useChartSettingsContext","ChartContextProvider","hideOnPrintContext","containerRef","expanded","setExpanded","toggleExpanded","setTimeout","scrollIntoView","behavior","block","inline","hideOnPrint","draggable","parentElement","rect","getBoundingClientRect","transform","opacity","transition","data-expanded","useChartContext","buildOptionsForBarOrLine","defaultType","validIndicators","dimensionValues","radix","r","flat","buildAxis","axisLabel","interval","s","axisPointer","detectIndicatorCategory","axisData","asIndicatorData","isCountSatisfied","inspect","validate","advises","buildDimensionsCountAtLeastValidator","buildIndicatorsCountAtLeastValidator","buildIndicatorsCountAtMostValidator","Bar","BAR","settingsValidators","Doughnut","DOUGHNUT","Line","LINE","Nightingale","NIGHTINGALE","Pie","PIE","ChartDefinitions","SCATTER","SUNBURST","levels","r0","TREE","right","initialTreeDepth","distance","TREEMAP","leafDepth","ChartMap","CustomChart","ErrorWrapper","errorWrapper","DropdownInCell","Dropdown","DimensionInteractionType","DropdownContainer","DropdownItem","please","require","onOptionChanged","removable","onRemove","data-require","onChange","faTimes","DimensionDropdown","onChanged","dropdownOptions","columnName","onFactorChanged","option","CHANGE","REMOVE","IndicatorInteractionType","SubDropdownItem","IndicatorDropdown","aggregatorDropdownItem","aggregateOptions","onAggregatorChanged","faMinus","InputInCell","Input","InputItem","placeholder","onValueChanged","DownloadButton","visible","responsive","useResponsive","alert","useAlert","onDownloadClicked","mobile","link","document","createElement","href","click","data-visible","data-widget","faDownload","HideOnPrintButton","chartContext","data-role","faEyeSlash","ResizeButtons","container","data-size-fixed-visible","faExpandArrowsAlt","faCompressArrowsAlt","SavedCustomChartContextProvider","setCharts","replacement","replaced","useSavedCustomChartContext","SaveButton","customCharts","JSON","parse","stringify","faThumbtack","SettingsButton","data-active","faCog","SettingsContainer","gridColumns","setGridColumns","data-columns","ChartBody","ChartDisabledPlaceholder","DarkenColors24","SettingsLeading","ChartErrorReminder","ChartDefOptions","def","CustomChartPanel","onSettingsChanged","canSave","settingsContext","guideContext","onIndicatorChanged","interactionType","onDimensionChanged","factorOptions","valid","isSettingsValid","settingsValid","invalidAdvises","data-settings-active","advise","faChartBar","faChartPie","faChartArea","faChartLine","onDropdownValueChanged","faPlus","AutonomousCustomChartPanel","setSettings","AutonomousCustomChart","CustomCharts","TrashButton","HideCharts","HiddenChartsStackButton","has","onRecoverClicked","faTrashAlt","MetricsContainer","QuillFonts","Quill","import","whitelist","modules","toolbar","font","header","list","indent","script","RichEditorRndContainer","RichEditorContainer","RichEditor","locked","setLocked","faUnlock","faLock","Paragraphs","texts","onTextsChanged","onTextChanged","onTextRemove","t","uuid","GroupBy","groupByOptions","PredefinedChartPanel","guide","buildChartOptions","setOptions","hasSettings","chartEnabled","PredefinedCharts","PrintButton","PrintPdfButton","onPrint","faPrint","QuitButton","QuitExportButton","onQuited","faDoorOpen","BuildMetrics","history","useHistory","setRnd","setTexts","metricsContainerRef","onBeforePrint","containerRect","querySelectorAll","documentElement","setAttribute","onAfterPrint","removeAttribute","addEventListener","removeEventListener","hasTopic","data-rnd","data-has-data","data-has-active","toDomain","Path","GUIDE_IMPORT_DATA","GUIDE_MEASURE_INDICATOR","v4","print","Domains","maxMobileWidth","DomainButton","minDeskWidth","MoreDomainsButton","DomainSelect","notImpl","useNotImplemented","fetchDomains","selectedDomain","equals","onDomainClicked","buttonLabel","buttonType","DEFAULT","data-selected","faCheck","readFromCsv","file","endsWith","Error","hash","crypto","createHash","update","digest","err","output","filename","rowIndex","valueIndex","readFromJson","parseFile","all","read","files","parseObject","parseData","parseArray","columnsMap","native","childTypes","ExistsFiles","itemCount","SelectedFiles","SelectedFileRow","Files","ImportData","setFiles","syncNewData","parsedFiles","existsData","allExistsHash","allHash","f1","f2","onNextClicked","GUIDE_MAPPING_FACTOR","existsDataCount","onExistsDataRemoveClicked","onUseSampleClicked","evt","stopPropagation","demoDef","ext","substr","lastIndexOf","hasData","k1","k2","removeFile","input","multiple","accept","onchange","selectedFiles","existsFileNames","originalName","toReadableFileSize","onFilesSelected","faBook","GUIDE_DOMAIN_SELECT","DropdownInGrid","InputInGrid","ObjectDetail","ObjectDetailHeader","ObjectDetailHeaderCell","ObjectDetailBodyRow","ObjectDetailBodyCell","asDisplayName","indexOf","split","reverse","gatherAsColumnMap","existsColumn","generateUniqueKey","originKey","regexp","generateUniqueName","originName","generateUniqueLabel","originLabel","DetailHeader","DetailBodyRow","DetailBodyCell","typeOptions","k","MappingFactor","objectKeys","activeKey","setActiveKey","onObjectSelected","activeObject","onColumnLabelChange","onTypeChanged","renderColumns","CustomDomainExpression","DetailBodyOperationCell","DetailBodySettingCell","CalcColumn","nameAutoGenerated","setNameAutoGenerated","calcHandle","setCalcHandle","calcColumn","created","incorrect","calc","clearTimeout","data-incorrect","expressionCode","onCalcTypeChanged","oldName","faExclamation","faEquals","ObjectColumn","NativeColumn","asDisplayType","childColumn","Step","MeasureObjectItem","MeasureIndicator","onObjectClicked","columnsVisible","faAngleUp","calcColumnTypeOptions","existsColumns","renderCalcColumns","GUIDE_BUILD_METRICS","StepLabels","StepsContainer","CurrentStep","StepDots","ul","StepDot","li","Current","step","Steps","useLocation","showDomain","matchPath","pathname","to","HOME","data-current","data-performed","BUILD_METRICS","faFlagCheckered","faTruckPickup","BackgroundImages","DomainSelectImage","ImportDataImage","MappingFactorImage","MeasureIndicatorImage","BuildMetricsImage","ExportReportImage","HomePage","Page","DomainChecker","domainCode","useParams","Guide","DOMAIN_SELECT","IMPORT_DATA","MAPPING_FACTORS","MEASURE_INDICATORS","path","baseColors1","baseColors2","base24","darken","LightColors24","lighten","LighterColors24","atBottom","innerHeight","Label","span","Options","minWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","getPosition","selectedLabel","select","rest","state","setState","onScroll","selectedOption","onOptionClicked","ret","data-options-visible","role","tabIndex","onBlur","faCaretDown"],"mappings":"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","file":"static/js/guide.b080188d.chunk.js","sourcesContent":["import { DataColumnType } from './types';\n\nconst BOOLEAN_TEXTS = [ 'TRUE', 'T', 'FALSE', 'F', 'YES', 'Y', 'NO', 'N' ];\nconst NUMBER_PATTERN = /^(-?\\d+)(\\.\\d+)?$/;\nconst DATE_PATTERN = /^(\\d{2}|\\d{4})([-/])(\\d{1,2})([-/])(\\d{1,2})$/;\nconst TIME_PATTERN = /^(\\d{1,2}):(\\d{1,2})$/;\nconst DATETIME_PATTERN = /^(\\d{2}|\\d{4})([-/])(\\d{1,2})([-/])(\\d{1,2})([\\sT])(\\d{1,2}):(\\d{1,2})(:(\\d{1,2}))?$/;\n\nexport const detectDataType = (value: any): DataColumnType => {\n\tif (!value) {\n\t\treturn DataColumnType.UNKNOWN;\n\t} else if (typeof value === 'number') {\n\t\treturn DataColumnType.NUMERIC;\n\t} else if (typeof value === 'boolean') {\n\t\treturn DataColumnType.BOOLEAN;\n\t} else if (Array.isArray(value)) {\n\t\treturn DataColumnType.ARRAY;\n\t} else if (typeof value === 'string') {\n\t\tif (BOOLEAN_TEXTS.includes(value.toUpperCase())) {\n\t\t\treturn DataColumnType.BOOLEAN;\n\t\t} else if (NUMBER_PATTERN.test(value)) {\n\t\t\treturn DataColumnType.NUMERIC;\n\t\t} else if (DATE_PATTERN.test(value) && !isNaN(new Date(value).getTime())) {\n\t\t\treturn DataColumnType.DATE;\n\t\t} else if (TIME_PATTERN.test(value) && !isNaN(new Date(value).getTime())) {\n\t\t\treturn DataColumnType.TIME;\n\t\t} else if (DATETIME_PATTERN.test(value) && !isNaN(new Date(value).getTime())) {\n\t\t\treturn DataColumnType.DATETIME;\n\t\t} else {\n\t\t\treturn DataColumnType.TEXT;\n\t\t}\n\t} else {\n\t\treturn DataColumnType.OBJECT;\n\t}\n};\n","import dayjs, { OpUnitType, QUnitType } from 'dayjs';\nimport { CalculatedDataColumn, DataColumnType, DataTopic } from '../data/types';\nimport { detectDataType } from '../data/utils';\nimport { expressionStyle, fontWeightBold, fontWeightNormal, parameterLeadStyle } from './styles';\n\n//EXPLAIN according to use \"eval\" in expression calculation,\n// functions must be defined in this file, otherwise eval cannot find them.\n// because webpack changes function names on export/import case.\n// use self-executing anonymous function, is just for folder purpose.\n// this file will be very large after many functions supported, folding is reading helpful.\n\nconst {\n\tworkdays, days, dateDiff,\n\tyear, month, quarter, week, day, weekday, hour, minute, second,\n\tprintDocs: printDateTimeDocs\n} = (() => {\n\tconst workdays = (start: string, end: string) => {\n\t\tconst endDate = dayjs(end);\n\t\tconst endWeekday = endDate.day();\n\t\tconst startDate = dayjs(start);\n\t\tconst startWeekday = startDate.day();\n\n\t\tlet diffDays = endDate.diff(startDate, 'day') + 1;\n\t\tif (endWeekday >= startWeekday && diffDays <= 7) {\n\t\t\t// same week\n\t\t\treturn endWeekday - startWeekday - (startWeekday === 0 ? 1 : 0) + (endWeekday === 6 ? 1 : 0);\n\t\t} else if (endWeekday >= startWeekday) {\n\t\t\treturn Math.floor(diffDays / 7) * 5 + ((endWeekday === 6 ? 5 : endWeekday) - startWeekday);\n\t\t} else {\n\t\t\treturn Math.floor(diffDays / 7) * 5 + (6 - (startWeekday === 0 ? 1 : startWeekday)) + endWeekday;\n\t\t}\n\t};\n\tworkdays.doc = (styles: { expression: string }) => {\n\t\tconsole.info('%cWorkdays duration: %cworkdays({{StartDate}}, {{EndDate}})', fontWeightBold, styles.expression);\n\t};\n\tconst days = (start: string, end: string) => dayjs(end).diff(dayjs(start), 'day') + 1;\n\tdays.doc = (styles: { expression: string }) => {\n\t\tconsole.info('%cDays duration: %cdays({{StartDate}}, {{EndDate}})', fontWeightBold, styles.expression);\n\t};\n\tconst dateDiff = (start: string, end: string, unit?: QUnitType | OpUnitType, float?: boolean) => {\n\t\tconst endDate = dayjs(end);\n\t\tconst startDate = dayjs(start);\n\t\treturn endDate.diff(startDate, unit, float);\n\t};\n\tdateDiff.doc = (styles: { expression: string, parameterLead: string }) => {\n\t\tconsole.groupCollapsed('Time duration: %cdateDiff({{StartDate}}, {{EndDate}}), \\'unit\\', float)', [ fontWeightNormal, styles.expression ].join(';'));\n\t\tconsole.group('%cOptional Parameter [unit]:', styles.parameterLead);\n\t\tconsole.info('Options: y | year | Q | quarter | M | month | w | week | d | day | h | hour | m | minute | s | second | ms | millisecond. Default in millisecond.');\n\t\tconsole.info('Single quote is required in expression when parameter is given explicitly.');\n\t\tconsole.groupEnd();\n\t\tconsole.group('%cOptional Parameter [float]:', styles.parameterLead);\n\t\tconsole.info('Options: true | false. Default in false.');\n\t\tconsole.groupEnd();\n\t\tconsole.groupEnd();\n\t};\n\n\tconst year = (date: string) => dayjs(date).year();\n\tconst month = (date: string) => dayjs(date).month() + 1;\n\tconst quarter = (date: string) => dayjs(date).quarter();\n\tconst week = (date: string) => dayjs(date).week();\n\tconst day = (date: string) => dayjs(date).date();\n\tconst weekday = (date: string) => dayjs(date).day();\n\tconst hour = (date: string) => dayjs(date).hour();\n\tconst minute = (date: string) => dayjs(date).minute();\n\tconst second = (date: string) => dayjs(date).second();\n\n\tconst printDocs = () => {\n\t\tconsole.groupCollapsed('Date & Time Functions');\n\t\t[ workdays, days, dateDiff ].forEach(func => func.doc({\n\t\t\texpression: expressionStyle,\n\t\t\tparameterLead: parameterLeadStyle\n\t\t}));\n\t\tconst docOfDatePart = (funcName: string, styles: { expression: string }) => {\n\t\t\tconsole.info(`%c${funcName}: %c${funcName}({{Date}})`, `text-transform:capitalize;${fontWeightBold}`, styles.expression);\n\t\t};\n\t\t[\n\t\t\tyear, month, quarter, week, day, weekday, hour, minute, second\n\t\t].forEach(func => docOfDatePart(func.name, { expression: expressionStyle }));\n\t\tconsole.groupEnd();\n\t};\n\n\treturn {\n\t\tworkdays, days, dateDiff,\n\t\tyear, month, quarter, week, day, weekday, hour, minute, second,\n\t\tprintDocs\n\t};\n})();\n// avoid \"declared but not use\" compile warning\n[\n\tworkdays, days, dateDiff,\n\tyear, month, quarter, week, day, weekday, hour, minute, second\n].forEach(x => x);\n\n// print docs\n(() => {\n\tconsole.groupCollapsed('%cSupported expression syntax on calculating factor directly on watchmen frontend.',\n\t\t'background-color:chocolate;padding:2px 16px;line-height:18px;font-size:14px;border-radius:11px;color:#fff');\n\n\t/* eslint-disable */\n\t// property declaration in expression\n\t{\n\t\tconsole.groupCollapsed('Property Declaration in Expression');\n\t\tconsole.info('Property name must be wrapped by double braces.');\n\t\tconsole.info('For example: %c{{StartDate}}%c, %cStartDate%c is property name of topic.', expressionStyle, '', expressionStyle, '');\n\t\tconsole.groupEnd();\n\t}\n\t// result type declaration in expression\n\t{\n\t\tconsole.groupCollapsed('Result Type Declaration in Expression');\n\t\tconsole.info('Result type can be appointed explicitly in expression, otherwise it is detected by engine itself, may cause misunderstanding in some cases.');\n\t\tconsole.info('For example: %cnumeric:month({{StartDate}})%c, then expression result is a number.', expressionStyle, '');\n\t\tconsole.info('Supported types: %cnumeric%c, %cboolean%c, %ctext%c, %cdate%c, %ctime%c, %cdatetime%c.', expressionStyle, '', expressionStyle, '', expressionStyle, '', expressionStyle, '', expressionStyle, '', expressionStyle, '');\n\t\tconsole.groupEnd();\n\t}\n\t// date & time functions\n\tprintDateTimeDocs();\n\t/* eslint-disable */\n\n\tconsole.groupEnd();\n})();\n\nconst VARIABLE_PATTERN = /{{(((?![{}]).)+)}}/m;\n/**\n * will change property value or create property on given target\n */\nexport const calculate = (options: {\n\ttarget: any,\n\tpropName: string,\n\texpression: string,\n\ttopic: DataTopic\n}): void => {\n\tconst { target, propName, expression, topic } = options;\n\n\tif (!expression || expression.trim().length === 0) {\n\t\t// no expression defined\n\t\treturn;\n\t}\n\n\tlet result = expression;\n\tlet match: RegExpExecArray | null = VARIABLE_PATTERN.exec(result);\n\twhile (match) {\n\t\tconst matchedWord = match[0];\n\t\tconst matchedPropName = match[1];\n\t\tconst startIndex = match.index;\n\t\tlet value = target[matchedPropName];\n\n\t\tconst column = topic.columns.find(c => c.name === matchedPropName);\n\t\tswitch (true) {\n\t\t\tcase value == null:\n\t\t\t\tvalue = 'null';\n\t\t\t\tbreak;\n\t\t\tcase !column || [ DataColumnType.ARRAY, DataColumnType.OBJECT, DataColumnType.UNKNOWN ].includes(column.type):\n\t\t\t\t// type invisible\n\t\t\t\tvalue = `'${value.replace(/'/g, '\\\\\\'')}'`;\n\t\t\t\tbreak;\n\t\t\tcase column!.type === DataColumnType.BOOLEAN:\n\t\t\t\tswitch (true) {\n\t\t\t\t\tcase typeof value === 'boolean':\n\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase [ 'TRUE', 'T', 'YES', 'Y' ].includes(value.toUpperCase()):\n\t\t\t\t\t\tvalue = 'true';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase [ 'FALSE', 'F', 'NO', 'N' ].includes(value.toUpperCase()):\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = 'false';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase column!.type === DataColumnType.NUMERIC:\n\t\t\t\t// keep value as literal\n\t\t\t\tconst v = parseFloat(value);\n\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\tvalue = 'null';\n\t\t\t\t} else {\n\t\t\t\t\tvalue = `${value}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase [ DataColumnType.DATE, DataColumnType.TIME, DataColumnType.DATETIME ].includes(column!.type):\n\t\t\t\tvalue = value.trim();\n\t\t\t\tif (value.length === 0) {\n\t\t\t\t\tvalue = 'null';\n\t\t\t\t} else {\n\t\t\t\t\tvalue = `'${value}'`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase column!.type === DataColumnType.TEXT:\n\t\t\tdefault:\n\t\t\t\tvalue = `'${value.replace(/'/g, '\\\\\\'')}'`;\n\t\t\t\tbreak;\n\t\t}\n\t\tresult = `${result.substring(0, startIndex)}${value}${result.substring(startIndex + matchedWord.length)}`;\n\n\t\t// next round\n\t\tmatch = VARIABLE_PATTERN.exec(result);\n\t}\n\n\ttry {\n\t\t// TODO use eval() here, should be replaced with execution on AST\n\t\t// console.info(`Evaluate expression[origin=${expression}, replaced=${result}].`);\n\t\t// eslint-disable-next-line\n\t\tlet value = eval(result);\n\t\t// console.log(value);\n\t\tif (value != null && ![ 'string', 'boolean', 'number' ].includes(typeof value)) {\n\t\t\t// let it be undefined\n\t\t\tvalue = void 0;\n\t\t}\n\t\t// eslint-disable-next-line\n\t\ttarget[propName] = value;\n\t} catch (e) {\n\t\tconsole.error(`Error occurred on evaluate expression[origin=${expression}, replaced=${result}].`);\n\t\tconsole.error(e);\n\t}\n};\n\nexport const isExpressionIncorrect = (topic: DataTopic, column: CalculatedDataColumn) => {\n\tconst expression = (column.expression || '').trim();\n\tif (!expression) {\n\t\t// no expression\n\t\treturn true;\n\t}\n\n\tconst variables = expression.match(/{{(((?![{}]).)+)}}/g) || [];\n\tif (variables.length === 0) {\n\t\t// no variables\n\t\treturn true;\n\t}\n\n\tconst allColumnNames = topic.columns.map(c => c.name);\n\t// there is no loop refer, no incorrect refer\n\treturn -1 !== variables.findIndex(variable => {\n\t\tconst x = variable.replace('{{', '').replace('}}', '');\n\t\tif (x === column.name) {\n\t\t\t// use myself, loop\n\t\t\treturn true;\n\t\t} else if (!allColumnNames.includes(x)) {\n\t\t\t// cannot match any column\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n};\n\nconst detectColumnTypeByExpression = (column: CalculatedDataColumn): boolean => {\n\tlet { expression } = column;\n\treturn [\n\t\tDataColumnType.TEXT, DataColumnType.BOOLEAN, DataColumnType.NUMERIC,\n\t\tDataColumnType.DATE, DataColumnType.TIME, DataColumnType.DATETIME\n\t].map(x => ({ type: x, prefix: `${x}:` })).some(({ type, prefix }) => {\n\t\tif (expression.startsWith(prefix)) {\n\t\t\texpression = expression.substring(prefix.length);\n\t\t\tcolumn.type = type;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n};\n\nexport const calculateColumn = (topic: DataTopic, column: CalculatedDataColumn): void => {\n\tconst { name, expression } = column;\n\tif (name || expression) {\n\t\tconst detected = detectColumnTypeByExpression(column);\n\t\t(topic.data || []).forEach(item => {\n\t\t\tcalculate({\n\t\t\t\ttarget: item,\n\t\t\t\tpropName: name,\n\t\t\t\texpression: expression,\n\t\t\t\ttopic\n\t\t\t});\n\t\t});\n\t\tif (!detected) {\n\t\t\tconst types = (topic.data || []).map(item => detectDataType(item[name]));\n\t\t\tconst distinctTypes = Array.from(new Set(types));\n\t\t\tif (distinctTypes.includes(DataColumnType.TEXT)) {\n\t\t\t\t// any value is detected as text\n\t\t\t\tcolumn.type = DataColumnType.TEXT;\n\t\t\t} else {\n\t\t\t\t// otherwise all types should be same\n\t\t\t\tcolumn.type = distinctTypes[0];\n\t\t\t}\n\t\t}\n\t}\n};","export const fontWeightBold = 'font-weight:bold';\nexport const fontWeightNormal = 'font-weight:normal';\nexport const expressionStyle = 'background-color:chocolate;padding:2px 16px;line-height:14px;font-size:12px;border-radius:9px;color:#fff';\nexport const parameterLeadStyle = 'color:chocolate;font-weight:bold';\n","export default __webpack_public_path__ + \"static/media/build-metrics.5dace14c.png\";","export default __webpack_public_path__ + \"static/media/domain-select.c6fbb39d.png\";","export default __webpack_public_path__ + \"static/media/export-report.9e1cf1dd.png\";","export default __webpack_public_path__ + \"static/media/import-data.eb76619c.png\";","export default __webpack_public_path__ + \"static/media/mapping-factor.27fe399d.png\";","export default __webpack_public_path__ + \"static/media/measure-indicator.a0bf45a4.png\";","import styled from 'styled-components';\n\nexport const ObjectsContainer = styled.div`\n\tdisplay: flex;\n\tmargin: 0 var(--margin);\n\tborder-radius: calc(var(--border-radius) * 2);\n\tborder: var(--border);\n\tmin-height: 350px;\n\toverflow: hidden;\n`;\nexport const ObjectsList = styled.div`\n\tposition: relative;\n\twidth: 30%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-right: var(--border);\n\t&[data-has-data=false] {\n\t\twidth: 100%;\n\t\tborder-right: 0;\n\t\t> div {\n\t\t\tdisplay: flex;\n\t\t}\n\t\t~ div {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\t> div:nth-child(n + 11):nth-last-child(2) {\n\t\tborder-bottom-color: transparent;\n\t}\n`;\nexport const ObjectItem = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\theight: var(--height);\n\tpadding: 0 calc(var(--margin) / 2);\n\tcursor: pointer;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tborder-bottom: var(--border);\n\ttransition: all 300ms ease-in-out;\n\t&:hover {\n\t\tbackground-color: var(--hover-color);\n\t}\n\t&[data-active=true] {\n\t\tbackground-color: var(--active-color);\n\t\tcolor: var(--invert-color);\n\t}\n`;\n\nexport const NoObjects = styled.div`\n\tdisplay: none;\n\theight: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1.2em;\n\tfont-weight: var(--font-bold);\n\tcursor: pointer;\n\ttransition: all 300ms ease-in-out;\n\t&:hover {\n\t\ttransform: scale(1.05);\n\t}\n\t> span {\n\t\tmargin: 0 var(--letter-gap);\n\t\ttext-decoration: underline;\n\t}\n`;\n","import styled from 'styled-components';\n\nexport const OperationBar = styled.div.attrs({\n\t'data-widget': 'guide-operation-bar'\n})`\n\tdisplay: flex;\n\tmargin-top: var(--margin);\n\tpadding: 0 var(--margin);\n\t> button:not(:first-child) {\n\t\tmargin-left: var(--margin);\n\t}\n`;\nexport const OperationBarPlaceholder = styled.div`\n\tflex-grow: 1;\n`;\n","import { EventEmitter } from 'events';\nimport React, { useState } from 'react';\n\nexport interface ChartInstanceContext {\n\t/** get data url if chart rendered */\n\tdownload: () => Promise<string>;\n\tsendImage: (dataUrl: string | null) => void;\n\ton: (event: ChartInstanceContextEvent, listener: () => void) => void;\n\toff: (event: ChartInstanceContextEvent, listener: () => void) => void;\n}\n\nconst Context = React.createContext<ChartInstanceContext>({} as ChartInstanceContext);\nContext.displayName = 'ChartInstanceContext';\n\nexport enum ChartInstanceContextEvent {\n\tDOWNLOAD = 'download',\n\tIMAGE = 'image'\n}\n\nexport const ChartInstanceContextProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst [ emitter ] = useState(new EventEmitter());\n\tconst context = {\n\t\tdownload: () => {\n\t\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\t\temitter.once(ChartInstanceContextEvent.IMAGE, (dataUrl: string) => {\n\t\t\t\t\tdataUrl ? resolve(dataUrl) : reject();\n\t\t\t\t});\n\t\t\t\temitter.emit(ChartInstanceContextEvent.DOWNLOAD);\n\t\t\t});\n\t\t},\n\t\ton: (event: ChartInstanceContextEvent, listener: () => void) => {\n\t\t\temitter.on(event, listener);\n\t\t},\n\t\toff: (event: ChartInstanceContextEvent, listener: () => void) => {\n\t\t\temitter.off(event, listener);\n\t\t},\n\t\tsendImage: (dataUrl: string | null) => {\n\t\t\temitter.emit(ChartInstanceContextEvent.IMAGE, dataUrl);\n\t\t}\n\t};\n\n\treturn <Context.Provider value={context}>\n\t\t{children}\n\t</Context.Provider>;\n};\n\nexport const useChartInstanceContext = () => {\n\treturn React.useContext(Context);\n};\n","import { ECharts } from 'echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/custom';\nimport 'echarts/lib/chart/effectScatter';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/chart/scatter';\nimport 'echarts/lib/chart/sunburst';\nimport 'echarts/lib/chart/tree';\nimport 'echarts/lib/chart/treemap';\nimport 'echarts/lib/component/axisPointer';\nimport 'echarts/lib/component/dataZoom';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/tooltip';\nimport echarts from 'echarts/lib/echarts';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport { Theme } from '../theme/types';\nimport { ChartInstanceContextEvent, useChartInstanceContext } from './chart-instance-context';\n\nconst ChartContainer = styled.div.attrs({\n\t'data-widget': 'chart'\n})`\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\nconst Chart = styled.div`\n\tflex-grow: 1;\n\toverflow: hidden;\n`;\n\nexport const EChart = (props: {\n\toptions: any,\n\tclassName?: string\n}) => {\n\tconst { className, options } = props;\n\n\tconst theme = useTheme() as Theme;\n\tconst chartInstance = useChartInstanceContext();\n\tconst rootRef = useRef<HTMLDivElement>(null);\n\tconst [ chart, setChart ] = useState<ECharts | null>(null);\n\n\tuseEffect(() => {\n\t\tif (rootRef.current) {\n\t\t\t// @ts-ignore\n\t\t\tconst resizeObserver = new ResizeObserver(() => {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart.resize();\n\t\t\t\t}\n\t\t\t});\n\t\t\tresizeObserver.observe(rootRef.current);\n\t\t\treturn () => resizeObserver.disconnect();\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tconst chart = echarts.init(rootRef.current!);\n\t\toptions.backgroundColor = options.backgroundColor ?? theme.chartBgColorLight;\n\t\tchart.setOption(options, true);\n\t\tsetChart(chart);\n\t}, [ options, theme ]);\n\tuseEffect(() => {\n\t\tconst listener = () => {\n\t\t\tconst chart = echarts.init(rootRef.current!);\n\t\t\tchart.setOption(options, true);\n\t\t\tconst dataUrl = chart.getDataURL({\n\t\t\t\ttype: 'png',\n\t\t\t\tpixelRatio: window.devicePixelRatio,\n\t\t\t\tbackgroundColor: 'transparent'\n\t\t\t});\n\t\t\tchartInstance.sendImage(dataUrl);\n\t\t};\n\t\tchartInstance.on(ChartInstanceContextEvent.DOWNLOAD, listener);\n\t\treturn () => {\n\t\t\tchartInstance.off(ChartInstanceContextEvent.DOWNLOAD, listener);\n\t\t};\n\t});\n\n\treturn <ChartContainer>\n\t\t<Chart className={className} ref={rootRef}/>\n\t</ChartContainer>;\n};","import { DataColumn, DataSet } from '../../data/types';\nimport { Theme } from '../../theme/types';\n\nexport enum ChartAxisType {\n\tCATEGORY = 'category',\n\tTIME = 'time',\n\tVALUE = 'value'\n}\n\nexport enum IndicatorAggregator {\n\tNONE = 'none',\n\tCOUNT = 'count',\n\tSUMMARY = 'sum',\n\tAVERAGE = 'avg',\n\tMEDIAN = 'med',\n\tMAXIMUM = 'max',\n\tMINIMUM = 'min'\n}\n\nexport interface ChartSettingsIndicator {\n\ttopicName?: string;\n\tcolumn?: DataColumn;\n\tlabel?: string;\n\trequired?: boolean;\n\taggregator?: IndicatorAggregator\n}\n\nexport interface ChartSettingsDimension {\n\ttopicName?: string;\n\tcolumn?: DataColumn;\n\tlabel?: string;\n\trequired?: boolean;\n}\n\nexport interface ChartSettings {\n\tkey?: ChartKey;\n\ttitle?: string;\n\tindicators: Array<ChartSettingsIndicator>;\n\tdimensions: Array<ChartSettingsDimension>;\n}\n\nexport enum ChartKey {\n\tBAR = 'bar',\n\tLINE = 'line',\n\tSCATTER = 'scatter',\n\tPIE = 'pie',\n\tDOUGHNUT = 'doughnut',\n\tNIGHTINGALE = 'nightingale',\n\tSUNBURST = 'sunburst',\n\tTREE = 'tree',\n\tTREEMAP = 'treemap'\n}\n\nexport interface ChartOptions {\n}\n\nexport type ChartSettingsValidator = (settings: ChartSettings) => Array<string>;\n\nexport interface ChartDefinition {\n\tname: string;\n\tkey: ChartKey;\n\tbuildOptions: (params: {\n\t\tdata: DataSet,\n\t\ttheme: Theme,\n\t\tsettings: ChartSettings\n\t}) => ChartOptions;\n\tsettingsValidators: ChartSettingsValidator | Array<ChartSettingsValidator>\n}\n\nexport interface ChartBarDefinition extends ChartDefinition {\n\tkey: ChartKey.BAR\n}\n\nexport interface ChartLineDefinition extends ChartDefinition {\n\tkey: ChartKey.LINE\n}\n\nexport interface ChartScatterDefinition extends ChartDefinition {\n\tkey: ChartKey.SCATTER\n}\n\nexport interface ChartPieDefinition extends ChartDefinition {\n\tkey: ChartKey.PIE\n}\n\nexport interface ChartDoughnutDefinition extends ChartDefinition {\n\tkey: ChartKey.DOUGHNUT\n}\n\nexport interface ChartNightingaleDefinition extends ChartDefinition {\n\tkey: ChartKey.NIGHTINGALE\n}\n\nexport interface ChartSunburstDefinition extends ChartDefinition {\n\tkey: ChartKey.SUNBURST\n}\n\nexport interface ChartTreeDefinition extends ChartDefinition {\n\tkey: ChartKey.TREE\n}\n\nexport interface ChartTreeMapDefinition extends ChartDefinition {\n\tkey: ChartKey.TREEMAP\n}\n\nexport type SeriesDataItem = Array<any>;\nexport type SeriesData = Array<SeriesDataItem>;\nexport type AggregatorParameters = {\n\titems: Array<SeriesDataItem>;\n\tindicator: ChartSettingsIndicator;\n\tkeyCount: number;\n}\nexport type AggregateResult = {\n\taggregator: IndicatorAggregator\n\tvalue: any;\n\tlabel: string;\n}\nexport type Aggregator = (params: AggregatorParameters) => AggregateResult;\n","import { AggregateResult, AggregatorParameters, IndicatorAggregator } from '../../types';\n\nexport const average = (params: AggregatorParameters): AggregateResult => {\n\tconst { items, keyCount } = params;\n\tconst final = items.reduce((final, item) => (final || 0) + (item[keyCount] || 0) * 1, 0) / items.length;\n\treturn { value: final, label: `Average: ${final}`, aggregator: IndicatorAggregator.AVERAGE };\n};\n","import { AggregateResult, AggregatorParameters, IndicatorAggregator } from '../../types';\n\nexport const count = (params: AggregatorParameters): AggregateResult => {\n\tconst { items } = params;\n\treturn { value: items.length, label: `Count: ${items.length}`, aggregator: IndicatorAggregator.COUNT };\n\n};","import dayjs from 'dayjs';\nimport { DataColumnType } from '../../../../data/types';\nimport { AggregateResult, AggregatorParameters, IndicatorAggregator } from '../../types';\n\nexport const maximum = (params: AggregatorParameters): AggregateResult => {\n\tconst { items, indicator, keyCount } = params;\n\n\tconst final = items.reduce((final, item) => {\n\t\tif (indicator.column?.type === DataColumnType.NUMERIC) {\n\t\t\treturn ((final || 0) - (item[keyCount] || 0) < 0) ? (item[keyCount] || 0) : (final || 0);\n\t\t} else {\n\t\t\t// date, datetime, time\n\t\t\tif (final == null) {\n\t\t\t\treturn item[keyCount];\n\t\t\t} else if (item[keyCount] == null) {\n\t\t\t\treturn final;\n\t\t\t} else {\n\t\t\t\tconst a = dayjs(final);\n\t\t\t\tconst b = dayjs(item[keyCount]);\n\t\t\t\treturn a.isBefore(b) ? item[keyCount] : final;\n\t\t\t}\n\t\t}\n\t}, items[0][keyCount]);\n\treturn { value: final, label: `Max: ${final}`, aggregator: IndicatorAggregator.MAXIMUM };\n};\n","import { AggregateResult, AggregatorParameters, IndicatorAggregator, SeriesDataItem } from '../../types';\n\nexport const median = (params: AggregatorParameters): AggregateResult => {\n\tconst { items, keyCount } = params;\n\n\tconst sorted = items.sort((a: SeriesDataItem, b: SeriesDataItem): number => {\n\t\tif (a[keyCount] == null) {\n\t\t\treturn b[keyCount] == null ? 0 : -1;\n\t\t} else if (b[keyCount] == null) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\tconst minus = (a[keyCount] || 0) - (b[keyCount] || 0);\n\t\t\tif (isNaN(minus)) {\n\t\t\t\tconst x = (a[keyCount] || '').toString();\n\t\t\t\tconst y = (b[keyCount] || '').toString();\n\t\t\t\treturn x.localeCompare(y);\n\t\t\t} else {\n\t\t\t\treturn minus * -1;\n\t\t\t}\n\t\t}\n\t});\n\tlet final;\n\tif (sorted.length % 2 === 1) {\n\t\tfinal = sorted[Math.floor(sorted.length / 2)];\n\t} else {\n\t\tconst one = sorted[sorted.length / 2 - 1];\n\t\tconst another = sorted[sorted.length / 2];\n\t\t// to avoid compile warning here, use a variable instead of constant\n\t\tconst coefficient = 1;\n\t\tfinal = ((one as unknown as number * coefficient) + (another as unknown as number * coefficient)) / 2;\n\t}\n\treturn { value: final, label: `Median: ${final}`, aggregator: IndicatorAggregator.MEDIAN };\n};\n","import dayjs from 'dayjs';\nimport { DataColumnType } from '../../../../data/types';\nimport { AggregateResult, AggregatorParameters, IndicatorAggregator } from '../../types';\n\nexport const minimum = (params: AggregatorParameters): AggregateResult => {\n\tconst { items, indicator, keyCount } = params;\n\n\tconst final = items.reduce((final, item) => {\n\t\tif (indicator.column?.type === DataColumnType.NUMERIC) {\n\t\t\treturn ((final || 0) - (item[keyCount] || 0) > 0) ? (item[keyCount] || 0) : (final || 0);\n\t\t} else {\n\t\t\t// date, datetime, time\n\t\t\tif (final == null) {\n\t\t\t\treturn item[keyCount];\n\t\t\t} else if (item[keyCount] == null) {\n\t\t\t\treturn final;\n\t\t\t} else {\n\t\t\t\tconst a = dayjs(final);\n\t\t\t\tconst b = dayjs(item[keyCount]);\n\t\t\t\treturn a.isBefore(b) ? final : item[keyCount];\n\t\t\t}\n\t\t}\n\t}, items[0][keyCount]);\n\treturn { value: final, label: `Min: ${final}`, aggregator: IndicatorAggregator.MINIMUM };\n};\n","import { AggregateResult, AggregatorParameters, IndicatorAggregator } from '../../types';\n\nexport const summary = (params: AggregatorParameters): AggregateResult => {\n\tconst { items, keyCount } = params;\n\tconst final = items.reduce((final, item) => {\n\t\treturn (final || 0) + (item[keyCount] || 0) * 1;\n\t}, 0);\n\treturn { value: final, label: `Sum: ${final}`, aggregator: IndicatorAggregator.MINIMUM };\n};\n","import { Aggregator, ChartSettingsIndicator, IndicatorAggregator, SeriesData, SeriesDataItem } from '../../types';\nimport { average } from './average';\nimport { count } from './count';\nimport { maximum } from './maximum';\nimport { median } from './median';\nimport { minimum } from './minimum';\nimport { summary } from './summary';\n\nexport const findAggregator = (indicator: ChartSettingsIndicator): Aggregator | null => {\n\tswitch (indicator.aggregator) {\n\t\tcase IndicatorAggregator.COUNT:\n\t\t\treturn count;\n\t\tcase IndicatorAggregator.SUMMARY:\n\t\t\treturn summary;\n\t\tcase IndicatorAggregator.AVERAGE:\n\t\t\treturn average;\n\t\tcase IndicatorAggregator.MEDIAN:\n\t\t\treturn median;\n\t\tcase IndicatorAggregator.MAXIMUM:\n\t\t\treturn maximum;\n\t\tcase IndicatorAggregator.MINIMUM:\n\t\t\treturn minimum;\n\t\tcase IndicatorAggregator.NONE:\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport const aggregate = (seriesData: SeriesData, indicator: ChartSettingsIndicator, keyCount: number = 1): Array<SeriesDataItem> => {\n\tconst func = findAggregator(indicator);\n\tif (func == null) {\n\t\treturn seriesData;\n\t} else {\n\t\t// simulate a keys array\n\t\tconst keys = new Array(keyCount).fill(1);\n\n\t\tconst map = seriesData.reduce((map, item) => {\n\t\t\t// build string key, key values concatenated by comma\n\t\t\tconst key = keys.map((v, index) => item[index]).map(v => v || '').join(',');\n\t\t\t// group by string key\n\t\t\tlet exists: Array<SeriesDataItem> | undefined = map.get(key);\n\t\t\tif (!exists) {\n\t\t\t\texists = [];\n\t\t\t\tmap.set(key, exists);\n\t\t\t}\n\t\t\texists.push(item);\n\t\t\treturn map;\n\t\t}, new Map<string, Array<SeriesDataItem>>());\n\n\t\t// aggregate each group,\n\t\treturn Array.from(map.values()).reduce((final, group) => {\n\t\t\tconst aggregated: SeriesDataItem = [];\n\t\t\t// copy value from the first item to aggregated item\n\t\t\tgroup[0].forEach((v, index) => aggregated[index] = v);\n\n\t\t\tconst { value, label } = func({ items: group, indicator, keyCount });\n\t\t\taggregated[keyCount] = value;\n\t\t\taggregated[keyCount + 1] = label;\n\t\t\tfinal.push(aggregated);\n\t\t\treturn final;\n\t\t}, [] as Array<SeriesDataItem>);\n\t}\n};\n","import { DataColumnType, DataSet } from '../../../data/types';\nimport { ChartAxisType, ChartSettingsDimension } from '../types';\n\nexport const detectDimensionCategory = (dimension: ChartSettingsDimension): ChartAxisType => {\n\tswitch (dimension.column?.type) {\n\t\tcase DataColumnType.NUMERIC:\n\t\t\treturn ChartAxisType.VALUE;\n\t\tcase DataColumnType.DATE:\n\t\tcase DataColumnType.DATETIME:\n\t\tcase DataColumnType.TIME:\n\t\t\treturn ChartAxisType.TIME;\n\t\tcase DataColumnType.BOOLEAN:\n\t\tcase DataColumnType.TEXT:\n\t\tcase DataColumnType.UNKNOWN:\n\t\tdefault:\n\t\t\treturn ChartAxisType.CATEGORY;\n\t}\n};\nexport const isDimensionValid = (dimension: ChartSettingsDimension): boolean => !!dimension.column;\nexport const asDimensionData = (dimension: ChartSettingsDimension, data: DataSet) => {\n\tconst { topicName, column: { name: propName } = { name: '' } } = dimension;\n\tconst topic = data[topicName!];\n\treturn [ ...new Set((topic.data || []).map(item => item[propName])) ];\n};\nexport const getDimensionValue = (row: any, dimension: ChartSettingsDimension) => {\n\tconst { column: { name: propName } = { name: '' } } = dimension;\n\tconst category = detectDimensionCategory(dimension);\n\tswitch (category) {\n\t\tcase ChartAxisType.CATEGORY:\n\t\t\treturn row[propName] == null ? null : `${row[propName]}`;\n\t\tcase ChartAxisType.VALUE:\n\t\t\tconst value = row[propName];\n\t\t\tif (value == null) {\n\t\t\t\treturn value;\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tconst parsed = parseFloat(value);\n\t\t\treturn isNaN(parsed) ? null : parsed;\n\t\tdefault:\n\t\t\treturn row[propName];\n\t}\n};\nexport const getDimensionLabel = (dimension: ChartSettingsDimension) => {\n\treturn dimension.label || dimension.column?.label || dimension.column?.name;\n};\n","import { DataSet } from '../../../data/types';\nimport { ChartAxisType, ChartSettingsDimension } from '../types';\nimport { asDimensionData, detectDimensionCategory, getDimensionLabel, getDimensionValue } from './dimension';\n\n/**\n * build axis definition with given data set and dimension.\n */\nexport const buildSingleAxis = (options: { data: DataSet, dimension: ChartSettingsDimension }) => {\n\tconst { data, dimension } = options;\n\tconst type = detectDimensionCategory(dimension);\n\treturn {\n\t\ttype,\n\t\tname: getDimensionLabel(dimension),\n\t\tdata: type === ChartAxisType.CATEGORY ? (asDimensionData(dimension, data) || []).map(x => `${x}`) : undefined\n\t};\n};\n\n/**\n * build axis definition. return only one axis anyway. use descartes to combine all dimensions.\n */\nexport const buildAxis = (options: { data: DataSet, dimensions: Array<ChartSettingsDimension> }) => {\n\tconst { data, dimensions } = options;\n\tif (dimensions.length === 1) {\n\t\treturn buildSingleAxis({ data, dimension: dimensions[0] });\n\t}\n\n\tconst dimensionValues = dimensions.map(d => asDimensionData(d, data));\n\n\treturn {\n\t\ttype: ChartAxisType.CATEGORY,\n\t\tname: dimensions.map(d => getDimensionLabel(d)).join(', '),\n\t\t// descartes\n\t\tdata: dimensionValues.reduce((radix, values) => {\n\t\t\tif (radix.length === 0) {\n\t\t\t\t// use me as radix for next loop\n\t\t\t\treturn values.map(v => `${v}`);\n\t\t\t}\n\n\t\t\t// derive on radix\n\t\t\treturn radix.map(r => {\n\t\t\t\treturn values.map(v => `${r}, ${v}`);\n\t\t\t}).flat();\n\t\t}, [] as Array<string>)\n\t};\n};\n\n/**\n * get axis value, compound values from dimensions\n */\nexport const getAxisValue = (options: { data: DataSet, row: any, dimensions: Array<ChartSettingsDimension> }) => {\n\t//TODO assume all dimension can be found in given row data now\n\t// in real world, they might be found via relationships and other topics\n\tconst { row, dimensions } = options;\n\treturn dimensions.map(d => getDimensionValue(row, d)).join(', ');\n};\n","import { DataColumnType, DataSet } from '../../../data/types';\nimport { ChartAxisType, ChartSettingsIndicator, IndicatorAggregator } from '../types';\n\nexport const detectIndicatorCategory = (indicator: ChartSettingsIndicator): ChartAxisType => {\n\tconst { aggregator = IndicatorAggregator.NONE, column: { type } = { type: DataColumnType.UNKNOWN } } = indicator;\n\tswitch (true) {\n\t\tcase [ IndicatorAggregator.SUMMARY, IndicatorAggregator.MEDIAN, IndicatorAggregator.AVERAGE, IndicatorAggregator.COUNT ].includes(aggregator):\n\t\t\treturn ChartAxisType.VALUE;\n\t\tdefault:\n\t\t\t// follow column type\n\t\t\tbreak;\n\t}\n\tswitch (true) {\n\t\tcase DataColumnType.NUMERIC === type:\n\t\t\treturn ChartAxisType.VALUE;\n\t\tcase [ DataColumnType.DATE, DataColumnType.DATETIME, DataColumnType.TIME ].includes(type):\n\t\t\treturn ChartAxisType.TIME;\n\t\tcase [ DataColumnType.BOOLEAN, DataColumnType.TEXT, DataColumnType.UNKNOWN ].includes(type):\n\t\tdefault:\n\t\t\treturn ChartAxisType.CATEGORY;\n\t}\n};\nexport const isIndicatorValid = (indicator: ChartSettingsIndicator): boolean => !!indicator.column;\nexport const asIndicatorData = (indicator: ChartSettingsIndicator, data: DataSet) => {\n\tconst { topicName, column: { name: propName } = { name: '' } } = indicator;\n\tconst topic = data[topicName!];\n\treturn [ ...new Set((topic.data || []).map(item => item[propName])) ];\n};\nexport const getIndicatorLabel = (indicator: ChartSettingsIndicator) => {\n\treturn indicator.label || indicator.column?.label || indicator.column?.name;\n};\n","import { DataColumnType, DataSet } from '../../../data/types';\nimport { BaseColors24 } from '../../color-theme';\nimport { ChartSettingsDimension, ChartSettingsIndicator, SeriesData, SeriesDataItem } from '../types';\nimport { aggregate, findAggregator } from './aggregator';\nimport { getAxisValue } from './axis';\nimport { getDimensionValue } from './dimension';\nimport { getIndicatorLabel } from './indicator';\n\n/**\n * all dimensions are on x-axis,<br>\n * build series data by indicator.\n */\nexport const getSeriesDataWhenDimensionsOnXAxis = (options: {\n\tdata: DataSet,\n\tindicator: ChartSettingsIndicator,\n\tdimensions: Array<ChartSettingsDimension>,\n}): SeriesData => {\n\tconst { data, indicator, dimensions } = options;\n\n\tconst seriesData: Array<SeriesDataItem> = (data[indicator.topicName!].data || []).map(item => {\n\t\tconst label = getIndicatorLabel(indicator);\n\t\tconst column = indicator.column!;\n\t\tconst value = item[column.name!];\n\t\treturn [\n\t\t\t// xAxis\n\t\t\tgetAxisValue({ data, dimensions, row: item }),\n\t\t\t// yAxis\n\t\t\tvalue,\n\t\t\t`${label}: ${value}`,\n\t\t\tlabel\n\t\t] as SeriesDataItem;\n\t});\n\n\treturn aggregate(seriesData, indicator);\n};\n\n/**\n * Given dimensions have and must have 2 elements. The first is for x-axis, and the second is for y-axis<br>\n * build series data by indicator.\n */\nexport const getSeriesDataWhen2DimensionsOnXYAxis = (options: {\n\tdata: DataSet,\n\tindicator: ChartSettingsIndicator,\n\tdimensions: Array<ChartSettingsDimension>,\n}): SeriesData => {\n\tconst { data, indicator, dimensions } = options;\n\n\tconst seriesData: Array<SeriesDataItem> = (data[indicator.topicName!].data || []).map(item => {\n\t\tconst label = getIndicatorLabel(indicator);\n\t\tconst column = indicator.column!;\n\t\tconst value = item[column.name!];\n\t\treturn [\n\t\t\t// xAxis\n\t\t\tgetDimensionValue(item, dimensions[0]),\n\t\t\t// yAxis\n\t\t\tgetDimensionValue(item, dimensions[1]),\n\t\t\tvalue,\n\t\t\t`${label}: ${value}`,\n\t\t\tlabel\n\t\t] as SeriesDataItem;\n\t});\n\treturn aggregate(seriesData, indicator, 2);\n};\n\nexport const getSeriesDataAsTree = (options: {\n\tdata: DataSet,\n\tindicator: ChartSettingsIndicator,\n\tdimensions: Array<ChartSettingsDimension>,\n}): SeriesData => {\n\tconst { data, indicator, dimensions } = options;\n\n\tconst parsed = (data[indicator.topicName!].data || []).map(item => {\n\t\tconst label = getIndicatorLabel(indicator);\n\t\tconst column = indicator.column!;\n\t\tconst value = item[column.name!];\n\t\treturn {\n\t\t\tname: label,\n\t\t\tvalue,\n\t\t\tgroups: dimensions.map(dimension => {\n\t\t\t\treturn `${getDimensionValue(item, dimension)}`;\n\t\t\t})\n\t\t};\n\t});\n\n\tlet colorIndex = 0;\n\tconst topMap: Map<string, any> = new Map();\n\tconst allMap: Map<string, any> = new Map();\n\tconst suspectedMap: Map<string, { name: string, value: number, children?: Array<{ value: number }> }> = new Map();\n\tparsed.forEach(item => {\n\t\tconst { name, value, groups } = item;\n\t\t// build group tree\n\t\tconst parentKey = groups.reduce((key, group) => {\n\t\t\tconst parentKey = key;\n\t\t\tif (key) {\n\t\t\t\tkey = `${key},${group}`;\n\t\t\t\tconst exists = allMap.get(key);\n\t\t\t\tif (!exists) {\n\t\t\t\t\tconst me = {\n\t\t\t\t\t\tname: group,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\titemStyle: { color: BaseColors24[colorIndex++ % BaseColors24.length] }\n\t\t\t\t\t};\n\t\t\t\t\tallMap.set(key, me);\n\t\t\t\t\tconst parent = allMap.get(parentKey);\n\t\t\t\t\tparent.children.push(me);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// first level\n\t\t\t\tkey = group;\n\t\t\t\tconst exists = topMap.get(key);\n\t\t\t\tif (!exists) {\n\t\t\t\t\tconst me = {\n\t\t\t\t\t\tname: group,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\titemStyle: { color: BaseColors24[colorIndex++ % BaseColors24.length] }\n\t\t\t\t\t};\n\t\t\t\t\tallMap.set(key, me);\n\t\t\t\t\ttopMap.set(key, me);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn key;\n\t\t}, '');\n\n\t\tconst parent = allMap.get(parentKey);\n\t\tsuspectedMap.set(parentKey, parent);\n\t\tif (indicator.column?.type !== DataColumnType.NUMERIC) {\n\t\t\t// not a number, use value as name, and set value to 1\n\t\t\tparent.children.push({\n\t\t\t\tname: value,\n\t\t\t\tvalue: 1,\n\t\t\t\titemStyle: { color: BaseColors24[colorIndex++ % BaseColors24.length] }\n\t\t\t});\n\t\t} else {\n\t\t\t// numeric value can be aggregate\n\t\t\tparent.children.push({\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t\titemStyle: { color: BaseColors24[colorIndex++ % BaseColors24.length] }\n\t\t\t});\n\t\t}\n\t});\n\n\tconst func = findAggregator(indicator);\n\tif (func) {\n\t\tconst format = new Intl.NumberFormat(undefined, { maximumFractionDigits: 2 }).format;\n\t\tArray.from(suspectedMap.values()).forEach(node => {\n\t\t\tconst { value } = func({\n\t\t\t\titems: (node.children || []).map(item => {\n\t\t\t\t\treturn [ 'group', item.value ];\n\t\t\t\t}),\n\t\t\t\tindicator,\n\t\t\t\tkeyCount: 1\n\t\t\t});\n\t\t\tnode.value = Math.round((+value + 'e2') as unknown as number) / Math.pow(10, 2);\n\t\t\tnode.name = `${node.name}: ${format(node.value)}`;\n\t\t\tdelete node.children;\n\t\t});\n\t}\n\n\treturn Array.from(topMap.values());\n};\n","import { ChartSettingsDimension, ChartSettingsIndicator } from '../types';\nimport { isDimensionValid } from './dimension';\nimport { isIndicatorValid } from './indicator';\n\nexport const getValidDimensionsAndIndicators = (\n\tdimensions: Array<ChartSettingsDimension>,\n\tindicators: Array<ChartSettingsIndicator>\n) => {\n\treturn [ dimensions.filter(isDimensionValid), indicators.filter(isIndicatorValid) ];\n};\n","import { Theme } from '../../../theme/types';\n\nexport const buildTitle = (options: { title?: string, theme: Theme }) => {\n\tconst { title, theme } = options;\n\n\tif (!title) {\n\t\treturn;\n\t}\n\n\treturn {\n\t\ttext: title,\n\t\tbottom: 32,\n\t\tleft: '50%',\n\t\ttextAlign: 'center',\n\t\ttextStyle: {\n\t\t\tcolor: theme.fontColor,\n\t\t\tfontSize: theme.fontSize,\n\t\t\tlineHeight: theme.fontSize,\n\t\t\tfontWeight: theme.fontBold\n\t\t}\n\t};\n};\n","import { DataSet } from '../../data/types';\nimport { Theme } from '../../theme/types';\nimport { BaseColors24 } from '../color-theme';\nimport { getSeriesDataWhenDimensionsOnXAxis } from './elements/series';\nimport { getValidDimensionsAndIndicators } from './elements/shortcuts';\nimport { buildTitle } from './elements/title';\nimport { ChartOptions, ChartSettings } from './types';\n\nexport const buildRichLabel = (colors: Array<string>) => {\n\treturn colors.reduce((rich, v, index) => {\n\t\t// dot style\n\t\trich[`hr${index}`] = {\n\t\t\tbackgroundColor: colors[index],\n\t\t\tborderRadius: 3,\n\t\t\twidth: 3,\n\t\t\theight: 3,\n\t\t\tpadding: [ 3, 3, 0, -12 ]\n\t\t};\n\t\t// text style\n\t\trich[`a${index}`] = {\n\t\t\tpadding: [ 8, -60, -20, -20 ],\n\t\t\tcolor: colors[index],\n\t\t\tfontSize: 12\n\t\t};\n\t\treturn rich;\n\t}, {} as { [key in string]: any });\n};\n\nexport const buildOptionsForPieOrDoughnutOrNightingale = (options: {\n\trose?: 'radius' | 'area',\n\tinnerRing?: number\n}) => (params: {\n\tdata: DataSet,\n\ttheme: Theme,\n\tsettings: ChartSettings\n}): ChartOptions => {\n\tconst { rose = false, innerRing = 0 } = options;\n\n\tconst { data, theme, settings: { title, dimensions, indicators } } = params;\n\n\tconst [ validDimensions, validIndicators ] = getValidDimensionsAndIndicators(dimensions, indicators);\n\tconst series = validIndicators.map(indicator => {\n\t\treturn {\n\t\t\ttype: 'pie',\n\t\t\tradius: [ `${innerRing}%`, '50%' ],\n\t\t\tcenter: [ '50%', '50%' ],\n\t\t\tclockwise: true,\n\t\t\tavoidLabelOverlap: true,\n\t\t\troseType: rose,\n\t\t\tlabel: {\n\t\t\t\tshow: true,\n\t\t\t\tposition: 'outside',\n\t\t\t\talignTo: 'edge',\n\t\t\t\tformatter: function (params: any) {\n\t\t\t\t\tconst name = params.name;\n\t\t\t\t\tconst percent = params.percent + '%';\n\t\t\t\t\tconst value = params.value;\n\t\t\t\t\tconst colorIndex = params.dataIndex % BaseColors24.length;\n\t\t\t\t\treturn [ `{a${colorIndex}|${name}：${value}, ${percent}}`, `{hr${colorIndex}|}` ].join('\\n');\n\t\t\t\t},\n\t\t\t\trich: buildRichLabel(BaseColors24)\n\t\t\t},\n\t\t\tlabelLine: {\n\t\t\t\tnormal: {\n\t\t\t\t\tlength: 20,\n\t\t\t\t\tlength2: 100,\n\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\twidth: 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: getSeriesDataWhenDimensionsOnXAxis({ data, indicator, dimensions: validDimensions }).map(item => {\n\t\t\t\treturn {\n\t\t\t\t\tname: item[0],\n\t\t\t\t\tvalue: item[1],\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tformatter: function (params: any) {\n\t\t\t\t\t\t\treturn `${params.name}<br>${item[2]}<br>${params.percent}%`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}).sort((item1, item2) => item1.value - item2.value)\n\t\t};\n\t});\n\n\treturn {\n\t\ttitle: buildTitle({ title, theme }),\n\t\tcolor: BaseColors24,\n\t\tgrid: {\n\t\t\ttop: 64,\n\t\t\tbottom: 64,\n\t\t\tcontainLabel: true\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'item'\n\t\t},\n\t\tseries\n\t};\n};\n","import color from 'color';\nimport React from 'react';\nimport { useTheme } from 'styled-components';\nimport { Theme } from '../theme/types';\nimport { EChart } from './chart';\nimport { BaseColors12, BaseColors24, BaseColors6 } from './color-theme';\nimport { buildRichLabel } from './custom/pie-doughnut-nightingale';\n\nexport interface DoughnutDataItem {\n\tname: string;\n\tvalue: number;\n}\n\nconst linearTypes = [\n\t{ x: 0, y: 0, x2: 1, y2: 1 }, // top-left -> right-bottom\n\t{ x: 0, y: 0, x2: 0, y2: 1 }, // top -> bottom\n\t{ x: 0, y: 0, x2: 1, y2: 0 }, // left -> right\n\t{ x: 1, y: 0, x2: 0, y2: 0 }, // right -> left\n\t{ x: 0, y: 1, x2: 0, y2: 0 }, // bottom -> top\n\t{ x: 1, y: 1, x2: 0, y2: 0 }, // right-bottom -> top-left\n\t{ x: 1, y: 0, x2: 0, y2: 1 }, // top-right -> left-bottom\n\t{ x: 0, y: 1, x2: 1, y2: 0 }  // left-bottom -> top-right\n];\n// const randomLinearTypes = () => linearTypes[Math.floor(Math.random() * 8)];\nconst buildItemStyle = (colors: Array<string>) => {\n\treturn colors.map(c => {\n\t\tconst colour = color(c);\n\t\treturn {\n\t\t\ttype: 'linear',\n\t\t\t...linearTypes[colors.length % 8],\n\t\t\tcolorStops: [ {\n\t\t\t\toffset: 0,\n\t\t\t\tcolor: colour.fade(0.95).rgb().toString() // 0% 处的颜色\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\toffset: 1,\n\t\t\t\t\tcolor: colour.fade(0.45).rgb().toString() // 100% 处的颜色\n\t\t\t\t}\n\t\t\t]\n\t\t\t// globalCoord: false // 缺省为 false\n\t\t};\n\t});\n};\n\nconst decorate = (data: Array<DoughnutDataItem>): Array<DoughnutDataItem> => {\n\tconst map: { [key in string]: DoughnutDataItem } = {};\n\n\tdata.forEach(item => {\n\t\tif (map[item.name]) {\n\t\t\tmap[item.name].value += item.value ?? 0;\n\t\t} else {\n\t\t\tmap[item.name] = { ...item };\n\t\t}\n\t});\n\n\treturn Object.keys(map)\n\t\t.map(key => map[key])\n\t\t.sort(({ value: v1 }, { value: v2 }) => v2 - v1);\n};\n\nconst buildOptions = (options: {\n\tdata: Array<DoughnutDataItem>,\n\ttheme: Theme,\n\ttitle?: string\n}) => {\n\tlet { data, theme, title } = options;\n\tdata = decorate(data);\n\tconst colors = data.length > 18 ? BaseColors24 : (data.length > 6 ? BaseColors12 : BaseColors6);\n\tconst colorCount = colors.length;\n\n\tconst count = data.reduce((count, item) => count + item.value, 0);\n\n\tconst itemStyles = buildItemStyle(colors);\n\tconst buildTitle = (title?: string) => {\n\t\tif (!title) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: title.replace('{{count}}', `${count}`),\n\t\t\tbottom: '5%',\n\t\t\tleft: '50%',\n\t\t\ttextAlign: 'center',\n\t\t\ttextStyle: {\n\t\t\t\tcolor: theme.fontColor,\n\t\t\t\tfontSize: theme.fontSize,\n\t\t\t\tlineHeight: theme.fontSize,\n\t\t\t\tfontWeight: theme.fontBold\n\t\t\t}\n\t\t};\n\t};\n\treturn {\n\t\ttitle: buildTitle(title),\n\t\tgrid: {\n\t\t\ttop: '3%'\n\t\t},\n\t\tseries: [ {\n\t\t\ttype: 'pie',\n\t\t\tradius: [ '30%', '60%' ],\n\t\t\tcenter: [ '50%', '50%' ],\n\t\t\tclockwise: true,\n\t\t\tavoidLabelOverlap: true,\n\t\t\tlabel: {\n\t\t\t\tshow: true,\n\t\t\t\tposition: 'outside',\n\t\t\t\talignTo: 'edge',\n\t\t\t\tformatter: function (params: any) {\n\t\t\t\t\tconst name = params.name;\n\t\t\t\t\tconst percent = params.percent + '%';\n\t\t\t\t\tconst colorIndex = params.dataIndex % colorCount;\n\t\t\t\t\treturn [ `{a${colorIndex}|${name}：${percent}}`, `{hr${colorIndex}|}` ].join('\\n');\n\t\t\t\t},\n\t\t\t\trich: buildRichLabel(colors)\n\t\t\t},\n\t\t\tlabelLine: {\n\t\t\t\tlength: 10,\n\t\t\t\tlength2: 100,\n\t\t\t\tshow: true\n\t\t\t},\n\t\t\titemStyle: {\n\t\t\t\tnormal: {\n\t\t\t\t\tcolor: function (params: any) {\n\t\t\t\t\t\treturn itemStyles[params.dataIndex % colorCount];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata\n\t\t} ]\n\t};\n};\nexport const CountDoughnut = (props: {\n\tclassName?: string,\n\tdata: Array<DoughnutDataItem>,\n\ttitle?: string;\n}) => {\n\tconst { className, data, title } = props;\n\n\tconst theme = useTheme() as Theme;\n\tconst options = buildOptions({ data, theme, title });\n\n\treturn <EChart className={className} options={options}/>;\n};","import color from 'color';\nimport dayjs from 'dayjs';\nimport echarts from 'echarts/lib/echarts';\nimport React from 'react';\nimport { useTheme } from 'styled-components';\nimport { Theme } from '../theme/types';\nimport { EChart } from './chart';\nimport { BaseColors24 } from './color-theme';\n\nexport interface GanttDataItem {\n\towner: string;\n\tname: string;\n\tstartDate: string;\n\tendDate: string;\n}\n\nconst renderItem = (params: any, api: any) => {\n\t// value index as below\n\t// 0: start date\n\t// 1: end date\n\t// 2: yAxis (owner)\n\t// 3: name\n\tconst categoryIndex = api.value(2);\n\tconst start = api.coord([ api.value(0), categoryIndex ]);\n\tconst end = api.coord([ api.value(1), categoryIndex ]);\n\tconst height = api.size([ 0, 1 ])[1] * 0.8;\n\n\tconst rectShape = echarts.graphic.clipRectByRect({\n\t\tx: start[0],\n\t\ty: start[1] - height / 2,\n\t\twidth: end[0] - start[0],\n\t\theight\n\t}, {\n\t\tx: params.coordSys.x,\n\t\ty: params.coordSys.y,\n\t\twidth: params.coordSys.width,\n\t\theight: params.coordSys.height\n\t});\n\n\treturn {\n\t\ttype: 'rect',\n\t\tshape: rectShape,\n\t\tstyle: api.style()\n\t};\n};\n\nconst decorate = (data: Array<GanttDataItem>) => {\n\t// end date add 1 day, to make sure the bar is continuous\n\treturn data.map(item => {\n\t\treturn {\n\t\t\t...item,\n\t\t\tendDate: dayjs(item.endDate).add(1, 'day').format('YYYY/MM/DD')\n\t\t};\n\t});\n};\nconst buildOptions = (options: {\n\tdata: Array<GanttDataItem>,\n\ttheme: Theme,\n\ttitle?: string\n}) => {\n\tlet { data, theme, title } = options;\n\n\tdata = decorate(data);\n\tconst yAxis = [ ...new Set(data.map(data => data.owner)) ].sort((a, b) => a.localeCompare(b));\n\tconst colors = BaseColors24;\n\tconst colorCount = colors.length;\n\n\tconst taskCount = data.length;\n\tconst memberCount = new Set(data.map(item => item.owner)).size;\n\tconst minStartDate = data.map(item => item.startDate).sort((d1, d2) => d1.localeCompare(d2))[0];\n\tconst maxEndDate = data.map(item => item.endDate).sort((d1, d2) => d2.localeCompare(d1))[0];\n\n\tconst buildTitle = (title?: string) => {\n\t\tif (!title) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: title.replace('{{tasks}}', `${taskCount}`).replace('{{members}}', `${memberCount}`),\n\t\t\tbottom: '3%',\n\t\t\tleft: '50%',\n\t\t\ttextAlign: 'center',\n\t\t\ttextStyle: {\n\t\t\t\tcolor: theme.fontColor,\n\t\t\t\tfontSize: theme.fontSize,\n\t\t\t\tlineHeight: theme.fontSize,\n\t\t\t\tfontWeight: theme.fontBold\n\t\t\t}\n\t\t};\n\t};\n\treturn {\n\t\ttitle: buildTitle(title),\n\t\ttooltip: {\n\t\t\ttrigger: 'item',\n\t\t\tformatter: function (params: any) {\n\t\t\t\tconst startDate = params.value[0];\n\t\t\t\tconst endDate = dayjs(params.value[1]).add(-1, 'day').format('YYYY/MM/DD');\n\t\t\t\treturn `${params.name}<br>${startDate} - ${endDate}`;\n\t\t\t}\n\t\t},\n\t\tdataZoom: [ {\n\t\t\ttype: 'slider',\n\t\t\tfilterMode: 'weakFilter',\n\t\t\tshowDataShadow: false,\n\t\t\ttop: 5,\n\t\t\theight: 2,\n\t\t\tborderColor: 'transparent',\n\t\t\tbackgroundColor: theme.chartZoomSliderBgColor,\n\t\t\thandleIcon: theme.chartZoomHandlerIcon,\n\t\t\thandleSize: 10,\n\t\t\t// handleStyle: {\n\t\t\t// \tshadowBlur: 6,\n\t\t\t// \tshadowOffsetX: 1,\n\t\t\t// \tshadowOffsetY: 2,\n\t\t\t// \tshadowColor: theme.chartZoomSliderShadowColor\n\t\t\t// },\n\t\t\tlabelFormatter: ''\n\t\t}, {\n\t\t\ttype: 'inside',\n\t\t\tfilterMode: 'weakFilter'\n\t\t} ],\n\t\tgrid: {\n\t\t\tleft: '5%',\n\t\t\ttop: '3%',\n\t\t\tbottom: '12%',\n\t\t\tcontainLabel: true\n\t\t},\n\t\txAxis: {\n\t\t\ttype: 'time',\n\t\t\tmin: minStartDate,\n\t\t\tmax: maxEndDate\n\t\t},\n\t\tyAxis: {\n\t\t\ttype: 'category',\n\t\t\tdata: yAxis\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: 'custom',\n\t\t\t\trenderItem,\n\t\t\t\tencode: { x: [ 0, 1 ], y: [ 2 ] },\n\t\t\t\tdata: data.map((item, itemIndex) => {\n\t\t\t\t\tconst colour = color(colors[itemIndex % colorCount]);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tvalue: [ item.startDate, item.endDate, item.owner, item.name ],\n\t\t\t\t\t\titemStyle: {\n\t\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\t\ttype: 'linear',\n\t\t\t\t\t\t\t\t\tx: 0, y: 0, x2: 1, y2: 0,\n\t\t\t\t\t\t\t\t\tcolorStops: [ {\n\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\tcolor: colour.fade(0.75).rgb().toString() // 0% 处的颜色\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colour.fade(0.15).rgb().toString() // 100% 处的颜色\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t}\n\t\t]\n\t};\n};\n\nexport const Gantt = (props: {\n\tclassName?: string,\n\tdata: Array<GanttDataItem>,\n\ttitle?: string;\n}) => {\n\tconst { className, data, title } = props;\n\n\tconst theme = useTheme() as Theme;\n\tconst options = buildOptions({ data, theme, title });\n\n\treturn <EChart className={className} options={options}/>;\n};","import color from 'color';\nimport React from 'react';\nimport { useTheme } from 'styled-components';\nimport { Theme } from '../theme/types';\nimport { EChart } from './chart';\nimport { BaseColors12, BaseColors24, BaseColors6 } from './color-theme';\n\nexport interface Segment {\n\tname: string;\n\tlabel: string;\n\ttake: (value: any) => boolean;\n}\n\n/**\n * describe how to split data to segments\n */\nexport interface Segments {\n\tlabel: string;\n\tdefinition: Array<Segment>;\n}\n\nexport interface BarDataItem {\n\tname: string;\n\tvalue: any;\n}\n\nconst buildOptions = (options: {\n\tdata: Array<BarDataItem>,\n\tsegments: Segments,\n\ttheme: Theme,\n\ttitle?: string\n}) => {\n\tconst { data, segments, theme, title } = options;\n\tconst colors = data.length > 18 ? BaseColors24 : (data.length > 6 ? BaseColors12 : BaseColors6);\n\tconst colorCount = colors.length;\n\n\tconst count = data.length;\n\n\tconst buildTitle = (title?: string) => {\n\t\tif (!title) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: title.replace('{{count}}', `${count}`),\n\t\t\tbottom: '5%',\n\t\t\tleft: '50%',\n\t\t\ttextAlign: 'center',\n\t\t\ttextStyle: {\n\t\t\t\tcolor: theme.fontColor,\n\t\t\t\tfontSize: theme.fontSize,\n\t\t\t\tlineHeight: theme.fontSize,\n\t\t\t\tfontWeight: theme.fontBold\n\t\t\t}\n\t\t};\n\t};\n\n\tconst groups = segments.definition.reduce((decorated, segment) => {\n\t\tdata.forEach((item) => {\n\t\t\tif (!segment.take(item.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (decorated[segment.name]) {\n\t\t\t\tdecorated[segment.name].value += 1;\n\t\t\t} else {\n\t\t\t\tdecorated[segment.name] = { value: 1, label: segment.label };\n\t\t\t}\n\t\t});\n\t\treturn decorated;\n\t}, {} as { [key in string]: { value: number, label: string } });\n\tconst decoratedData = Object.keys(groups).map((segment, index) => {\n\t\tconst colour = color(colors[index % colorCount]);\n\t\treturn {\n\t\t\tvalue: [ segment, groups[segment].value, groups[segment].label ],\n\t\t\titemStyle: {\n\t\t\t\tnormal: {\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\ttype: 'linear',\n\t\t\t\t\t\tx: 1, y: 1, x2: 0, y2: 0,\n\t\t\t\t\t\tcolorStops: [ {\n\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\tcolor: colour.fade(0.75).rgb().toString() // 0% 处的颜色\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\tcolor: colour.fade(0.15).rgb().toString() // 100% 处的颜色\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\treturn {\n\t\ttitle: buildTitle(title),\n\t\tgrid: {\n\t\t\ttop: '3%'\n\t\t},\n\t\txAxis: {\n\t\t\ttype: 'category',\n\t\t\tname: segments.label,\n\t\t\tdata: segments.definition.map(segment => segment.name)\n\t\t},\n\t\tyAxis: {\n\t\t\ttype: 'value',\n\t\t\tmax: function (value: any) {\n\t\t\t\treturn value.max * 1.2;\n\t\t\t}\n\t\t},\n\t\tseries: [ {\n\t\t\ttype: 'bar',\n\t\t\tlabel: {\n\t\t\t\tshow: true,\n\t\t\t\tformatter: '{@[2]}',\n\t\t\t\tcolor: theme.fontColor\n\t\t\t},\n\t\t\tencode: { x: 0, y: 1 },\n\t\t\tdata: decoratedData\n\t\t} ]\n\t};\n};\n\nexport const SegmentBar = (props: {\n\tclassName?: string,\n\tsegments: Segments,\n\tdata: Array<BarDataItem>,\n\ttitle?: string;\n}) => {\n\tconst { className, data, segments, title } = props;\n\n\tconst theme = useTheme() as Theme;\n\tconst options = buildOptions({ data, segments, theme, title });\n\n\treturn <EChart className={className} options={options}/>;\n};","import React from 'react';\nimport { CountDoughnut } from '../../charts/count-doughnut';\nimport { Gantt } from '../../charts/gantt';\nimport { SegmentBar } from '../../charts/segment-bar';\nimport { DataSet } from '../../data/types';\n// @ts-ignore\nimport SoftwareImplementationTasks from './software-implementation.csv';\nimport { Domain } from './types';\n\nexport const SoftwareImplementation: Domain = {\n\tcode: 'software-implementation',\n\tlabel: 'Software Implementation',\n\texpressions: [\n\t\t{ code: 'workdays', name: 'Workdays', label: 'Workdays', body: 'workdays({{StartDate}}, {{EndDate}})' }\n\t],\n\tdemo: {\n\t\ttasks: SoftwareImplementationTasks\n\t},\n\tcharts: [\n\t\t{\n\t\t\tkey: 'task-count-category',\n\t\t\tname: 'Task - Count by Category',\n\t\t\tchart: (props: { data: DataSet, className?: string }): JSX.Element => {\n\t\t\t\tconst { data: { tasks: { data } }, className } = props;\n\t\t\t\tconst chartData = data.map(item => {\n\t\t\t\t\treturn { name: item.Category, value: 1 };\n\t\t\t\t});\n\t\t\t\treturn <CountDoughnut className={className}\n\t\t\t\t                      title={'{{count}} Tasks'}\n\t\t\t\t                      data={chartData}/>;\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tkey: 'task-count-owner',\n\t\t\tname: 'Task - Count by Owner',\n\t\t\tchart: (props: { data: DataSet, className?: string }): JSX.Element => {\n\t\t\t\tconst { data: { tasks: { data } }, className } = props;\n\t\t\t\tconst chartData = data.map(item => {\n\t\t\t\t\treturn { name: item.Owner, value: 1 };\n\t\t\t\t});\n\t\t\t\treturn <CountDoughnut className={className}\n\t\t\t\t                      title={'{{count}} Tasks'}\n\t\t\t\t                      data={chartData}/>;\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tkey: 'task-count-categorical',\n\t\t\tname: 'Task - Count Categorical',\n\t\t\tchart: (props: { data: DataSet, className?: string, options?: { categoryBy: string } }): JSX.Element => {\n\t\t\t\tconst { data: { tasks: { data } }, className, options: { categoryBy = 'Category' } = {} } = props;\n\n\t\t\t\tconst chartData = data.map(item => {\n\t\t\t\t\treturn { name: item[categoryBy], value: 1 };\n\t\t\t\t});\n\n\t\t\t\treturn <CountDoughnut className={className}\n\t\t\t\t                      title={'{{count}} Tasks'}\n\t\t\t\t                      data={chartData}/>;\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tgroupBy: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'categoryBy',\n\t\t\t\t\t\tlabel: 'Count by',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{ label: 'Category', value: 'Category', default: true },\n\t\t\t\t\t\t\t{ label: 'Owner', value: 'Owner' } ]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tkey: 'task-gantt',\n\t\t\tname: 'Task Gantt',\n\t\t\tchart: (props: { data: DataSet, className?: string }): JSX.Element => {\n\t\t\t\tconst { data: { tasks: { data } }, className } = props;\n\n\t\t\t\tconst chartData = data.map(item => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: item.Task,\n\t\t\t\t\t\towner: item.Owner,\n\t\t\t\t\t\tstartDate: item.StartDate,\n\t\t\t\t\t\tendDate: item.EndDate\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn <Gantt className={className} title={'{{tasks}} Tasks, {{members}} Members'} data={chartData}/>;\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tkey: 'schedule-risk-management',\n\t\t\tname: 'Schedule - Risk Management',\n\t\t\tenabled: (data?: DataSet) => {\n\t\t\t\tconst tasks: Array<any> = (data || {}).tasks?.data || [];\n\t\t\t\tconst enabled = tasks && -1 === tasks.findIndex(item => typeof item.Workdays !== 'number');\n\t\t\t\treturn { enabled, reason: 'Factor \"Workdays\" missing.' };\n\t\t\t},\n\t\t\tchart: (props: { data: DataSet, className?: string }): JSX.Element => {\n\t\t\t\tconst { data: { tasks: { data } }, className } = props;\n\n\t\t\t\tconst segments = {\n\t\t\t\t\tlabel: 'Man day',\n\t\t\t\t\tdefinition: [\n\t\t\t\t\t\t{ name: '5-', label: 'Perfect', take: (value: number) => value <= 5 },\n\t\t\t\t\t\t{ name: '6 ~ 10', label: 'Good', take: (value: number) => value > 5 && value <= 10 },\n\t\t\t\t\t\t{ name: '11 ~ 20', label: 'Cautious', take: (value: number) => value > 10 && value <= 20 },\n\t\t\t\t\t\t{ name: '21+', label: 'Wild', take: (value: number) => value > 20 }\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\tconst chartData = data.map(item => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: item.Task,\n\t\t\t\t\t\tvalue: item.Workdays\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn <SegmentBar className={className} title={'{{count}} Tasks'}\n\t\t\t\t                   segments={segments}\n\t\t\t\t                   data={chartData}/>;\n\t\t\t}\n\t\t}\n\t]\n};","export default __webpack_public_path__ + \"static/media/software-implementation.87a1d67f.csv\";","// @ts-ignore\nimport { SoftwareImplementation } from './software-implementation';\nimport { Domain } from './types';\n\nexport const NoDomain: Domain = { code: 'no-domain', label: 'No Domain' };\nexport const InsuranceVisualization: Domain = { code: 'insurance-visualization', label: 'Insurance Visualization' };\nexport const MarketingInvestigating: Domain = { code: 'marketing-investigating', label: 'Marketing Investigating' };\nexport const SalesPlanning: Domain = { code: 'sales-planning', label: 'Sales Planning' };\nexport const AssetsManagement: Domain = { code: 'assets-management', label: 'Assets Management' };\n\nexport interface TopDomains {\n\tdomains: Array<Domain>;\n\thasMore: boolean;\n}\n\nexport const listTopDomains = async (): Promise<TopDomains> => {\n\treturn {\n\t\tdomains: [\n\t\t\tInsuranceVisualization,\n\t\t\tMarketingInvestigating,\n\t\t\tSalesPlanning,\n\t\t\tAssetsManagement,\n\t\t\tSoftwareImplementation\n\t\t],\n\t\thasMore: true\n\t};\n};\n\nexport const getDomainDemoData = async (location: string): Promise<string> => {\n\tconst response = await fetch(location);\n\treturn await response.text();\n};\n","import React from 'react';\nimport { emptyGetter, emptySetter } from '../../common/utils';\nimport { DataSet } from '../../data/types';\nimport { NoDomain } from '../../services/guide/domain';\nimport { Domain } from '../../services/guide/types';\n\nexport interface GuideContext {\n\tdomain: Domain,\n\tdata?: DataSet;\n}\n\nexport interface GuideContextOperator {\n\tsetDomain: (domain: Domain) => void;\n\tgetDomain: () => Domain;\n\tclearDomain: () => void;\n\tsetData: (data: DataSet) => void;\n\tgetData: () => DataSet | undefined;\n\tclearData: () => void;\n}\n\nconst Context = React.createContext<GuideContextOperator>({\n\tsetDomain: emptySetter,\n\tgetDomain: () => NoDomain,\n\tclearDomain: emptySetter,\n\tsetData: emptySetter,\n\tgetData: emptyGetter,\n\tclearData: emptySetter\n});\nContext.displayName = 'GuideContext';\n\nexport const GuideContextProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst [ context, setContext ] = React.useState<GuideContext>({ domain: NoDomain });\n\n\tconst operator = {\n\t\tsetDomain: (domain: Domain) => setContext({ ...context, domain }),\n\t\tgetDomain: () => context.domain,\n\t\tclearDomain: () => setContext({ ...context, domain: NoDomain }),\n\t\tsetData: (data: DataSet) => setContext({ ...context, data }),\n\t\tgetData: () => context.data,\n\t\tclearData: () => setContext({ ...context, data: undefined })\n\t};\n\n\treturn <Context.Provider value={operator}>{children}</Context.Provider>;\n};\n\nexport const useGuideContext = () => {\n\treturn React.useContext(Context);\n};\n","import { faParagraph } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button, { ButtonType } from '../../component/button';\n\nconst ParagraphButton = styled(Button).attrs({\n\t'data-widget': 'chart-add-paragraph-btn'\n})`\n\tdisplay: block;\n\tposition: fixed;\n\tfont-size: 32px;\n\tline-height: 64px;\n\twidth: 64px;\n\tright: 32px;\n\ttop: 166px;\n\tz-index: 10000;\n\tpadding: 0;\n\tborder: 0;\n\tborder-radius: 100%;\n`;\n\nexport const AddParagraphButton = (props: { rnd: boolean, onAdd: () => void }) => {\n\tconst { rnd, onAdd } = props;\n\n\tif (!rnd) {\n\t\treturn null;\n\t}\n\n\treturn <ParagraphButton inkType={ButtonType.PRIMARY} title='Add new paragraph' onClick={onAdd}>\n\t\t<FontAwesomeIcon icon={faParagraph}/>\n\t</ParagraphButton>;\n};\n","import React, { Fragment } from 'react';\nimport { Rnd } from 'react-rnd';\nimport styled from 'styled-components';\n\nconst HideDiv = styled.div`\n\tdisplay: none;\n\toverflow: hidden;\n`;\n\nexport const AsRnd = (props: {\n\trnd: boolean,\n\tlock?: boolean,\n\thidden?: boolean,\n\tchildren: ((props: any) => React.ReactNode) | React.ReactNode\n}) => {\n\tconst { rnd, lock = false, hidden = false, children } = props;\n\tif (rnd) {\n\t\tif (hidden) {\n\t\t\treturn <HideDiv>{children}</HideDiv>;\n\t\t} else {\n\t\t\treturn <Rnd enableResizing={!lock} disableDragging={lock}>{children}</Rnd>;\n\t\t}\n\t} else {\n\t\treturn <Fragment>{children}</Fragment>;\n\t}\n};\n","import styled from 'styled-components';\n\nexport const ChartContainer = styled.div.attrs({\n\t'data-widget': 'chart-container'\n})`\n\tborder-radius: calc(var(--border-radius) * 2);\n\tborder: var(--border);\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\t> div[data-widget='chart'],\n\t> div[data-widget='chart-disabled'] {\n\t\tflex-grow: 1;\n\t\theight: 300px;\n\t}\n\n\t&[data-expanded=true] {\n\t\t@media (min-width: 800px) {\n\t\t\tgrid-column: span 3;\n\t\t\t> div[data-widget='chart-header'] {\n\t\t\t\theight: 48px;\n\t\t\t\tpadding: 0 var(--margin);\n\t\t\t}\n\t\t\t> div[data-widget='chart-settings'] {\n\t\t\t\ttop: 48px;\n\t\t\t\t&[data-visible=true] {\n\t\t\t\t\theight: calc(100% - 48px);\n\t\t\t\t}\n\t\t\t}\n\t\t\t> div[data-widget='chart'],\n\t\t\t> div[data-widget='chart-disabled'] {\n\t\t\t\theight: 500px;\n\t\t\t}\n\t\t}\n\t\t@media (min-width: 1600px) {\n\t\t\tgrid-column: span 4;\n\t\t\t> div[data-widget='chart'],\n\t\t\t> div[data-widget='chart-disabled'] {\n\t\t\t\theight: 650px;\n\t\t\t}\n\t\t}\n\t\tdiv[data-widget='chart-title'] {\n\t\t\tfont-size: 1.4em;\n\t\t}\n\t}\n`;\nexport const ChartHeader = styled.div.attrs({\n\t'data-widget': 'chart-header'\n})`\n\tdisplay: flex;\n\tpadding: 0 calc(var(--margin) / 2);\n\talign-items: center;\n\tjustify-content: space-between;\n\theight: 40px;\n`;\nexport const ChartTitle = styled.div.attrs({\n\t'data-widget': 'chart-title'\n})`\n\tfont-size: 1em;\n\tfont-weight: bold;\n\twhite-space: nowrap;\n\toverflow-x: hidden;\n\ttext-overflow: ellipsis;\n\ttransition: all 300ms ease-in-out;\n`;\nexport const ChartOperators = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t> button {\n\t\tdisplay: block;\n\t\tborder: 0;\n\t\twidth: 28px;\n\t\theight: 28px;\n\t\tpadding: 0;\n\t\ttransition: all 300ms ease-in-out;\n\t\t&:not(:first-child) {\n\t\t\tmargin-left: 2px;\n\t\t}\n\t\t&:hover {\n\t\t\tbackground-color: var(--primary-hover-color);\n\t\t\tcolor: var(--invert-color);\n\t\t\topacity: 1;\n\t\t}\n\t\t&[data-visible=false] {\n\t\t\tdisplay: none;\n\t\t}\n\t\t&[data-active=true] {\n\t\t\tbackground-color: var(--primary-color);\n\t\t\tcolor: var(--invert-color);\n\t\t\topacity: 1;\n\t\t}\n\t\t@media (max-width: 799px) {\n\t\t\t&[data-size-fixed-visible=false] {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const ChartSettings = styled.div.attrs({\n\t'data-widget': 'chart-settings'\n})`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr;\n\tgrid-column-gap: calc(var(--margin) / 2);\n\tgrid-row-gap: calc(var(--margin) / 4);\n\talign-items: baseline;\n\talign-content: start;\n\tposition: absolute;\n\ttop: 40px;\n\tleft: 0;\n\twidth: 100%;\n\theight: 0;\n\tpadding: 0 var(--margin);\n\ttransition: all 300ms ease-in-out;\n\tbackground-color: var(--bg-color-opacity);\n\tz-index: 1;\n\toverflow: hidden;\n\t&[data-visible=true] {\n\t\theight: calc(100% - 40px);\n\t\tborder-top: var(--border);\n\t\toverflow-y: auto;\n\t\tpadding-top: calc(var(--margin) / 2);\n\t\tpadding-bottom: calc(var(--margin) / 2);\n\t}\n\t&[data-columns='2'] {\n\t\tgrid-template-columns: 1fr 1fr;\n\t}\n`;\nexport const ChartSettingsItem = styled.div.attrs({\n\t'data-widget': 'chart-settings-item'\n})`\n\tdisplay: grid;\n\tgrid-template-columns: 35% 65%;\n\talign-items: center;\n`;\nexport const ChartSettingsItemLabel = styled.div.attrs({\n\t'data-widget': 'chart-settings-item-label'\n})`\n\tdisplay: flex;\n\talign-items: center;\n\toverflow-x: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\tfont-size: 0.8em;\n\tfont-weight: var(--font-bold);\n\t&[data-require=true] {\n\t\t&:after {\n\t\t\tcontent: '*';\n\t\t\tmargin-left: 4px;\n\t\t\ttransform: scale(0.8);\n\t\t\ttransform-origin: left bottom;\n\t\t}\n\t}\n`;\nexport const ChartSettingsItemEditor = styled.div.attrs({\n\t'data-widget': 'chart-settings-item-editor'\n})`\n\tdisplay: flex;\n\talign-items: center;\n\t> input,\n\t> div[data-widget=dropdown] {\n\t\tflex-grow: 1;\n\t\tfont-size: 0.8em;\n\t}\n\t> button:last-child {\n\t\tmin-width: 27px;\n\t\theight: var(--height);\n\t\tpadding: 0;\n\t\tborder: 0;\n\t\t&:hover {\n\t\t\tcolor: var(--primary-color);\n\t\t\ttransform: none;\n\t\t\topacity: 1;\n\t\t\t> svg {\n\t\t\t\ttransform: scale(1.1);\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\n\nexport interface HideChart {\n\ttitle: string,\n\trecover: () => Promise<void>\n}\n\nexport interface HideOnPrintContext {\n\tget: () => Array<HideChart>;\n\thide: (chart: HideChart) => void;\n\trecover: (chart: HideChart) => Promise<void>;\n\tclear: () => void;\n}\n\nconst Context = React.createContext<HideOnPrintContext>({} as HideOnPrintContext);\nContext.displayName = 'HideOnPrintContext';\n\nexport const HideOnPrintProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst [ hideCharts, setHideCharts ] = useState<Array<HideChart>>([]);\n\n\tconst context = {\n\t\thide: (chart: HideChart) => setHideCharts([ ...hideCharts, chart ]),\n\t\tget: () => hideCharts,\n\t\trecover: async (chart: HideChart) => {\n\t\t\tawait chart.recover();\n\t\t\tsetHideCharts(hideCharts.filter(c => c !== chart));\n\t\t},\n\t\tclear: () => setHideCharts([])\n\t};\n\treturn <Context.Provider value={context}>{children}</Context.Provider>;\n};\n\nexport const useHideOnPrintContext = () => {\n\treturn React.useContext(Context);\n};\n","import React, { useState } from 'react';\n\nexport interface ChartSettingsContext {\n\tactive: boolean;\n\ttoggleActive: () => void;\n}\n\nconst Context = React.createContext<ChartSettingsContext>({} as ChartSettingsContext);\nContext.displayName = 'ChartSettingsContext';\n\nexport const ChartSettingsContextProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst [ active, setActive ] = useState<boolean>(false);\n\tconst toggleActive = () => setActive(!active);\n\tconst context = { active, toggleActive };\n\n\treturn <Context.Provider value={context}>\n\t\t{children}\n\t</Context.Provider>;\n};\n\nexport const useChartSettingsContext = () => {\n\treturn React.useContext(Context);\n};\n","import React, { useRef, useState } from 'react';\nimport { ChartInstanceContextProvider } from '../../../charts/chart-instance-context';\nimport { ChartContainer } from '../../component/chart';\nimport { useHideOnPrintContext } from './hide-on-print-context';\nimport { ChartSettingsContextProvider } from './settings-context';\n\nexport interface ChartContext {\n\texpanded: boolean;\n\ttoggleExpanded: () => void;\n\thideOnPrint: (title: string) => void;\n}\n\nconst Context = React.createContext<ChartContext>({} as ChartContext);\nContext.displayName = 'ChartContext';\n\nexport const ChartContextProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst hideOnPrintContext = useHideOnPrintContext();\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst [ expanded, setExpanded ] = useState<boolean>(false);\n\tconst toggleExpanded = () => {\n\t\tsetExpanded(!expanded);\n\t\tsetTimeout(() => {\n\t\t\tcontainerRef.current!.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\n\t\t}, 300);\n\t};\n\tconst hide = (title: string) => {\n\t\tconst draggable = containerRef.current!.parentElement!;\n\n\t\tconst rect = draggable.getBoundingClientRect();\n\t\tconst { transform, top, left, width, height } = draggable.style;\n\t\tdraggable.style.position = 'fixed';\n\t\tdraggable.style.transform = 'translate(0,0)';\n\t\tdraggable.style.opacity = '1';\n\t\tdraggable.style.top = `${rect.top}px`;\n\t\tdraggable.style.left = `${rect.left}px`;\n\t\tdraggable.style.width = `${rect.width}px`;\n\t\tdraggable.style.height = `${rect.height}px`;\n\t\tdraggable.style.transition = 'all 500ms cubic-bezier(1, 0, 0.03, 0.85)';\n\t\tsetTimeout(() => {\n\t\t\tdraggable.style.top = '92px';\n\t\t\tdraggable.style.left = 'calc(100vw - 72px)';\n\t\t\tdraggable.style.width = '0';\n\t\t\tdraggable.style.height = '0';\n\t\t\tdraggable.style.opacity = '0';\n\t\t\tsetTimeout(() => {\n\t\t\t\thideOnPrintContext.hide({\n\t\t\t\t\ttitle, recover: async () => {\n\t\t\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t\t\tdraggable.style.position = 'absolute';\n\t\t\t\t\t\t\tdraggable.style.transform = transform;\n\t\t\t\t\t\t\tdraggable.style.transition = 'all 500ms cubic-bezier(1, 0.14, 0, 1.03)';\n\t\t\t\t\t\t\tdraggable.style.opacity = '';\n\t\t\t\t\t\t\tdraggable.style.top = top;\n\t\t\t\t\t\t\tdraggable.style.left = left;\n\t\t\t\t\t\t\tdraggable.style.width = width;\n\t\t\t\t\t\t\tdraggable.style.height = height;\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tdraggable.style.transition = '';\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t}, 300);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 300);\n\t\t}, 10);\n\t};\n\tconst context = { expanded, toggleExpanded, hideOnPrint: hide };\n\n\treturn <Context.Provider value={context}>\n\t\t<ChartContainer data-expanded={expanded} ref={containerRef}>\n\t\t\t<ChartSettingsContextProvider>\n\t\t\t\t<ChartInstanceContextProvider>\n\t\t\t\t\t{children}\n\t\t\t\t</ChartInstanceContextProvider>\n\t\t\t</ChartSettingsContextProvider>\n\t\t</ChartContainer>\n\t</Context.Provider>;\n};\n\nexport const useChartContext = () => {\n\treturn React.useContext(Context);\n};\n","import { ChartSettings, ChartSettingsDimension, ChartSettingsIndicator, ChartSettingsValidator } from './types';\n\nexport const isCountSatisfied = (options: {\n\titems: Array<any>,\n\tinspect: (item: any) => boolean;\n\tvalidate: (count: number) => Array<string>;\n}) => {\n\tconst { items, inspect, validate } = options;\n\n\tif (!items) {\n\t\treturn validate(0);\n\t}\n\tconst advises = validate(items.length);\n\tif (advises.length !== 0) {\n\t\treturn advises;\n\t}\n\n\treturn validate(items.filter(inspect).length);\n};\n\nexport const buildDimensionsCountAtLeastValidator = (min: number): ChartSettingsValidator => (settings: ChartSettings): Array<string> => {\n\treturn isCountSatisfied({\n\t\titems: settings.dimensions,\n\t\tinspect: (dimension: ChartSettingsDimension) => !!dimension.column,\n\t\tvalidate: (count: number) => count < min ? [ `At least ${min} dimension(s) required.` ] : []\n\t});\n};\nexport const buildDimensionsCountAtMostValidator = (max: number): ChartSettingsValidator => (settings: ChartSettings): Array<string> => {\n\treturn isCountSatisfied({\n\t\titems: settings.dimensions,\n\t\tinspect: (dimension: ChartSettingsDimension) => !!dimension.column,\n\t\tvalidate: (count: number) => count > max ? [ `At most ${max} dimension(s) required.` ] : []\n\t});\n};\n\nexport const buildIndicatorsCountAtLeastValidator = (min: number): ChartSettingsValidator => (settings: ChartSettings): Array<string> => {\n\treturn isCountSatisfied({\n\t\titems: settings.indicators,\n\t\tinspect: (indicator: ChartSettingsIndicator) => !!indicator.column,\n\t\tvalidate: (count: number) => count < min ? [ `At least ${min} indicator(s) required.` ] : []\n\t});\n};\nexport const buildIndicatorsCountAtMostValidator = (max: number): ChartSettingsValidator => (settings: ChartSettings): Array<string> => {\n\treturn isCountSatisfied({\n\t\titems: settings.indicators,\n\t\tinspect: (indicator: ChartSettingsIndicator) => !!indicator.column,\n\t\tvalidate: (count: number) => count > max ? [ `At most ${max} indicator(s) required.` ] : []\n\t});\n};","import { DataSet } from '../../data/types';\nimport { Theme } from '../../theme/types';\nimport { BaseColors24 } from '../color-theme';\nimport { buildAxis } from './elements/axis';\nimport { asIndicatorData, detectIndicatorCategory, getIndicatorLabel } from './elements/indicator';\nimport { getSeriesDataWhenDimensionsOnXAxis } from './elements/series';\nimport { getValidDimensionsAndIndicators } from './elements/shortcuts';\nimport { buildTitle } from './elements/title';\nimport { ChartAxisType, ChartOptions, ChartSettings } from './types';\n\nexport const buildOptionsForBarOrLine = (defaultType: 'bar' | 'line') => (params: {\n\tdata: DataSet,\n\ttheme: Theme,\n\tsettings: ChartSettings\n}): ChartOptions => {\n\tconst { data, theme, settings: { title, dimensions, indicators } } = params;\n\n\tconst [ validDimensions, validIndicators ] = getValidDimensionsAndIndicators(dimensions, indicators);\n\tconst xAxis = {\n\t\t...buildAxis({ data, dimensions: validDimensions }),\n\t\taxisLabel: {\n\t\t\t// force show all\n\t\t\tinterval: 0\n\t\t}\n\t};\n\tconst series = validIndicators.map(indicator => {\n\t\treturn {\n\t\t\ttype: defaultType,\n\t\t\tencode: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 1\n\t\t\t},\n\t\t\tdata: getSeriesDataWhenDimensionsOnXAxis({ data, indicator, dimensions: validDimensions })\n\t\t};\n\t});\n\tif (xAxis.type === ChartAxisType.CATEGORY && validDimensions.length !== 1 && xAxis.data) {\n\t\t// compound dimensions\n\t\t// remove the nonexistent categories\n\t\tconst map = series.reduce((map, s) => {\n\t\t\t// index 0 in series value is a-axis category value\n\t\t\t(s.data || []).forEach(v => map.set(v[0] as unknown as string, true));\n\t\t\treturn map;\n\t\t}, new Map<string, boolean>());\n\t\txAxis.data = xAxis.data.filter(v => map.get(v as unknown as string));\n\t}\n\n\treturn {\n\t\ttitle: buildTitle({ title, theme }),\n\t\tcolor: BaseColors24,\n\t\tgrid: {\n\t\t\ttop: 64,\n\t\t\tbottom: 64,\n\t\t\tcontainLabel: true\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'item',\n\t\t\taxisPointer: {\n\t\t\t\ttype: 'cross'\n\t\t\t},\n\t\t\tformatter: function (params: any) {\n\t\t\t\tconst values: Array<any> = params.value;\n\t\t\t\treturn `${values[0]}<br>${values[values.length - 2]}`;\n\t\t\t}\n\t\t},\n\t\txAxis,\n\t\tyAxis: validIndicators.map(indicator => {\n\t\t\tconst type = detectIndicatorCategory(indicator);\n\t\t\tconst axisData = type === ChartAxisType.CATEGORY ? asIndicatorData(indicator, data) : undefined;\n\t\t\treturn {\n\t\t\t\ttype,\n\t\t\t\tname: getIndicatorLabel(indicator),\n\t\t\t\tdata: axisData\n\t\t\t};\n\t\t}),\n\t\tseries\n\t};\n};\n","import { buildOptionsForBarOrLine } from './bar-or-line';\nimport { ChartBarDefinition, ChartKey } from './types';\nimport { buildDimensionsCountAtLeastValidator, buildIndicatorsCountAtLeastValidator } from './validation-utils';\n\nconst buildOptions = buildOptionsForBarOrLine('bar');\n\nexport const Bar: ChartBarDefinition = {\n\tname: 'Bar',\n\tkey: ChartKey.BAR,\n\tbuildOptions,\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1)\n\t]\n};","import { buildOptionsForPieOrDoughnutOrNightingale } from './pie-doughnut-nightingale';\nimport { ChartDoughnutDefinition, ChartKey } from './types';\nimport {\n\tbuildDimensionsCountAtLeastValidator,\n\tbuildIndicatorsCountAtLeastValidator,\n\tbuildIndicatorsCountAtMostValidator\n} from './validation-utils';\n\nexport const Doughnut: ChartDoughnutDefinition = {\n\tname: 'Doughnut',\n\tkey: ChartKey.DOUGHNUT,\n\tbuildOptions: buildOptionsForPieOrDoughnutOrNightingale({ innerRing: 25 }),\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtMostValidator(1)\n\t]\n};","import { buildOptionsForBarOrLine } from './bar-or-line';\nimport { ChartKey, ChartLineDefinition } from './types';\nimport { buildDimensionsCountAtLeastValidator, buildIndicatorsCountAtLeastValidator } from './validation-utils';\n\nconst buildOptions = buildOptionsForBarOrLine('line');\n\nexport const Line: ChartLineDefinition = {\n\tname: 'Line',\n\tkey: ChartKey.LINE,\n\tbuildOptions,\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1)\n\t]\n};","import { buildOptionsForPieOrDoughnutOrNightingale } from './pie-doughnut-nightingale';\nimport { ChartKey, ChartNightingaleDefinition } from './types';\nimport {\n\tbuildDimensionsCountAtLeastValidator,\n\tbuildIndicatorsCountAtLeastValidator,\n\tbuildIndicatorsCountAtMostValidator\n} from './validation-utils';\n\nexport const Nightingale: ChartNightingaleDefinition = {\n\tname: 'Nightingale',\n\tkey: ChartKey.NIGHTINGALE,\n\tbuildOptions: buildOptionsForPieOrDoughnutOrNightingale({ rose: 'area' }),\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtMostValidator(1)\n\t]\n};","import { buildOptionsForPieOrDoughnutOrNightingale } from './pie-doughnut-nightingale';\nimport { ChartKey, ChartPieDefinition } from './types';\nimport {\n\tbuildDimensionsCountAtLeastValidator,\n\tbuildIndicatorsCountAtLeastValidator,\n\tbuildIndicatorsCountAtMostValidator\n} from './validation-utils';\n\nexport const Pie: ChartPieDefinition = {\n\tname: 'Pie',\n\tkey: ChartKey.PIE,\n\tbuildOptions: buildOptionsForPieOrDoughnutOrNightingale({}),\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtMostValidator(1)\n\t]\n};","import { Bar } from './bar';\nimport { Doughnut } from './doughnut';\nimport { Line } from './line';\nimport { Nightingale } from './nightingale';\nimport { Pie } from './pie';\nimport { Scatter } from './scatter';\nimport { Sunburst } from './sunburst';\nimport { Tree } from './tree';\nimport { TreeMap } from './treemap';\nimport { ChartDefinition, ChartKey } from './types';\n// import { HeatMap } from 'heat-map';\n\nexport const ChartDefinitions: Array<ChartDefinition> = [\n\tBar,\n\tLine,\n\tScatter,\n\tPie,\n\tDoughnut,\n\tNightingale,\n\tSunburst,\n\tTree,\n\tTreeMap\n];\nexport const ChartMap = ChartDefinitions.reduce((map, chart) => {\n\tmap[chart.key] = chart;\n\treturn map;\n}, {} as { [key in ChartKey]: ChartDefinition });","import { DataSet } from '../../data/types';\nimport { Theme } from '../../theme/types';\nimport { BaseColors24 } from '../color-theme';\nimport { buildSingleAxis } from './elements/axis';\nimport { getSeriesDataWhen2DimensionsOnXYAxis } from './elements/series';\nimport { getValidDimensionsAndIndicators } from './elements/shortcuts';\nimport { buildTitle } from './elements/title';\nimport { ChartKey, ChartOptions, ChartScatterDefinition, ChartSettings } from './types';\nimport {\n\tbuildDimensionsCountAtLeastValidator,\n\tbuildDimensionsCountAtMostValidator,\n\tbuildIndicatorsCountAtLeastValidator\n} from './validation-utils';\n\n/**\n * scatter has and only has two dimensions\n */\nconst buildOptions = (params: {\n\tdata: DataSet,\n\ttheme: Theme,\n\tsettings: ChartSettings\n}): ChartOptions => {\n\tconst { data, theme, settings: { title, dimensions, indicators } } = params;\n\n\tconst [ validDimensions, validIndicators ] = getValidDimensionsAndIndicators(dimensions, indicators);\n\tconst [ xAxis, yAxis ] = validDimensions.map(dimension => {\n\t\treturn {\n\t\t\t...buildSingleAxis({ data, dimension }),\n\t\t\taxisLabel: {\n\t\t\t\t// force show all\n\t\t\t\tinterval: 0\n\t\t\t}\n\t\t};\n\t});\n\tconst series = validIndicators.map(indicator => {\n\t\treturn {\n\t\t\ttype: 'scatter',\n\t\t\tencode: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 1\n\t\t\t},\n\t\t\tdata: getSeriesDataWhen2DimensionsOnXYAxis({ data, indicator, dimensions: validDimensions })\n\t\t};\n\t});\n\n\treturn {\n\t\ttitle: buildTitle({ title, theme }),\n\t\tcolor: BaseColors24,\n\t\tgrid: {\n\t\t\ttop: 64,\n\t\t\tbottom: 64,\n\t\t\tcontainLabel: true\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'item',\n\t\t\taxisPointer: {\n\t\t\t\ttype: 'cross'\n\t\t\t},\n\t\t\tformatter: function (params: any) {\n\t\t\t\tconst values: Array<any> = params.value;\n\t\t\t\treturn `${values[0]}, ${values[1]}<br>${values[values.length - 1]}`;\n\t\t\t}\n\t\t},\n\t\txAxis,\n\t\tyAxis,\n\t\tseries\n\t};\n};\n\nexport const Scatter: ChartScatterDefinition = {\n\tname: 'Scatter',\n\tkey: ChartKey.SCATTER,\n\tbuildOptions,\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(2),\n\t\tbuildDimensionsCountAtMostValidator(2),\n\t\tbuildIndicatorsCountAtLeastValidator(1)\n\t]\n};","import { DataSet } from '../../data/types';\nimport { Theme } from '../../theme/types';\nimport { BaseColors24 } from '../color-theme';\nimport { getSeriesDataAsTree } from './elements/series';\nimport { getValidDimensionsAndIndicators } from './elements/shortcuts';\nimport { buildTitle } from './elements/title';\nimport {\n\tChartKey,\n\tChartOptions,\n\tChartSettings,\n\tChartSettingsIndicator,\n\tChartSunburstDefinition,\n\tIndicatorAggregator\n} from './types';\nimport {\n\tbuildDimensionsCountAtLeastValidator,\n\tbuildIndicatorsCountAtLeastValidator,\n\tbuildIndicatorsCountAtMostValidator\n} from './validation-utils';\n\nexport const buildOptions = (params: {\n\tdata: DataSet,\n\ttheme: Theme,\n\tsettings: ChartSettings\n}): ChartOptions => {\n\tconst { data, theme, settings: { title, dimensions, indicators } } = params;\n\n\tconst [ validDimensions, validIndicators ] = getValidDimensionsAndIndicators(dimensions, indicators);\n\tconst series = validIndicators.map(indicator => {\n\t\tconst aggregator = (indicator as ChartSettingsIndicator).aggregator;\n\t\tconst aggregated = aggregator && aggregator !== IndicatorAggregator.NONE;\n\t\tconst max = (aggregated ? 90 : 53) - 7;\n\t\treturn {\n\t\t\ttype: 'sunburst',\n\t\t\tradius: [ 0, '90%' ],\n\t\t\tcenter: [ '50%', '50%' ],\n\t\t\tdata: getSeriesDataAsTree({ data, indicator, dimensions: validDimensions }),\n\t\t\tlevels: [ {}, ...validDimensions.map((dimension, index) => {\n\t\t\t\treturn {\n\t\t\t\t\tr0: `${index * max / validDimensions.length + 7}%`,\n\t\t\t\t\tr: `${(index + 1) * max / validDimensions.length + 7}%`\n\t\t\t\t};\n\t\t\t}), { r0: '53%', r: '55%', label: { position: 'outside' } } ]\n\t\t};\n\t});\n\n\treturn {\n\t\ttitle: buildTitle({ title, theme }),\n\t\tcolor: BaseColors24,\n\t\tgrid: {\n\t\t\ttop: 64,\n\t\t\tbottom: 64,\n\t\t\tcontainLabel: true\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'item'\n\t\t},\n\t\tseries\n\t};\n};\n\nexport const Sunburst: ChartSunburstDefinition = {\n\tname: 'Sunburst',\n\tkey: ChartKey.SUNBURST,\n\tbuildOptions,\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtMostValidator(1)\n\t]\n};","import { DataSet } from '../../data/types';\nimport { Theme } from '../../theme/types';\nimport { BaseColors24 } from '../color-theme';\nimport { getSeriesDataAsTree } from './elements/series';\nimport { getValidDimensionsAndIndicators } from './elements/shortcuts';\nimport { buildTitle } from './elements/title';\nimport { ChartKey, ChartOptions, ChartSettings, ChartTreeDefinition } from './types';\nimport {\n\tbuildDimensionsCountAtLeastValidator,\n\tbuildIndicatorsCountAtLeastValidator,\n\tbuildIndicatorsCountAtMostValidator\n} from './validation-utils';\n\nexport const buildOptions = (params: {\n\tdata: DataSet,\n\ttheme: Theme,\n\tsettings: ChartSettings\n}): ChartOptions => {\n\tconst { data, theme, settings: { title, dimensions, indicators } } = params;\n\n\tconst [ validDimensions, validIndicators ] = getValidDimensionsAndIndicators(dimensions, indicators);\n\tconst series = validIndicators.map(indicator => {\n\t\treturn {\n\t\t\ttype: 'tree',\n\t\t\tleft: '6%',\n\t\t\tright: '6%',\n\t\t\tinitialTreeDepth: validDimensions.length + 1,\n\t\t\tlabel: {\n\t\t\t\tnormal: {\n\t\t\t\t\tposition: 'insideTopRight',\n\t\t\t\t\tdistance: 10\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: [ {\n\t\t\t\tname: 'Root',\n\t\t\t\tchildren: getSeriesDataAsTree({ data, indicator, dimensions: validDimensions })\n\t\t\t} ]\n\t\t};\n\t});\n\n\treturn {\n\t\ttitle: buildTitle({ title, theme }),\n\t\tcolor: BaseColors24,\n\t\tgrid: {\n\t\t\ttop: 64,\n\t\t\tbottom: 64,\n\t\t\tcontainLabel: true\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'item'\n\t\t},\n\t\tseries\n\t};\n};\n\nexport const Tree: ChartTreeDefinition = {\n\tname: 'Tree',\n\tkey: ChartKey.TREE,\n\tbuildOptions,\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtMostValidator(1)\n\t]\n};","import { DataSet } from '../../data/types';\nimport { Theme } from '../../theme/types';\nimport { BaseColors24 } from '../color-theme';\nimport { getSeriesDataAsTree } from './elements/series';\nimport { getValidDimensionsAndIndicators } from './elements/shortcuts';\nimport { buildTitle } from './elements/title';\nimport { ChartKey, ChartOptions, ChartSettings, ChartTreeMapDefinition } from './types';\nimport {\n\tbuildDimensionsCountAtLeastValidator,\n\tbuildIndicatorsCountAtLeastValidator,\n\tbuildIndicatorsCountAtMostValidator\n} from './validation-utils';\n\nexport const buildOptions = (params: {\n\tdata: DataSet,\n\ttheme: Theme,\n\tsettings: ChartSettings\n}): ChartOptions => {\n\tconst { data, theme, settings: { title, dimensions, indicators } } = params;\n\n\tconst [ validDimensions, validIndicators ] = getValidDimensionsAndIndicators(dimensions, indicators);\n\tconst series = validIndicators.map(indicator => {\n\t\treturn {\n\t\t\ttype: 'treemap',\n\t\t\tleafDepth: 1,\n\t\t\tdata: getSeriesDataAsTree({ data, indicator, dimensions: validDimensions })\n\t\t};\n\t});\n\n\treturn {\n\t\ttitle: buildTitle({ title, theme }),\n\t\tcolor: BaseColors24,\n\t\tgrid: {\n\t\t\ttop: 64,\n\t\t\tbottom: 64,\n\t\t\tcontainLabel: true\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'item'\n\t\t},\n\t\tseries\n\t};\n};\n\nexport const TreeMap: ChartTreeMapDefinition = {\n\tname: 'TreeMap',\n\tkey: ChartKey.TREEMAP,\n\tbuildOptions,\n\n\tsettingsValidators: [\n\t\tbuildDimensionsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtLeastValidator(1),\n\t\tbuildIndicatorsCountAtMostValidator(1)\n\t]\n};","import React, { Fragment } from 'react';\nimport { useTheme } from 'styled-components';\nimport { DataSet } from '../data/types';\nimport { Theme } from '../theme/types';\nimport { EChart } from './chart';\nimport { ChartMap } from './custom/defs';\nimport { ChartSettings } from './custom/types';\n\nexport const CustomChart = (props: {\n\tclassName?: string,\n\tdata: DataSet,\n\tsettings: ChartSettings,\n\terrorWrapper: (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => JSX.Element\n}) => {\n\tconst { className, data, settings, errorWrapper: ErrorWrapper } = props;\n\n\tconst theme = useTheme() as Theme;\n\tif (!settings.key) {\n\t\treturn <Fragment/>;\n\t}\n\n\ttry {\n\t\tconst options = ChartMap[settings.key].buildOptions({ data, theme, settings });\n\t\t// console.info(JSON.stringify(options));\n\t\treturn <EChart className={className} options={options}/>;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\treturn <ErrorWrapper>\n\t\t\t<div>Uncaught error occurred, check your chart settings please.</div>\n\t\t</ErrorWrapper>;\n\t}\n};","import styled from 'styled-components';\nimport Dropdown from '../../../component/dropdown';\n\nexport const DropdownInCell = styled(Dropdown)`\n\ttransition: all 300ms ease-in-out;\n\twidth: 100%;\n\t&:hover,\n\t&:focus {\n\t\tborder-color: var(--primary-color);\n\t\t> svg {\n\t\t\tcolor: var(--primary-color);\n\t\t}\n\t\t> div:last-child {\n\t\t\tborder-color: var(--primary-color);\n\t\t}\n\t}\n`;\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../../../component/button';\nimport { ChartSettingsItem, ChartSettingsItemEditor, ChartSettingsItemLabel } from '../../../component/chart';\nimport { DropdownOption } from '../../../component/dropdown';\nimport { DropdownInCell } from './dropdown-in-cell';\n\nconst DropdownContainer = styled(ChartSettingsItem)`\n\tdiv[data-widget=\"dropdown\"] {\n\t\t> span,\n\t\t> div > span {\n\t\t\ttext-transform: capitalize;\n\t\t}\n\t}\n`;\n\nexport const DropdownItem = (props: {\n\tlabel: string | ((props: any) => React.ReactNode) | React.ReactNode,\n\toptions: Array<DropdownOption>,\n\tplease?: string,\n\trequire?: boolean,\n\tvalue?: string | number | boolean,\n\tonOptionChanged: (options: DropdownOption) => Promise<void>,\n\tremovable?: boolean,\n\tonRemove?: () => void;\n\tclassName?: string;\n}) => {\n\tconst {\n\t\tlabel,\n\t\tvalue, please,\n\t\trequire,\n\t\toptions, onOptionChanged,\n\t\tremovable = false, onRemove,\n\t\tclassName\n\t} = props;\n\n\treturn <DropdownContainer className={className}>\n\t\t<ChartSettingsItemLabel data-require={require}>{label}</ChartSettingsItemLabel>\n\t\t<ChartSettingsItemEditor>\n\t\t\t<DropdownInCell options={options}\n\t\t\t                onChange={onOptionChanged}\n\t\t\t                value={value} please={please}/>\n\t\t\t{removable ? <Button onClick={onRemove}><FontAwesomeIcon icon={faTimes}/></Button> : null}\n\t\t</ChartSettingsItemEditor>\n\t</DropdownContainer>;\n};\n","import React from 'react';\nimport { ChartSettingsDimension } from '../../../../charts/custom/types';\nimport { DropdownOption } from '../../../component/dropdown';\nimport { DropdownItem } from './dropdown-item';\nimport { FactorOption } from './types';\n\nexport enum DimensionInteractionType {\n\tCHANGE, REMOVE\n}\n\nexport const DimensionDropdown = (props: {\n\tlabel: string,\n\toptions: Array<FactorOption>,\n\tplease?: string,\n\trequire?: boolean,\n\tdimension: ChartSettingsDimension,\n\tremovable?: boolean,\n\tonChanged: (dimension: ChartSettingsDimension, interactionType: DimensionInteractionType) => void,\n\tclassName?: string;\n}) => {\n\tconst { dimension, onChanged, ...dropdownOptions } = props;\n\n\tconst { topicName = '', column: { name: columnName = '' } = { name: '' } } = dimension;\n\tconst value = (topicName && columnName) ? `${topicName}.${columnName}` : '';\n\n\tconst onFactorChanged = async (option: DropdownOption) => {\n\t\tconst { topicName, column } = option as FactorOption;\n\t\tdimension.topicName = topicName;\n\t\tdimension.column = column;\n\t\tdimension.label = column.label || column.name;\n\t\tonChanged(dimension, DimensionInteractionType.CHANGE);\n\t};\n\tconst onRemove = () => {\n\t\tonChanged(dimension, DimensionInteractionType.REMOVE);\n\t};\n\treturn <DropdownItem {...dropdownOptions}\n\t                     value={value}\n\t                     onOptionChanged={onFactorChanged}\n\t                     onRemove={onRemove}/>;\n};","import { faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { ChartSettingsIndicator, IndicatorAggregator } from '../../../../charts/custom/types';\nimport { DataColumnType } from '../../../../data/types';\nimport { DropdownOption } from '../../../component/dropdown';\nimport { DropdownItem } from './dropdown-item';\nimport { FactorOption } from './types';\n\nconst SubDropdownItem = styled(DropdownItem)`\n\t> div[data-widget='chart-settings-item-label'] {\n\t\topacity: 0.7;\n\t\ttransform: scale(0.8);\n\t\ttransform-origin: left;\n\t\t> svg {\n\t\t\tmargin-right: calc(var(--margin) / 4);\n\t\t}\n\t}\n`;\n\nexport enum IndicatorInteractionType {\n\tCHANGE, REMOVE\n}\n\nexport const IndicatorDropdown = (props: {\n\tlabel: string,\n\toptions: Array<FactorOption>,\n\tplease?: string,\n\trequire?: boolean,\n\tindicator: ChartSettingsIndicator,\n\tremovable?: boolean,\n\tonChanged: (indicator: ChartSettingsIndicator, interactionType: IndicatorInteractionType) => void,\n\tclassName?: string;\n}) => {\n\tconst { indicator, onChanged, ...dropdownOptions } = props;\n\n\tconst { topicName = '', column: { name: columnName = '' } = { name: '' } } = indicator;\n\tconst value = (topicName && columnName) ? `${topicName}.${columnName}` : '';\n\n\tconst onFactorChanged = async (option: DropdownOption) => {\n\t\tconst { topicName, column } = option as FactorOption;\n\t\tindicator.topicName = topicName;\n\t\tindicator.column = column;\n\t\tindicator.label = column.label || column.name;\n\t\tonChanged(indicator, IndicatorInteractionType.CHANGE);\n\t};\n\tconst onRemove = () => {\n\t\tonChanged(indicator, IndicatorInteractionType.REMOVE);\n\t};\n\n\tlet aggregatorDropdownItem = null;\n\tif (indicator.column) {\n\t\tconst aggregateOptions: Array<DropdownOption> = [\n\t\t\t{ label: 'No Aggregate', value: IndicatorAggregator.NONE },\n\t\t\t{ label: 'Count', value: IndicatorAggregator.COUNT }\n\t\t];\n\n\t\tif (indicator.column) {\n\t\t\tconst { type } = indicator.column;\n\t\t\tswitch (true) {\n\t\t\t\tcase DataColumnType.NUMERIC === type:\n\t\t\t\t\taggregateOptions.push(\n\t\t\t\t\t\t{ label: 'Summary', value: IndicatorAggregator.SUMMARY },\n\t\t\t\t\t\t{ label: 'Average', value: IndicatorAggregator.AVERAGE },\n\t\t\t\t\t\t{ label: 'Median', value: IndicatorAggregator.MEDIAN },\n\t\t\t\t\t\t{ label: 'Minimum', value: IndicatorAggregator.MINIMUM },\n\t\t\t\t\t\t{ label: 'Maximum', value: IndicatorAggregator.MAXIMUM }\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase [ DataColumnType.TIME, DataColumnType.DATETIME, DataColumnType.DATE ].includes(type):\n\t\t\t\t\taggregateOptions.push(\n\t\t\t\t\t\t{ label: 'Minimum', value: IndicatorAggregator.MINIMUM },\n\t\t\t\t\t\t{ label: 'Maximum', value: IndicatorAggregator.MAXIMUM }\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t// no aggregator\n\t\t\t}\n\t\t}\n\n\t\tif (!aggregateOptions.some(option => option.value === indicator.aggregator)) {\n\t\t\tindicator.aggregator = IndicatorAggregator.NONE;\n\t\t}\n\n\t\tconst onAggregatorChanged = async (option: DropdownOption) => {\n\t\t\tconst { value } = option;\n\t\t\tindicator.aggregator = value as IndicatorAggregator;\n\t\t\tonChanged(indicator, IndicatorInteractionType.CHANGE);\n\t\t};\n\n\t\taggregatorDropdownItem = <SubDropdownItem value={indicator.aggregator}\n\t\t                                          options={aggregateOptions} onOptionChanged={onAggregatorChanged}\n\t\t                                          label={\n\t\t\t                                          <Fragment>\n\t\t\t\t                                          <FontAwesomeIcon icon={faMinus}/>\n\t\t\t\t                                          <span>Aggregate</span>\n\t\t\t                                          </Fragment>\n\t\t                                          }/>;\n\t}\n\n\treturn <Fragment>\n\t\t<DropdownItem {...dropdownOptions}\n\t\t              value={value}\n\t\t              onOptionChanged={onFactorChanged}\n\t\t              onRemove={onRemove}/>\n\t\t{aggregatorDropdownItem}\n\t</Fragment>;\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { ChartSettingsItem, ChartSettingsItemEditor, ChartSettingsItemLabel } from '../../../component/chart';\nimport Input from '../../../component/input';\n\nconst InputInCell = styled(Input)`\n\ttransition: all 300ms ease-in-out;\n\twidth: 100%;\n\t&:hover,\n\t&:focus {\n\t\tborder-color: var(--primary-color);\n\t}\n`;\n\nexport const InputItem = (props: {\n\tlabel: string,\n\tplaceholder?: string,\n\trequire?: boolean,\n\tvalue?: string,\n\tonValueChanged: (value: string) => void\n}) => {\n\tconst { label, value, placeholder, require, onValueChanged } = props;\n\n\tconst onChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tonValueChanged((event.target as HTMLInputElement).value);\n\t};\n\n\treturn <ChartSettingsItem>\n\t\t<ChartSettingsItemLabel data-require={require}>{label}</ChartSettingsItemLabel>\n\t\t<ChartSettingsItemEditor>\n\t\t\t<InputInCell onChange={onChanged} value={value} placeholder={placeholder}/>\n\t\t</ChartSettingsItemEditor>\n\t</ChartSettingsItem>;\n};\n","import { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { useChartInstanceContext } from '../../../charts/chart-instance-context';\nimport Button from '../../component/button';\nimport { useAlert } from '../../context/alert';\nimport { useResponsive } from '../../context/responsive';\n\nexport const DownloadButton = (props: { visible: boolean }) => {\n\tconst { visible } = props;\n\n\tconst responsive = useResponsive();\n\tconst chartInstance = useChartInstanceContext();\n\tconst alert = useAlert();\n\tconst onDownloadClicked = async () => {\n\t\tif (responsive.mobile) {\n\t\t\talert.show('Download doesn\\'t support in mobile device.');\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst dataUrl = await chartInstance.download();\n\t\t\tconst link = document.createElement('a');\n\t\t\tlink.href = dataUrl;\n\t\t\tlink.download = 'chart.png';\n\t\t\tlink.click();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\talert.show('Failed to generate chart image.');\n\t\t}\n\t};\n\treturn <Button onClick={onDownloadClicked} data-visible={visible} data-widget={'chart-download-btn'}>\n\t\t<FontAwesomeIcon icon={faDownload}/>\n\t</Button>;\n};","import { faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Button from '../../component/button';\nimport { useChartContext } from './chart-context';\n\nexport const HideOnPrintButton = (props: { visible: boolean, title?: string }) => {\n\tconst { visible, title } = props;\n\n\tconst chartContext = useChartContext();\n\tconst onHideClicked = () => chartContext.hideOnPrint(title || 'Untitled');\n\treturn <Button onClick={onHideClicked} data-visible={visible} data-role='rnd'>\n\t\t<FontAwesomeIcon icon={faEyeSlash}/>\n\t</Button>;\n};","import { faCompressArrowsAlt, faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment } from 'react';\nimport Button from '../../component/button';\nimport { useChartContext } from './chart-context';\n\nexport const ResizeButtons = (props: { visible?: boolean }) => {\n\tconst { visible = true } = props;\n\tconst container = useChartContext();\n\n\treturn <Fragment>\n\t\t<Button onClick={container.toggleExpanded} data-visible={visible && !container.expanded}\n\t\t        data-size-fixed-visible={false} data-widget={'chart-resize-btn'}>\n\t\t\t<FontAwesomeIcon icon={faExpandArrowsAlt}/>\n\t\t</Button>\n\t\t<Button onClick={container.toggleExpanded} data-visible={visible && container.expanded}\n\t\t        data-size-fixed-visible={false} data-widget={'chart-resize-btn'}>\n\t\t\t<FontAwesomeIcon icon={faCompressArrowsAlt}/>\n\t\t</Button>\n\t</Fragment>;\n};","import React, { useState } from 'react';\nimport { ChartSettings } from '../../../charts/custom/types';\n\nexport interface SavedCustomChartContext {\n\tget: () => Array<ChartSettings>;\n\tadd: (settings: ChartSettings) => void;\n\treplace: (replacement: ChartSettings, replaced: ChartSettings) => void;\n}\n\nconst Context = React.createContext<SavedCustomChartContext>({} as SavedCustomChartContext);\nContext.displayName = 'SavedCustomChartContext';\n\nexport const SavedCustomChartContextProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst [ charts, setCharts ] = useState<Array<ChartSettings>>([]);\n\tconst context = {\n\t\tget: () => charts,\n\t\tadd: (settings: ChartSettings) => setCharts([ ...charts.filter(c => c !== settings), { ...settings } ]),\n\t\treplace: (replacement: ChartSettings, replaced: ChartSettings) => setCharts(charts.map(c => c === replaced ? replacement : c))\n\t};\n\treturn <Context.Provider value={context}>{children}</Context.Provider>;\n};\n\nexport const useSavedCustomChartContext = () => {\n\treturn React.useContext(Context);\n};\n","import { faThumbtack } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { ChartSettings } from '../../../charts/custom/types';\nimport Button from '../../component/button';\nimport { useSavedCustomChartContext } from './saved-custom-chart-context';\n\nexport const SaveButton = (props: { visible: boolean, settings: ChartSettings }) => {\n\tconst { visible, settings } = props;\n\n\tconst customCharts = useSavedCustomChartContext();\n\t// deep clone\n\tconst onSaveClicked = () => customCharts.add(JSON.parse(JSON.stringify(settings)));\n\n\treturn <Button onClick={onSaveClicked} data-visible={visible}>\n\t\t<FontAwesomeIcon icon={faThumbtack}/>\n\t</Button>;\n};","import { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Button from '../../component/button';\nimport { useChartSettingsContext } from './settings-context';\n\nexport const SettingsButton = (props: { visible: boolean }) => {\n\tconst { visible } = props;\n\n\tconst settings = useChartSettingsContext();\n\n\treturn <Button onClick={settings.toggleActive} data-visible={visible} data-active={settings.active}\n\t               data-widget={'chart-settings-btn'}>\n\t\t<FontAwesomeIcon icon={faCog}/>\n\t</Button>;\n};","import React, { useEffect, useRef, useState } from 'react';\nimport { ChartSettings } from '../../component/chart';\nimport { useChartSettingsContext } from './settings-context';\n\nexport const SettingsContainer = (props: {\n\tchildren?: ((props: any) => React.ReactNode) | React.ReactNode\n}) => {\n\tconst { children } = props;\n\n\tconst settings = useChartSettingsContext();\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst [ gridColumns, setGridColumns ] = useState(1);\n\tuseEffect(() => {\n\t\tif (!containerRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\t// @ts-ignore\n\t\tconst resizeObserver = new ResizeObserver(() => {\n\t\t\tif (!containerRef.current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst rect = containerRef.current.getBoundingClientRect();\n\t\t\tsetGridColumns(rect.width > 600 ? 2 : 1);\n\t\t});\n\t\tresizeObserver.observe(containerRef.current);\n\t\treturn () => resizeObserver.disconnect();\n\t});\n\n\treturn <ChartSettings data-visible={settings.active} data-columns={gridColumns} ref={containerRef}>\n\t\t{children}\n\t</ChartSettings>;\n};","import { faChartArea, faChartBar, faChartLine, faChartPie, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport { DarkenColors24 } from '../../../charts/color-theme';\nimport { CustomChart } from '../../../charts/custom-chart';\nimport { ChartDefinitions } from '../../../charts/custom/defs';\nimport { isSettingsValid } from '../../../charts/custom/settings';\nimport {\n\tChartKey,\n\tChartSettings,\n\tChartSettingsDimension,\n\tChartSettingsIndicator,\n\tIndicatorAggregator\n} from '../../../charts/custom/types';\nimport { DataSet, DataTopic } from '../../../data/types';\nimport Button from '../../component/button';\nimport { ChartHeader, ChartOperators, ChartTitle } from '../../component/chart';\nimport { DropdownOption } from '../../component/dropdown';\nimport { useGuideContext } from '../guide-context';\nimport { useChartContext } from './chart-context';\nimport { DimensionDropdown, DimensionInteractionType } from './custom/dimension-dropdown-item';\nimport { DropdownItem } from './custom/dropdown-item';\nimport { IndicatorDropdown, IndicatorInteractionType } from './custom/indicator-dropdown-item';\nimport { InputItem } from './custom/input-item';\nimport { FactorOption } from './custom/types';\nimport { DownloadButton } from './download-button';\nimport { HideOnPrintButton } from './hide-on-print-button';\nimport { ResizeButtons } from './resize-buttons';\nimport { SaveButton } from './save-button';\nimport { SettingsButton } from './settings-button';\nimport { SettingsContainer } from './settings-container';\nimport { useChartSettingsContext } from './settings-context';\n\nconst ChartBody = styled.div.attrs({\n\t'data-widget': 'chart-body'\n})`\n\tflex-grow: 1;\n\theight: 300px;\n\tborder-top: var(--border);\n\tborder-top-color: transparent;\n\tdisplay: flex;\n\t&[data-expanded=true] {\n\t\t@media (min-width: 800px) {\n\t\t\theight: 500px;\n\t\t\t> div[data-widget='chart'],\n\t\t\t> div[data-widget='chart-disabled'] {\n\t\t\t\theight: 500px;\n\t\t\t}\n\t\t}\n\t\t@media (min-width: 1600px) {\n\t\t\theight: 650px;\n\t\t\t> div[data-widget='chart'],\n\t\t\t> div[data-widget='chart-disabled'] {\n\t\t\t\theight: 650px;\n\t\t\t}\n\t\t}\n\t}\n\t&[data-settings-active=true] {\n\t\tborder-top-color: var(--border-color);\n\t\t> div[data-widget='chart-settings'] {\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tbackground-color: var(--bg-color-opacity7);\n\t\t\t> div:last-child {\n\t\t\t\tmargin-bottom: calc(var(--margin) / 2);\n\t\t\t}\n\t\t}\n\t\t> div[data-widget='chart'] + div[data-widget='chart-settings'] {\n\t\t\tbackground-color: var(--bg-color-opacity);\n\t\t}\n\t}\n\t&[data-settings-active=true][data-expanded=false] {\n\t\t> div[data-widget='chart'] {\n\t\t\tflex-grow: 1;\n\t\t}\n\t}\n\t&[data-settings-active=true][data-expanded=true] {\n\t\t> div[data-widget='chart'],\n\t\t> div[data-widget='chart-disabled'] {\n\t\t\twidth: 50%;\n\t\t}\n\t\t> div[data-widget='chart-settings'] {\n\t\t\tposition: relative;\n\t\t\ttop: unset;\n\t\t\tleft: unset;\n\t\t\twidth: 50%;\n\t\t\theight: unset;\n\t\t\tborder-top: 0;\n\t\t\tborder-left: var(--border);\n\t\t\tz-index: unset;\n\t\t\tbackground-color: var(--bg-color);\n\t\t}\n\t}\n\t&[data-settings-active=false] {\n\t\t> div[data-widget='chart'],\n\t\t> div[data-widget='chart-disabled'] {\n\t\t\twidth: 100%\n\t\t}\n\t}\n\t&[data-settings-active=false][data-expanded=true] {\n\t\t> div[data-widget='chart-settings'] {\n\t\t\tposition: relative;\n\t\t\ttop: unset;\n\t\t\tleft: unset;\n\t\t\twidth: 0;\n\t\t\theight: 0;\n\t\t\tborder-top: 0;\n\t\t\tborder-left: 0;\n\t\t\tpadding-left: 0;\n\t\t\tpadding-right: 0;\n\t\t\tz-index: unset;\n\t\t\tbackground-color: var(--bg-color);\n\t\t\toverflow: hidden;\n\t\t}\n\t}\n`;\nconst ChartDisabledPlaceholder = styled.div.attrs({\n\t'data-widget': 'chart-disabled'\n})`\n\tflex-grow: 1;\n\theight: 300px;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr;\n\tgrid-template-rows: 50% auto 1fr;\n\t&[data-visible=false] {\n\t\twidth: 0;\n\t}\n\t> svg {\n\t\tfont-size: 48px;\n\t\topacity: 0.2;\n\t\t&:first-child {\n\t\t\tcolor: ${DarkenColors24[0]};\n\t\t\talign-self: end;\n\t\t\tjustify-self: end;\n\t\t\tpadding-right: 4px;\n\t\t}\n\t\t&:nth-child(2) {\n\t\t\tcolor: ${DarkenColors24[1]};\n\t\t\talign-self: end;\n\t\t\tpadding-left: 4px;\n\t\t}\n\t\t&:nth-child(3) {\n\t\t\tcolor: ${DarkenColors24[2]};\n\t\t\tjustify-self: end;\n\t\t\tpadding-right: 4px;\n\t\t}\n\t\t&:nth-child(4) {\n\t\t\tcolor: ${DarkenColors24[3]};\n\t\t\tpadding-left: 4px;\n\t\t}\n\t}\n`;\nconst SettingsLeading = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tfont-size: 0.8em;\n\tfont-weight: var(--font-bold);\n\theight: var(--height);\n\tborder-bottom: var(--border);\n\t> button:last-child {\n\t\tmin-width: 27px;\n\t\theight: 27px;\n\t\tpadding: 0;\n\t\tborder: 0;\n\t\t&:hover {\n\t\t\tbackground-color: var(--primary-color);\n\t\t\tcolor: var(--invert-color);\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\nconst ChartErrorReminder = styled.div.attrs({\n\t'data-widget': 'chart'\n})`\n\tflex-grow: 1;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\topacity: 0.5;\n`;\n\nconst ChartDefOptions = ChartDefinitions.map(def => ({ label: def.name, value: def.key }));\n\nexport const CustomChartPanel = (props: {\n\tsettings: ChartSettings,\n\tonSettingsChanged: (settings: ChartSettings) => void,\n\tcanSave?: boolean,\n\trnd: boolean\n}) => {\n\tconst { settings, onSettingsChanged, canSave = false, rnd } = props;\n\n\tconst chartContext = useChartContext();\n\tconst settingsContext = useChartSettingsContext();\n\tconst guideContext = useGuideContext();\n\n\tconst onDropdownValueChanged = (key: keyof ChartSettings) => async (option: DropdownOption) => {\n\t\tonSettingsChanged({ ...settings, [key]: option.value as ChartKey });\n\t};\n\tconst onInputValueChanged = (key: keyof ChartSettings) => (value: string) => {\n\t\tonSettingsChanged({ ...settings, [key]: value });\n\t};\n\t// indicator\n\tconst onIndicatorAddClicked = () => onSettingsChanged({\n\t\t...settings,\n\t\tindicators: [ ...settings.indicators, { aggregator: IndicatorAggregator.NONE } ]\n\t});\n\tconst onIndicatorChanged = (indicator: ChartSettingsIndicator, interactionType: IndicatorInteractionType) => {\n\t\tif (interactionType === IndicatorInteractionType.REMOVE) {\n\t\t\tonSettingsChanged({ ...settings, indicators: settings.indicators.filter(item => item !== indicator) });\n\t\t} else if (interactionType === IndicatorInteractionType.CHANGE) {\n\t\t\tonSettingsChanged({ ...settings });\n\t\t}\n\t};\n\tconst onDimensionAddClicked = () => onSettingsChanged({ ...settings, dimensions: [ ...settings.dimensions, {} ] });\n\tconst onDimensionChanged = (dimension: ChartSettingsDimension, interactionType: DimensionInteractionType) => {\n\t\tif (interactionType === DimensionInteractionType.REMOVE) {\n\t\t\tonSettingsChanged({ ...settings, dimensions: settings.dimensions.filter(item => item !== dimension) });\n\t\t} else if (interactionType === DimensionInteractionType.CHANGE) {\n\t\t\tonSettingsChanged({ ...settings });\n\t\t}\n\t};\n\n\tconst data: DataSet = guideContext.getData() || {};\n\tconst factorOptions: Array<FactorOption> = Object.keys(data).map(topicName => {\n\t\tconst topic: DataTopic = data[topicName];\n\t\treturn topic.columns.map(column => {\n\t\t\treturn {\n\t\t\t\tlabel: `${topicName}.${column.label || column.name}`,\n\t\t\t\tvalue: `${topicName}.${column.name}`,\n\t\t\t\ttopicName,\n\t\t\t\ttopic,\n\t\t\t\tcolumn\n\t\t\t};\n\t\t});\n\t}).flat().sort((a, b) => a.label.localeCompare(b.label));\n\n\tconst { valid: settingsValid, advises: invalidAdvises } = isSettingsValid(settings);\n\n\tconst title = settings.title || 'Chart on You';\n\n\t// TODO chart special settings, such as stack for bar/line, symbol size for scatter, etc.\n\treturn <Fragment>\n\t\t<ChartHeader>\n\t\t\t<ChartTitle>{title}</ChartTitle>\n\t\t\t<ChartOperators>\n\t\t\t\t<HideOnPrintButton visible={rnd} title={title}/>\n\t\t\t\t<SaveButton visible={canSave && !!settings.key && settingsValid} settings={settings}/>\n\t\t\t\t<DownloadButton visible={!!settings.key && settingsValid}/>\n\t\t\t\t<SettingsButton visible={true}/>\n\t\t\t\t<ResizeButtons/>\n\t\t\t</ChartOperators>\n\t\t</ChartHeader>\n\t\t<ChartBody data-expanded={chartContext.expanded} data-settings-active={settingsContext.active}>\n\t\t\t{!settings.key\n\t\t\t\t? null\n\t\t\t\t: (invalidAdvises.length !== 0\n\t\t\t\t\t? <ChartErrorReminder>\n\t\t\t\t\t\t{invalidAdvises.map(advise => {\n\t\t\t\t\t\t\treturn <div key={advise}>{advise}</div>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ChartErrorReminder>\n\t\t\t\t\t: <CustomChart data={data} settings={settings} errorWrapper={ChartErrorReminder}/>)\n\t\t\t}\n\t\t\t{settings.key\n\t\t\t\t? null\n\t\t\t\t: <ChartDisabledPlaceholder>\n\t\t\t\t\t<FontAwesomeIcon icon={faChartBar}/>\n\t\t\t\t\t<FontAwesomeIcon icon={faChartPie}/>\n\t\t\t\t\t<FontAwesomeIcon icon={faChartArea}/>\n\t\t\t\t\t<FontAwesomeIcon icon={faChartLine}/>\n\t\t\t\t</ChartDisabledPlaceholder>\n\t\t\t}\n\t\t\t<SettingsContainer>\n\t\t\t\t<SettingsLeading>\n\t\t\t\t\t<span>Identity</span>\n\t\t\t\t</SettingsLeading>\n\t\t\t\t<InputItem label='NarrowPageTitle' value={settings.title} require={true}\n\t\t\t\t           onValueChanged={onInputValueChanged('title')}/>\n\t\t\t\t<DropdownItem label='Chart' value={settings.key}\n\t\t\t\t              require={true} please={'...'}\n\t\t\t\t              options={ChartDefOptions} onOptionChanged={onDropdownValueChanged('key')}/>\n\t\t\t\t<SettingsLeading>\n\t\t\t\t\t<span>Dimensions</span>\n\t\t\t\t\t<Button onClick={onDimensionAddClicked}><FontAwesomeIcon icon={faPlus}/></Button>\n\t\t\t\t</SettingsLeading>\n\t\t\t\t{settings.dimensions.map((dimension, index, dimensions) => {\n\t\t\t\t\treturn <DimensionDropdown key={index}\n\t\t\t\t\t                          label={index === 0 ? 'On' : 'And On'}\n\t\t\t\t\t                          dimension={dimension}\n\t\t\t\t\t                          require={index === 0} please={'...'}\n\t\t\t\t\t                          options={factorOptions}\n\t\t\t\t\t                          removable={dimensions.length !== 1}\n\t\t\t\t\t                          onChanged={onDimensionChanged}/>;\n\t\t\t\t})}\n\t\t\t\t<SettingsLeading>\n\t\t\t\t\t<span>Indicators</span>\n\t\t\t\t\t<Button onClick={onIndicatorAddClicked}><FontAwesomeIcon icon={faPlus}/></Button>\n\t\t\t\t</SettingsLeading>\n\t\t\t\t{settings.indicators.map((indicator, index, indicators) => {\n\t\t\t\t\treturn <IndicatorDropdown key={index}\n\t\t\t\t\t                          label={index === 0 ? 'With' : 'And With'}\n\t\t\t\t\t                          indicator={indicator}\n\t\t\t\t\t                          require={index === 0} please={'...'}\n\t\t\t\t\t                          options={factorOptions}\n\t\t\t\t\t                          removable={indicators.length !== 1}\n\t\t\t\t\t                          onChanged={onIndicatorChanged}/>;\n\t\t\t\t})}\n\t\t\t</SettingsContainer>\n\t\t</ChartBody>\n\t</Fragment>;\n};\n\nexport const AutonomousCustomChartPanel = (props: { rnd: boolean }) => {\n\tconst { rnd } = props;\n\tconst [ settings, setSettings ] = useState<ChartSettings>({\n\t\tdimensions: [ {} ],\n\t\tindicators: [ { aggregator: IndicatorAggregator.NONE } ]\n\t});\n\n\tconst onSettingsChanged = (settings: ChartSettings) => setSettings(settings);\n\n\treturn <CustomChartPanel settings={settings} onSettingsChanged={onSettingsChanged}\n\t                         canSave={true} rnd={rnd}/>;\n};\n","import { ChartMap } from './defs';\nimport { ChartSettings } from './types';\n\nexport const isSettingsValid = (settings: ChartSettings): { valid: boolean, advises: Array<string> } => {\n\tif (!settings.key) {\n\t\treturn { valid: true, advises: [] };\n\t}\n\n\tconst def = ChartMap[settings.key];\n\tif (!def) {\n\t\treturn { valid: false, advises: [ `Chart definition of ${settings.key} is not found, cannot render it.` ] };\n\t}\n\n\tconst validators = Array.isArray(def.settingsValidators) ? def.settingsValidators : [ def.settingsValidators ];\n\tconst advises = validators.map(validate => validate(settings)).flat();\n\treturn {\n\t\tvalid: advises.length === 0,\n\t\tadvises\n\t};\n};","import React from 'react';\nimport { AsRnd } from './as-rnd';\nimport { ChartContextProvider } from './chart-context';\nimport { AutonomousCustomChartPanel } from './custom-chart-panel';\n\nexport const AutonomousCustomChart = (props: { rnd: boolean }) => {\n\tconst { rnd } = props;\n\n\treturn <AsRnd rnd={rnd} hidden={true}>\n\t\t<ChartContextProvider>\n\t\t\t<AutonomousCustomChartPanel rnd={rnd}/>\n\t\t</ChartContextProvider>\n\t</AsRnd>;\n};","import React, { Fragment } from 'react';\nimport { ChartSettings } from '../../../charts/custom/types';\nimport { AsRnd } from './as-rnd';\nimport { ChartContextProvider } from './chart-context';\nimport { CustomChartPanel } from './custom-chart-panel';\nimport { useSavedCustomChartContext } from './saved-custom-chart-context';\n\nexport const CustomCharts = (props: { rnd: boolean }) => {\n\tconst { rnd } = props;\n\n\tconst customCharts = useSavedCustomChartContext();\n\n\tconst onSettingsChanged = (replaced: ChartSettings) => (replacement: ChartSettings) => customCharts.replace(replacement, replaced);\n\n\treturn <Fragment>\n\t\t{customCharts.get().map((settings, index) => {\n\t\t\treturn <AsRnd rnd={rnd} key={index}>\n\t\t\t\t<ChartContextProvider>\n\t\t\t\t\t<CustomChartPanel settings={settings} onSettingsChanged={onSettingsChanged(settings)}\n\t\t\t\t\t                  rnd={rnd}/>\n\t\t\t\t</ChartContextProvider>\n\t\t\t</AsRnd>;\n\t\t})}\n\t</Fragment>;\n};\n","import {faTrashAlt} from '@fortawesome/free-regular-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button, {ButtonType} from '../../component/button';\nimport {HideChart, useHideOnPrintContext} from './hide-on-print-context';\n\nconst TrashButton = styled(Button).attrs({\n\t'data-widget': 'chart-hide-on-print-btn'\n})<{ count: number }>`\n\tdisplay: block;\n\tposition: fixed;\n\tfont-size: 32px;\n\tline-height: 64px;\n\twidth: 64px;\n\tright: 32px;\n\ttop: 92px;\n\tz-index: 10000;\n\tpadding: 0;\n\tborder: 0;\n\tborder-radius: 100%;\n\t> span {\n\t\tdisplay: block;\n\t    position: absolute;\n\t    font-size: var(--font-size);\n\t\tfont-weight: var(--font-boldest);\n\t\ttop: calc(var(--font-size) - 2px);\n\t\tright: calc(var(--font-size) - 2px);\n\t\tline-height: 0.8em;\n\t}\n\t&:before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 40px;\n\t\tleft: -23px;\n\t\twidth: 60px;\n\t\theight: 60px;\n\t\tborder-radius: 50%;\n\t\tborder: 24px solid var(--primary-color);\n\t\toverflow: hidden;\n\t\tclip: rect(0, 0, 0, 0);\n\t\ttransition: clip 300ms ease-in-out;\n\t\topacity: 0;\n\t}\n\t&:hover {\n\t\tborder-top-left-radius: 0;\n\t\tborder-bottom-left-radius: 0;\n\t\twidth: 72px;\n\t\t&:before {\n\t\t\tclip: ${({count}) => count > 2 ? 'rect(0, 30px, 30px, 0)' : 'rect(0, 0, 0, 0)'};\n\t\t\topacity: 1;\n\t\t}\n\t\t> div {\n\t\t\topacity: 1;\n\t\t\tright: 71px;\n\t\t\tborder: var(--border);\n\t\t\tborder-color: var(--primary-color);\n\t\t\twidth: 200px;\n\t\t\theight: calc(${({count}) => count} * 28px + 5px);\n\t\t\tborder-bottom-right-radius: ${({count}) => count > 2 ? 'var(--border-radius)' : 0};\n\t\t}\n\t}\n`;\nconst HideCharts = styled.div`\n\toverflow: auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-height: 64px;\n\tmax-height: 282px;\n\theight: 0;\n\twidth: 0;\n\tposition: absolute;\n\topacity: 0;\n\tright: 0;\n\ttop: 0;\n\tborder-radius: var(--border-radius);\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n\tbackground-color: var(--primary-color);\n\tz-index: 1;\n\toverflow-x: hidden;\n\ttransition: all 300ms ease-in-out;\n\t> div {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\theight: 28px;\n\t\tline-height: initial;\n\t\tcolor: var(--invert-color);\n\t\tborder-top: var(--border);\n\t\tborder-top-color: var(--primary-color);\n\t\tpadding: 0 calc(var(--margin) / 2);\n\t\tfont-size: 12px;\n\t\t&:first-child {\n\t\t\tborder-top-color: transparent;\n\t\t}\n\t\t&:hover {\n\t\t\tborder-radius: var(--border-radius);\n\t\t\tbackground-color: var(--primary-hover-color);\n\t\t\ttransform: scale(1.05);\n\t\t\t> span {\n\t\t\t\t&:first-child {\n\t\t\t\t\tbackground-color: var(--invert-color);\n\t\t\t\t\tcolor: var(--primary-hover-color);\n\t\t\t\t}\n\t\t\t\t&:last-child {\n\t\t\t\t\tcolor: var(--invert-color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t> span {\n\t\t\ttransition: all 300ms ease-in-out;\n\t\t\t&:first-child {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin-right: 6px;\n\t\t\t\twidth: 32px;\n\t\t\t\tborder-radius: 9px;\n\t\t\t\tcolor: var(--primary-color);\n\t\t\t\tbackground-color: var(--invert-color);\n\t\t\t\theight: 18px;\n\t\t\t\tline-height: 18px;\n\t\t\t}\n\t\t\t&:last-child {\n\t\t\t\tflex-grow: 1;\n\t\t\t\ttext-align: left;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const HiddenChartsStackButton = (props: { rnd: boolean }) => {\n\tconst { rnd } = props;\n\n\tconst hideOnPrintContext = useHideOnPrintContext();\n\n\tif (!rnd) {\n\t\treturn null;\n\t}\n\n\tconst charts = hideOnPrintContext.get();\n\tconst has = charts.length !== 0;\n\n\tconst onRecoverClicked = (chart: HideChart) => async () => await hideOnPrintContext.recover(chart);\n\n\treturn <TrashButton inkType={ButtonType.PRIMARY} count={charts.length}>\n\t\t<FontAwesomeIcon icon={faTrashAlt}/>\n\t\t<span>{charts.length}</span>\n\t\t<HideCharts>\n\t\t\t{\n\t\t\t\thas\n\t\t\t\t\t? charts.map((chart, index) => {\n\t\t\t\t\t\treturn <div key={`${chart.title}-${index}`}\n\t\t\t\t\t\t            title={chart.title}\n\t\t\t\t\t\t            onClick={onRecoverClicked(chart)}>\n\t\t\t\t\t\t\t<span>{index + 1}</span>\n\t\t\t\t\t\t\t<span>{chart.title}</span>\n\t\t\t\t\t\t</div>;\n\t\t\t\t\t})\n\t\t\t\t\t: <div>\n\t\t\t\t\t\t<span>0</span>\n\t\t\t\t\t\t<span>No chart is hidden.</span>\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</HideCharts>\n\t</TrashButton>;\n};\n","import styled from 'styled-components';\n\nexport const MetricsContainer = styled.div.attrs({\n\t'data-widget': 'metrics-container'\n})`\n\tdisplay: grid;\n\tposition: relative;;\n\tgrid-template-columns: 1fr;\n\tgrid-column-gap: var(--margin);\n\tgrid-row-gap: var(--margin);\n\tmargin: var(--margin) var(--margin) 0;\n\t&[data-rnd=true] {\n\t\theight: calc(42.0cm - 3.3cm);\n\t\twidth: calc(29.7cm - 3cm);\n\t\tmargin-right: auto;\n\t\t&:before,\n\t\t&:after {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tfont-size: 5em;\n\t\t\tfont-weight: var(--font-boldest);\n\t\t\topacity: 0.15;\n\t\t\tborder-radius: 2px;\n\t\t}\n\t\t&:before {\n\t\t\tcontent: 'A4';\n\t\t\theight: calc(29.7cm - 3.3cm);\n\t\t\twidth: calc(21cm - 3cm);\n\t\t\tcolor: var(--success-color);\n\t\t\tborder: 2px dashed var(--success-color);\n\t\t\tz-index: -1;\n\t\t}\n\t\t&:after {\n\t\t\tcontent: 'A3';\n\t\t\theight: calc(42.0cm - 6cm);\n\t\t\twidth: calc(29.7cm - 4.6cm);\n\t\t\tcolor: var(--danger-color);\n\t\t\tz-index: -2;\n\t\t\tborder: 2px dashed var(--danger-color);\n\t\t}\n\t}\n\t@media (min-width: 800px) {\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t}\n\t@media (min-width: 1600px) {\n\t\tgrid-template-columns: repeat(4, 1fr);\n\t}\n`;\n","import { faLock, faTimes, faUnlock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useState } from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport styled from 'styled-components';\nimport Button, { ButtonType } from '../../component/button';\nimport { AsRnd } from './as-rnd';\n\nexport interface ParagraphText {\n\ttext: string;\n\tuuid: string;\n}\n\nconst QuillFonts = [ 'Arial', 'Microsoft-YaHei', 'SimHei', 'Tahoma', 'Times-New-Roman', 'Verdana' ];\nconst Font = Quill.import('formats/font');\nFont.whitelist = QuillFonts; //将字体加入到白名单\n\nconst modules = {\n\ttoolbar: [\n\t\t[ { font: QuillFonts } ],\n\t\t[ { header: [ 1, 2, 3, 4, 5, 6, false ] }, { 'align': [] } ],\n\t\t[ 'bold', 'italic', 'underline', 'strike', 'blockquote' ],\n\t\t[ { list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }, { script: 'sub' }, { script: 'super' } ],\n\t\t[ 'image' ],\n\t\t[ { 'color': [] }, { 'background': [] } ],\n\t\t[ 'clean' ]\n\t]\n};\n\nconst RichEditorRndContainer = styled.div`\n\tposition: absolute;\n\t&:hover {\n\t\t.quill {\n\t\t\t.ql-toolbar.ql-snow + .ql-container.ql-snow {\n\t            border-top-color: var(--border-color);\n\t            border-top-style: dashed;\n\t        }\n\t\t\t.ql-container {\n\t\t\t\tborder-color: var(--border-color);\n\t\t\t\tborder-style: dashed;\n\t\t\t}\n\t\t}\n\t}\n\t&:focus-within {\n\t\tdiv[data-widget='chart-paragraph-container'] > button {\n\t\t\tpointer-events: auto;\n\t\t\topacity: 1;\n\t\t\t&:first-child {\n\t\t\t\tleft: calc(100% + 4px);\n\t\t\t}\n\t\t\t&:nth-child(2) {\n\t\t\t\tleft: calc(100% + 4px + 32px + 4px);\n\t\t\t}\n\t\t}\n\t\t.quill {\n\t\t\t.ql-toolbar {\n\t\t\t\topacity: 1;\n\t\t\t\tpointer-events: auto;\n\t\t\t\t&.ql-snow + .ql-container.ql-snow {\n\t\t            border-top-color: var(--border-color);\n\t\t             border-top-style: solid;\n\t\t        }\n\t\t\t}\n\t\t\t.ql-container {\n\t\t\t\tborder-color: var(--border-color);\n\t\t\t\tbackground-color: var(--bg-color);\n\t\t\t\tborder-style: solid;\n\t\t\t}\n\t\t}\n\t}\n`;\nconst RichEditorContainer = styled.div.attrs({\n\t'data-widget': 'chart-paragraph-container'\n})`\n\tposition: relative;\n\theight: 100%;\n\t> button {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\tborder: 0;\n\t\tborder-radius: 100%;\n\t\ttop: 6px;\n\t\tleft: 100%;\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tpointer-events: none;\n\t\tpadding: 0;\n\t\topacity: 0;\n\t}\n\t.quill {\n\t\theight: 100%;\n\t\t.ql-toolbar {\n\t\t\tposition: absolute;\n\t\t\tborder: var(--border);\n\t\t\tborder-radius: var(--border-radius);\n\t        opacity: 0;\n\t        pointer-events: none;\n\t        bottom: calc(100% + 4px);\n\t        width: 400px;\n\t        background-color: var(--bg-color);\n\t        transition: all 300ms ease-in-out;\n\t        &.ql-snow + .ql-container.ql-snow {\n\t        \tborder-top: var(--border);\n\t        \tborder-top-color: transparent;\n\t        }\n\t        &.ql-snow .ql-picker.ql-font {\n\t        \twidth: 200px;\n\t        }\n\t\t}\n\t\t.ql-container {\n\t\t\tborder: var(--border);\n\t\t\tborder-color: transparent;\n\t\t\tborder-radius: var(--border-radius);\n\t\t\ttransition: all 300ms ease-in-out;\n\t\t}\n\t}\n`;\nconst RichEditor = (props: {\n\trnd: boolean,\n\tvalue: ParagraphText,\n\tonChanged: (text: ParagraphText) => void,\n\tonRemove: () => void;\n}) => {\n\tconst { rnd, value, onChanged, onRemove } = props;\n\n\tconst [ locked, setLocked ] = useState(false);\n\tconst onTextChanged = (text: string) => {\n\t\tvalue.text = text;\n\t\tonChanged(value);\n\t};\n\n\treturn <RichEditorRndContainer>\n\t\t<AsRnd rnd={rnd} lock={locked}>\n\t\t\t<RichEditorContainer>\n\t\t\t\t<Button inkType={ButtonType.PRIMARY} title={locked ? 'Unlock' : 'Lock'}\n\t\t\t\t        onClick={() => setLocked(!locked)}>\n\t\t\t\t\t<FontAwesomeIcon icon={locked ? faUnlock : faLock}/>\n\t\t\t\t</Button>\n\t\t\t\t<Button inkType={ButtonType.PRIMARY} title='Delete this paragraph'\n\t\t\t\t        onClick={onRemove}>\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes}/>\n\t\t\t\t</Button>\n\t\t\t\t<ReactQuill value={value.text} modules={modules} onChange={onTextChanged}/>\n\t\t\t</RichEditorContainer>\n\t\t</AsRnd>\n\t</RichEditorRndContainer>;\n};\n\nexport const Paragraphs = (props: {\n\trnd: boolean,\n\ttexts: Array<ParagraphText>,\n\tonTextsChanged: (texts: Array<ParagraphText>) => void\n}) => {\n\tconst { rnd, texts, onTextsChanged } = props;\n\n\tif (!rnd) {\n\t\treturn null;\n\t}\n\n\tconst onTextChanged = () => {\n\t\tonTextsChanged([ ...texts ]);\n\t};\n\tconst onTextRemove = (text: ParagraphText) => () => {\n\t\tonTextsChanged(texts.filter(t => t !== text));\n\t};\n\n\treturn <Fragment>\n\t\t{texts.map((text, index) => {\n\t\t\treturn <RichEditor rnd={rnd} value={text} key={text.uuid}\n\t\t\t                   onChanged={onTextChanged}\n\t\t\t                   onRemove={onTextRemove(text)}/>;\n\t\t})}\n\t</Fragment>;\n};\n","import { faChartBar } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport { DomainChart, DomainChartGroupBy, DomainChartOptions } from '../../../services/guide/types';\nimport {\n\tChartHeader,\n\tChartOperators,\n\tChartSettingsItem,\n\tChartSettingsItemEditor,\n\tChartSettingsItemLabel,\n\tChartTitle\n} from '../../component/chart';\nimport Dropdown, { DropdownOption } from '../../component/dropdown';\nimport { useGuideContext } from '../guide-context';\nimport { DownloadButton } from './download-button';\nimport { HideOnPrintButton } from './hide-on-print-button';\nimport { ResizeButtons } from './resize-buttons';\nimport { SettingsButton } from './settings-button';\nimport { SettingsContainer } from './settings-container';\n\nconst ChartDisabledPlaceholder = styled.div.attrs({\n\t'data-widget': 'chart-disabled'\n})`\n\tflex-grow: 1;\n\theight: 300px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\t> svg {\n\t\tfont-size: 64px;\n\t\topacity: 0.2;\n\t}\n\t> div {\n\t\tfont-size: 0.8em;\n\t\topacity: 0.8;\n\t}\n`;\n\nconst GroupBy = (props: {\n\tdef?: Array<DomainChartGroupBy>,\n\toptions: any,\n\tonChange: (options: any) => void\n}) => {\n\tconst { def, options, onChange } = props;\n\n\tif (!def) {\n\t\treturn null;\n\t}\n\n\tconst onGroupByChanged = (key: string) => async (option: DropdownOption) => {\n\t\tonChange({ ...options, [key]: option.value });\n\t};\n\n\treturn <Fragment>\n\t\t{def.map(item => {\n\t\t\tconst groupByOptions = item.options.map(option => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: option.label,\n\t\t\t\t\tvalue: option.value\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn <ChartSettingsItem key={item.label}>\n\t\t\t\t<ChartSettingsItemLabel>{item.label}</ChartSettingsItemLabel>\n\t\t\t\t<ChartSettingsItemEditor>\n\t\t\t\t\t<Dropdown options={groupByOptions} onChange={onGroupByChanged(item.key)} value={options[item.key]}/>\n\t\t\t\t</ChartSettingsItemEditor>\n\t\t\t</ChartSettingsItem>;\n\t\t})}\n\t</Fragment>;\n};\n\nconst buildChartOptions = (def?: DomainChartOptions) => {\n\tif (!def) {\n\t\treturn {};\n\t}\n\n\tconst options: { [key in string]: any } = {};\n\t// group by\n\t(def.groupBy || []).forEach(groupBy => {\n\t\tconst key = groupBy.key;\n\t\toptions[key] = groupBy.options.find(item => item.default)?.value;\n\t});\n\n\treturn options;\n};\n\nexport const PredefinedChartPanel = (props: { chart: DomainChart, rnd: boolean }) => {\n\tconst { chart, rnd } = props;\n\n\tconst guide = useGuideContext();\n\tconst [ options, setOptions ] = useState(buildChartOptions(chart.options));\n\n\tconst Chart = chart.chart;\n\tconst data = guide.getData();\n\tconst hasSettings = !!(chart.options && Object.keys(chart.options).length !== 0);\n\tconst chartEnabled = chart.enabled ? chart.enabled(data) : { enabled: true, reason: null };\n\n\treturn <Fragment>\n\t\t<ChartHeader>\n\t\t\t<ChartTitle>{chart.name}</ChartTitle>\n\t\t\t<ChartOperators>\n\t\t\t\t<HideOnPrintButton visible={rnd} title={chart.name}/>\n\t\t\t\t<DownloadButton visible={chartEnabled.enabled}/>\n\t\t\t\t<SettingsButton visible={hasSettings && chartEnabled.enabled}/>\n\t\t\t\t<ResizeButtons visible={chartEnabled.enabled}/>\n\t\t\t</ChartOperators>\n\t\t</ChartHeader>\n\t\t<SettingsContainer>\n\t\t\t<GroupBy def={chart.options?.groupBy} options={options} onChange={setOptions}/>\n\t\t</SettingsContainer>\n\t\t{chartEnabled.enabled\n\t\t\t? <Chart data={data || {}} options={options}/>\n\t\t\t: <ChartDisabledPlaceholder>\n\t\t\t\t<FontAwesomeIcon icon={faChartBar}/>\n\t\t\t\t<div>{chartEnabled.reason}</div>\n\t\t\t</ChartDisabledPlaceholder>\n\t\t}\n\t</Fragment>;\n};","import React, { Fragment } from 'react';\nimport { useGuideContext } from '../guide-context';\nimport { AsRnd } from './as-rnd';\nimport { ChartContextProvider } from './chart-context';\nimport { PredefinedChartPanel } from './predefined-chart-panel';\n\nexport const PredefinedCharts = (props: { rnd: boolean }) => {\n\tconst { rnd } = props;\n\n\tconst guide = useGuideContext();\n\tconst domain = guide.getDomain();\n\tconst charts = domain.charts || [];\n\n\treturn <Fragment>\n\t\t{charts.map(chart => {\n\t\t\tconst hidden = !(chart.enabled ? chart.enabled(guide.getData()) : { enabled: true }).enabled;\n\t\t\treturn <AsRnd rnd={rnd} hidden={hidden} key={chart.name}>\n\t\t\t\t<ChartContextProvider>\n\t\t\t\t\t<PredefinedChartPanel chart={chart} rnd={rnd}/>\n\t\t\t\t</ChartContextProvider>\n\t\t\t</AsRnd>;\n\t\t})}\n\t</Fragment>;\n};\n","import { faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button, { ButtonType } from '../../component/button';\n\nconst PrintButton = styled(Button).attrs({\n\t'data-widget': 'chart-print-pdf-btn'\n})`\n\tdisplay: block;\n\tposition: fixed;\n\tfont-size: 32px;\n\tline-height: 64px;\n\twidth: 64px;\n\tright: 32px;\n\ttop: 240px;\n\tz-index: 10000;\n\tpadding: 0;\n\tborder: 0;\n\tborder-radius: 100%;\n`;\n\nexport const PrintPdfButton = (props: {\n\trnd: boolean,\n\tonPrint: () => void\n}) => {\n\tconst { rnd, onPrint } = props;\n\n\tif (!rnd) {\n\t\treturn null;\n\t}\n\n\treturn <PrintButton inkType={ButtonType.PRIMARY} title='Print as PDF' onClick={onPrint}>\n\t\t<FontAwesomeIcon icon={faPrint}/>\n\t</PrintButton>;\n};\n","import { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button, { ButtonType } from '../../component/button';\nimport { useHideOnPrintContext } from './hide-on-print-context';\n\nconst QuitButton = styled(Button).attrs({\n\t'data-widget': 'chart-quit-export-btn'\n})`\n\tdisplay: block;\n\tposition: fixed;\n\tfont-size: 32px;\n\tline-height: 64px;\n\twidth: 64px;\n\tright: 32px;\n\ttop: 314px;\n\tz-index: 10000;\n\tpadding: 0;\n\tborder: 0;\n\tborder-radius: 100%;\n`;\n\nexport const QuitExportButton = (props: {\n\trnd: boolean,\n\tonQuited: () => void\n}) => {\n\tconst { rnd, onQuited } = props;\n\n\tconst hideOnPrintContext = useHideOnPrintContext();\n\n\tif (!rnd) {\n\t\treturn null;\n\t}\n\n\tconst onClicked = () => {\n\t\tonQuited();\n\t\thideOnPrintContext.clear();\n\t};\n\n\treturn <QuitButton inkType={ButtonType.PRIMARY} title='Quit Export' onClick={onClicked}>\n\t\t<FontAwesomeIcon icon={faDoorOpen}/>\n\t</QuitButton>;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { v4 } from 'uuid';\nimport Path, { toDomain } from '../../../common/path';\nimport { BigButton, ButtonType } from '../../component/button';\nimport { useAlert } from '../../context/alert';\nimport { useResponsive } from '../../context/responsive';\nimport { NoObjects, ObjectsContainer, ObjectsList } from '../component/object-list';\nimport { OperationBar, OperationBarPlaceholder } from '../component/operations-bar';\nimport { useGuideContext } from '../guide-context';\nimport { AddParagraphButton } from './add-paragraph-button';\nimport { AutonomousCustomChart } from './autonomous-custom-chart';\nimport { CustomCharts } from './custom-charts';\nimport { HiddenChartsStackButton } from './hidden-charts-stack-button';\nimport { HideOnPrintProvider } from './hide-on-print-context';\nimport { MetricsContainer } from './metrics-container';\nimport { Paragraphs, ParagraphText } from './paragraphs';\nimport { PredefinedCharts } from './predefined-charts';\nimport { PrintPdfButton } from './print-pdf-button';\nimport { QuitExportButton } from './quit-export';\nimport { SavedCustomChartContextProvider } from './saved-custom-chart-context';\n\nconst BuildMetrics = () => {\n\tconst history = useHistory();\n\tconst guide = useGuideContext();\n\tconst responsive = useResponsive();\n\tconst alert = useAlert();\n\n\tconst [ rnd, setRnd ] = useState(false);\n\tconst [ texts, setTexts ] = useState<Array<ParagraphText>>([]);\n\tconst metricsContainerRef = useRef<HTMLDivElement>(null);\n\tuseEffect(() => {\n\t\tif (!rnd || metricsContainerRef.current == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onBeforePrint = () => {\n\t\t\tconst container = metricsContainerRef.current!;\n\t\t\tconst containerRect = container.getBoundingClientRect();\n\t\t\tconst charts = container.querySelectorAll('.react-draggable');\n\t\t\tconst { width, height } = Array.from(charts).reduce((size, chart) => {\n\t\t\t\tconst rect = chart.getBoundingClientRect();\n\t\t\t\tsize.width = Math.max(size.width, rect.left + rect.width - containerRect.left);\n\t\t\t\tsize.height = Math.max(size.height, rect.top + rect.height - containerRect.top);\n\t\t\t\treturn size;\n\t\t\t}, { width: 0, height: 0 });\n\t\t\tcontainer.style.width = `${width}px`;\n\t\t\tcontainer.style.height = `${height}px`;\n\t\t\tdocument.documentElement.setAttribute('data-on-print', 'true');\n\t\t};\n\t\tconst onAfterPrint = () => {\n\t\t\tconst container = metricsContainerRef.current!;\n\t\t\tcontainer.style.width = ``;\n\t\t\tcontainer.style.height = ``;\n\t\t\tdocument.documentElement.removeAttribute('data-on-print');\n\t\t};\n\t\twindow.addEventListener('beforeprint', onBeforePrint);\n\t\twindow.addEventListener('afterprint', onAfterPrint);\n\n\t\tconst charts = metricsContainerRef.current.querySelectorAll('.react-draggable');\n\t\tlet top = 0;\n\t\tlet left = 0;\n\t\tArray.from(charts).forEach(chart => {\n\t\t\tconst div = chart as HTMLDivElement;\n\t\t\tdiv.style.width = '8.5cm';\n\t\t\tdiv.style.height = '6cm';\n\t\t\tdiv.style.top = `${top}cm`;\n\t\t\tdiv.style.left = `${left}cm`;\n\t\t\tif (left === 0) {\n\t\t\t\tleft = 9.6;\n\t\t\t} else {\n\t\t\t\tleft = 0;\n\t\t\t\ttop += 6 + 1;\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('beforeprint', onBeforePrint);\n\t\t\twindow.removeEventListener('afterprint', onAfterPrint);\n\t\t};\n\t}, [ rnd ]);\n\n\tconst hasTopic = Object.keys(guide.getData() || {}).length !== 0;\n\tconst onMeasureIndicatorsClicked = () => {\n\t\thistory.push(toDomain(Path.GUIDE_MEASURE_INDICATOR, guide.getDomain().code));\n\t};\n\tconst onSaveAsPdfClicked = () => window.print();\n\tconst onStartRndClicked = () => {\n\t\tif (responsive.mobile) {\n\t\t\talert.show('Export doesn\\'t support in mobile device.');\n\t\t\treturn;\n\t\t}\n\t\tif (!hasTopic) {\n\t\t\talert.show('No topic described.');\n\t\t\treturn;\n\t\t}\n\t\tsetRnd(true);\n\t};\n\tconst onQuitExportClicked = () => setRnd(false);\n\tconst onAddParagraphClicked = () => setTexts([ ...texts, { text: 'New paragraph content here.', uuid: v4() } ]);\n\n\tconst onNoObjectsClicked = () => history.push(toDomain(Path.GUIDE_IMPORT_DATA, guide.getDomain().code));\n\n\treturn <HideOnPrintProvider>\n\t\t{\n\t\t\thasTopic\n\t\t\t\t? <MetricsContainer data-rnd={rnd} ref={metricsContainerRef}>\n\t\t\t\t\t<PredefinedCharts rnd={rnd}/>\n\t\t\t\t\t<SavedCustomChartContextProvider>\n\t\t\t\t\t\t<CustomCharts rnd={rnd}/>\n\t\t\t\t\t\t<AutonomousCustomChart rnd={rnd}/>\n\t\t\t\t\t</SavedCustomChartContextProvider>\n\t\t\t\t\t<Paragraphs rnd={rnd} texts={texts} onTextsChanged={setTexts}/>\n\t\t\t\t</MetricsContainer>\n\t\t\t\t: <ObjectsContainer>\n\t\t\t\t\t<ObjectsList data-has-data={false} data-has-active={false}>\n\t\t\t\t\t\t<NoObjects onClick={onNoObjectsClicked}>\n\t\t\t\t\t\t\tNo valid data imported, back and <span>Import Data</span> again.\n\t\t\t\t\t\t</NoObjects>\n\t\t\t\t\t</ObjectsList>\n\t\t\t\t</ObjectsContainer>\n\t\t}\n\t\t<OperationBar>\n\t\t\t{rnd ? null : <BigButton onClick={onMeasureIndicatorsClicked}>Adjust Indicators</BigButton>}\n\t\t\t<OperationBarPlaceholder/>\n\t\t\t{rnd ? null : <BigButton inkType={ButtonType.PRIMARY} onClick={onStartRndClicked}>Export</BigButton>}\n\t\t</OperationBar>\n\t\t<AddParagraphButton rnd={rnd} onAdd={onAddParagraphClicked}/>\n\t\t<PrintPdfButton rnd={rnd} onPrint={onSaveAsPdfClicked}/>\n\t\t<HiddenChartsStackButton rnd={rnd}/>\n\t\t<QuitExportButton rnd={rnd} onQuited={onQuitExportClicked}/>\n\t</HideOnPrintProvider>;\n};\n\nexport default BuildMetrics;","import { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Path, { toDomain } from '../../../common/path';\nimport { listTopDomains, TopDomains } from '../../../services/guide/domain';\nimport { Domain } from '../../../services/guide/types';\nimport { BigButton, ButtonType } from '../../component/button';\nimport { useNotImplemented } from '../../context/not-implemented';\nimport { OperationBar, OperationBarPlaceholder } from '../component/operations-bar';\nimport { useGuideContext } from '../guide-context';\n\nconst Domains = styled.div`\n\tpadding: var(--margin) var(--margin) 0;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr;\n\tgrid-column-gap: calc(var(--margin) * 2);\n\tgrid-row-gap: calc(var(--margin));\n\t@media (max-width: ${({ theme }) => theme.maxMobileWidth}px) {\n\t\tgrid-template-columns: 1fr;\n\t}\n`;\nconst DomainButton = styled.div`\n\tfont-size: 1.8em;\n\tfont-weight: var(--font-bold);\n\tline-height: 2.2em;\n\tborder: var(--border);\n\tborder-radius: calc(var(--border-radius) * 2);\n\tpadding: calc(var(--margin) / 2) var(--margin);\n\ttransition: all 300ms ease-in-out;\n\tcursor: pointer;\n\tuser-select: none;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\t@media (min-width: ${({ theme }) => theme.minDeskWidth}px) {\n\t\t&:hover {\n\t\t\ttransform: scale(1.05);\n\t\t}\n\t}\n\t> svg {\n\t\topacity: 0;\n\t\ttransition: opacity 300ms ease-in-out;\n\t}\n\t&[data-selected=true] > svg {\n\t\topacity: 1;\n\t}\n\t@media (max-width: ${({ theme }) => theme.maxMobileWidth}px) {\n\t\tpadding: var(--margin) var(--margin);\n\t\tline-height: 1.2em;\n\t}\n`;\nconst MoreDomainsButton = styled(DomainButton)`\n\topacity: 0.5;\n\t&:hover {\n\t\topacity: 0.7;\n\t}\n`;\n\nconst DomainSelect = () => {\n\tconst history = useHistory();\n\tconst notImpl = useNotImplemented();\n\tconst guide = useGuideContext();\n\n\tconst [ data, setData ] = useState<TopDomains>({ domains: [], hasMore: false });\n\n\tconst fetchDomains = async () => {\n\t\ttry {\n\t\t\tconst data = await listTopDomains();\n\t\t\tsetData(data);\n\t\t} catch {\n\t\t\t// do nothing\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\t// noinspection JSIgnoredPromiseFromCall\n\t\tfetchDomains();\n\t}, []);\n\n\tconst selectedDomain = guide.getDomain();\n\tconst equals = (domain: Domain) => selectedDomain && domain.code === selectedDomain.code;\n\tconst onDomainClicked = (domain: Domain) => () => {\n\t\tif (equals(domain)) {\n\t\t\tguide.clearDomain();\n\t\t} else {\n\t\t\tguide.setDomain(domain);\n\t\t}\n\t};\n\tconst onNextClicked = () => {\n\t\thistory.push(toDomain(Path.GUIDE_IMPORT_DATA, guide.getDomain().code));\n\t};\n\n\tconst buttonLabel = !!selectedDomain ? 'Next' : 'Ignore';\n\tconst buttonType = !!selectedDomain ? ButtonType.PRIMARY : ButtonType.DEFAULT;\n\n\treturn <Fragment>\n\t\t<Domains>\n\t\t\t{data.domains.map(domain => {\n\t\t\t\treturn <DomainButton key={domain.code} data-selected={equals(domain)}\n\t\t\t\t                     onClick={onDomainClicked(domain)}>\n\t\t\t\t\t<span>{domain.label}</span>\n\t\t\t\t\t<FontAwesomeIcon icon={faCheck}/>\n\t\t\t\t</DomainButton>;\n\t\t\t})}\n\t\t\t{\n\t\t\t\t// TODO explore more clicked\n\t\t\t}\n\t\t\t{data.hasMore ?\n\t\t\t\t<MoreDomainsButton onClick={notImpl.show}>Explore More...</MoreDomainsButton> : null}\n\t\t</Domains>\n\t\t<OperationBar>\n\t\t\t<OperationBarPlaceholder/>\n\t\t\t<BigButton inkType={buttonType} onClick={onNextClicked}>{buttonLabel}</BigButton>\n\t\t</OperationBar>\n\t</Fragment>;\n};\n\nexport default DomainSelect;","import crypto from \"crypto\";\nimport parse from 'csv-parse';\nimport { FileLike, ParsedFile } from './types';\n\nexport const readFromCsv = async (file: FileLike): Promise<ParsedFile> => {\n\tif (!file.name.endsWith('.csv')) {\n\t\tthrow new Error('Not a CSV file.');\n\t}\n\n\tconst text = await file.text();\n\tconst hash = crypto.createHash('md5').update(text).digest('hex');\n\treturn new Promise((resolve, reject) => {\n\t\tparse(text, (err, output) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve({\n\t\t\t\thash,\n\t\t\t\tfilename: file.name,\n\t\t\t\tdata: output.reduce((data: { columns: Array<string>, data: Array<any> }, values: Array<any>, rowIndex: number) => {\n\t\t\t\t\tif (rowIndex === 0) {\n\t\t\t\t\t\tdata.columns = values.map(value => (value || '').trim());\n\t\t\t\t\t} else if (values.length !== 0) {\n\t\t\t\t\t\tdata.data.push(values.reduce((row, value, valueIndex) => {\n\t\t\t\t\t\t\trow[data.columns[valueIndex]] = value;\n\t\t\t\t\t\t\treturn row;\n\t\t\t\t\t\t}, {} as { [key in string]: any }));\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\t}, { columns: [] as Array<string>, data: [] as Array<any> }).data\n\t\t\t});\n\t\t});\n\t});\n};","import crypto from \"crypto\";\nimport { FileLike, ParsedFile } from './types';\n\nexport const readFromJson = async (file: FileLike): Promise<ParsedFile> => {\n\tif (!file.name.endsWith('.json')) {\n\t\tthrow new Error('Not a JSON file.');\n\t}\n\n\tconst text = await file.text();\n\tconst hash = crypto.createHash('md5').update(text).digest('hex');\n\tconst data = JSON.parse(text);\n\tif (Array.isArray(data)) {\n\t\treturn { hash, data, filename: file.name };\n\t} else {\n\t\treturn { hash, data: [ data ], filename: file.name };\n\t}\n};","import { readFromCsv } from '../file-reader/csv-reader';\nimport { readFromJson } from '../file-reader/json-reader';\nimport { FileLike, ParsedFile } from '../file-reader/types';\n\n/**\n * Parse file context,<br>\n * Extension name must be '.json', otherwise, will be treated as csv file.<br>\n * <b>JSON Parse</b>\n * <ul>\n *  <li>Will wrap parsed data as array when it is not an array in json parsing,</li>\n *  <li>Will not detect type of parse data, except array detecting.</li>\n * </ul>\n * <b>CSV Parse</b>\n * <ul>\n *  <li>Splitted by comma,</li>\n *  <li>Use first line as column names,</li>\n *  <li>Will not detect empty column name,</li>\n *  <li>Duplicated column names will cause incorrect data parsing,</li>\n *  <li>Empty lines are ignored.</li>\n * </ul>\n * @param file\n */\nexport const parseFile = async (file: FileLike): Promise<ParsedFile> => {\n\tconst files = await Promise.all([\n\t\treadFromCsv, readFromJson\n\t].map(async read => {\n\t\ttry {\n\t\t\treturn await read(file);\n\t\t} catch (e) {\n\t\t\t// console.error(e);\n\t\t\treturn null;\n\t\t}\n\t}));\n\tconst parsed = files.find(file => file != null);\n\tif (parsed) {\n\t\treturn parsed;\n\t} else {\n\t\tthrow new Error(`Given file[${file.name}] is not supported yet.`);\n\t}\n};","import { DataColumn, DataColumnType, ObjectDataColumn } from '../../../data/types';\nimport { detectDataType } from '../../../data/utils';\n\nexport const parseObject = (data: any, types: Array<DataColumn>): Array<DataColumn> => {\n\treturn parseData([ data ], types);\n};\nexport const parseArray = (data: Array<any>, types: Array<DataColumn>): Array<DataColumn> => {\n\treturn (data || []).reduce((types, row) => {\n\t\treturn parseObject(row, types);\n\t}, types);\n};\nexport const parseData = (data: Array<any>, types: Array<DataColumn> = []): Array<DataColumn> => {\n\treturn data.reduce((columns: Array<DataColumn>, row) => {\n\t\tconst columnsMap = columns\n\t\t\t.filter(column => column.native)\n\t\t\t.reduce((map, column) => {\n\t\t\t\tmap[column.name] = column;\n\t\t\t\treturn map;\n\t\t\t}, {} as { [key in string]: DataColumn });\n\t\tObject.keys(row || {}).forEach(key => {\n\t\t\tconst column = columnsMap[key] || {\n\t\t\t\tname: key,\n\t\t\t\tnative: true\n\t\t\t} as DataColumn;\n\t\t\tswitch (column.type) {\n\t\t\t\tcase DataColumnType.OBJECT:\n\t\t\t\tcase DataColumnType.ARRAY:\n\t\t\t\tcase DataColumnType.TEXT:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconst type = detectDataType(row[key]);\n\t\t\t\t\tcolumn.type = type;\n\t\t\t\t\tif (!columns.includes(column)) {\n\t\t\t\t\t\tcolumns.push(column);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (column.type) {\n\t\t\t\tcase DataColumnType.OBJECT:\n\t\t\t\t\t(column as ObjectDataColumn).childTypes = parseObject(row[key], (column as ObjectDataColumn).childTypes || []);\n\t\t\t\t\tbreak;\n\t\t\t\tcase DataColumnType.ARRAY:\n\t\t\t\t\t(column as ObjectDataColumn).childTypes = parseArray(row[key], (column as ObjectDataColumn).childTypes || []);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// do nothing\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\treturn columns;\n\t}, types).map(column => {\n\t\tdata.forEach(row => {\n\t\t\tconst value = row[column.name];\n\t\t\tswitch (true) {\n\t\t\t\tcase column.type === DataColumnType.NUMERIC && value != null && typeof value !== 'number':\n\t\t\t\t\tconst parsed = parseFloat(value);\n\t\t\t\t\trow[column.name] = isNaN(parsed) ? null : parsed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase column.type === DataColumnType.BOOLEAN && typeof value !== 'boolean':\n\t\t\t\t\trow[column.name] = [ 'TRUE', 'T', 'YES', 'Y' ].includes((`${value}`).toUpperCase());\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\treturn column;\n\t});\n};\n","import { faBook, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Path, { toDomain } from '../../../common/path';\nimport { toReadableFileSize } from '../../../common/utils';\nimport { DataSet } from '../../../data/types';\nimport { ParsedFile } from '../../../services/file-reader/types';\nimport { getDomainDemoData } from '../../../services/guide/domain';\nimport { parseFile } from '../../../services/guide/file';\nimport Button, { BigButton, ButtonType } from '../../component/button';\nimport { useAlert } from '../../context/alert';\nimport { OperationBar, OperationBarPlaceholder } from '../component/operations-bar';\nimport { useGuideContext } from '../guide-context';\nimport { parseData } from './parse-data';\n\ninterface SelectedFile {\n\tname: string;\n\tsize: string;\n\tfile: File;\n}\n\nconst ExistsFiles = styled.div<{ itemCount: number }>`\n\tmargin: var(--margin) var(--margin) 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-top-left-radius: calc(var(--border-radius) * 2);\n\tborder-top-right-radius: calc(var(--border-radius) * 2);\n\theight: 0;\n\toverflow: hidden;\n\ttransition: all 300ms ease-in-out;\n\t&[data-visible=true] {\n\t\theight: calc(1px + var(--height) * ${({ itemCount }) => itemCount});\n\t\tborder: var(--border);\n\t\tborder-bottom: 0;\n\t\t& ~ div {\n\t\t\tborder-top-left-radius: 0;\n\t\t\tborder-top-right-radius: 0;\n\t\t}\n\t}\n`;\nconst SelectedFiles = styled.div<{ itemCount: number }>`\n\tmargin: 0 var(--margin);\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-top-left-radius: calc(var(--border-radius) * 2);\n\tborder-top-right-radius: calc(var(--border-radius) * 2);\n\theight: 0;\n\toverflow: hidden;\n\ttransition: all 300ms ease-in-out;\n\t&[data-visible=true] {\n\t\theight: calc(1px + var(--height) * ${({ itemCount }) => itemCount});\n\t\tborder: var(--border);\n\t\tborder-bottom: 0;\n\t}\n`;\nconst SelectedFileRow = styled.div`\n\tdisplay: flex;\n\tpadding: 0 var(--margin);\n\theight: var(--height);\n\talign-items: center;\n\ttransition: all 300ms ease-in-out;\n\t&:not(:last-child) {\n\t\tborder-bottom: var(--border);\n\t}\n\t&:hover {\n\t\tbackground-color: var(--hover-color);\n\t}\n\t> div:first-child {\n\t\twhite-space: nowrap;\n\t    text-overflow: ellipsis;\n\t    overflow: hidden;\n\t    direction: rtl;\n\t}\n\t> div:nth-child(2) {\n\t\tflex-grow: 1;\n\t\tfont-size: 0.8em;\n\t\tpadding-left: calc(var(--margin) / 2);\n\t\ttransform-origin: bottom left;\n\t    transform: scale(0.7);\n\t    opacity: 0.7;\n\t}\n\t> div:last-child {\n\t\t> button {\n\t\t\tborder: 0;\n\t\t\tmargin-right: calc(var(--margin) * -0.5);\n\t\t\t&:hover {\n\t\t\t\tcolor: var(--danger-hover-color);\n\t\t\t}\n\t\t}\n\t}\n`;\nconst Files = styled.div<{ itemCount: number }>`\n\tdisplay: flex;\n\tposition: relative;\n\tmargin: 0 var(--margin);\n\tborder: var(--border);\n\tborder-radius: calc(var(--border-radius) * 2);\n\tmin-height: 350px;\n\tcursor: pointer;\n\ttransition: all 300ms ease-in-out;\n\t&[data-has-data=true] {\n\t\tborder-top-left-radius: 0;\n\t\tborder-top-right-radius: 0;\n\t\tmin-height: ${({ itemCount }) => Math.max(100, 350 - itemCount * 32)}px;\n\t\t@media (max-width: ${({ theme }) => theme.maxMobileWidth}px) {\n\t\t\tmin-height: ${({ itemCount }) => Math.max(160, 350 - itemCount * 32)}px;\n\t\t}\n\t\t&:after {\n\t\t\topacity: 0.7;\n\t\t}\n\t\t> div {\n\t\t\topacity: 0;\n\t\t}\n\t}\n\t@media (max-width: ${({ theme }) => theme.maxMobileWidth}px) {\n\t\tgrid-template-columns: 1fr;\n\t}\n\t&:before {\n\t\tcontent: 'Select data files...';\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\ttransform-origin: center;\n\t\tfont-size: 1.2em;\n\t\tfont-weight: var(--font-bold);\n\t\ttext-decoration: underline;\n\t\ttransition: transform 300ms ease-in-out;\n\t}\n\t&:hover:before {\n\t\ttransform: translate(-50%, -50%) scale(1.05);\n\t}\n\t&:after {\n\t\tcontent: 'According to security reason, same file cannot be addressed correctly when it is selected in two or more times, try to avoid this please.';\n\t\ttransform: scale(0.7);\n\t\ttransform-origin: right;\n\t\topacity: 0;\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tpadding-right: var(--margin);\n\t\ttransition: all 300ms ease-in-out;\n\t}\n\t> div {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\tfont-size: 1.2em;\n\t\tfont-weight: var(--font-bold);\n\t\tline-height: 2em;\n\t\tpadding: 0 var(--margin);\n\t\tborder-top: var(--border);\n\t\tcursor: pointer;\n\t\ttransition: all 300ms ease-in-out;\n\t\t&:hover {\n\t\t\tbackground-color: var(--hover-color);\n\t\t\ttext-decoration: underline;\n\t\t}\n\t\t> svg {\n\t\t\tmargin-right: calc(var(--margin) / 2);\n\t\t}\n\t}\n`;\n\nconst ImportData = () => {\n\tconst history = useHistory();\n\tconst alert = useAlert();\n\tconst guide = useGuideContext();\n\n\tconst [ files, setFiles ] = useState<Array<SelectedFile>>([]);\n\n\tconst onFilesSelected = (input: HTMLInputElement) => async () => {\n\t\tconst selectedFiles = input.files || [];\n\t\tconst data = [];\n\t\tfor (let index = 0, count = selectedFiles.length; index < count; index++) {\n\t\t\tdata.push(selectedFiles[index]);\n\t\t}\n\t\tconst existsFileNames = files.map(file => file.name);\n\t\tsetFiles([ ...files, ...data.map(file => {\n\t\t\tlet name = file.name, originalName = name;\n\t\t\tlet index = 1;\n\t\t\twhile (existsFileNames.includes(name)) {\n\t\t\t\tname = originalName.replace(/(.*)\\.(json|csv)$/, `$1_${index}.$2`);\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t\texistsFileNames.push(name);\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tsize: toReadableFileSize(file.size),\n\t\t\t\tfile\n\t\t\t};\n\t\t}) ]);\n\t};\n\tconst onFilesShouldSelect = () => {\n\t\t// to avoid the following scenario\n\t\t// 1. select a file,\n\t\t// 2. remove this file\n\t\t// 3. select exactly the same file\n\t\t// change event will not be invoked if the file element is rendered by react jsx\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.multiple = true;\n\t\tinput.accept = '.json,.csv';\n\t\tinput.onchange = onFilesSelected(input);\n\t\tinput.click();\n\t};\n\tconst onRemoveClicked = (removeFile: SelectedFile) => () => {\n\t\tsetFiles(files.filter(file => file !== removeFile));\n\t};\n\tconst onChangeDomainClicked = () => {\n\t\thistory.push(Path.GUIDE_DOMAIN_SELECT);\n\t};\n\n\tconst syncNewData = (parsedFiles: Array<ParsedFile>) => {\n\t\tconst existsData = (guide.getData() || {});\n\t\tconst allExistsHash = Object.values(existsData).map(data => data.hash);\n\t\tconst allHash = [ ...new Set(parsedFiles.map(file => file.hash)) ]\n\t\t\t.reduce((all, hash) => {\n\t\t\t\tall[hash] = true;\n\t\t\t\treturn all;\n\t\t\t}, {} as { [key in string]: true });\n\t\tguide.setData(parsedFiles\n\t\t\t.sort((f1, f2) => f1.filename.localeCompare(f2.filename))\n\t\t\t// filter content with same hash\n\t\t\t.filter(file => {\n\t\t\t\tif (allExistsHash.includes(file.hash)) {\n\t\t\t\t\t// already in exists data\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (allHash[file.hash]) {\n\t\t\t\t\t// first match\n\t\t\t\t\tdelete allHash[file.hash];\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\t// already matched\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.reduce((data, file) => {\n\t\t\t\tlet name = file.filename.replace(/^(.*)\\.(json|csv)$/, '$1') || 'Noname';\n\t\t\t\tlet index = 1;\n\t\t\t\twhile (data[name]) {\n\t\t\t\t\tname = file.filename.replace(/^(.*)\\.(json|csv)$/, `$1_${index}`);\n\t\t\t\t\tindex += 1;\n\t\t\t\t}\n\t\t\t\tdata[name] = {\n\t\t\t\t\tdata: file.data,\n\t\t\t\t\tcolumns: parseData(file.data),\n\t\t\t\t\thash: file.hash\n\t\t\t\t};\n\t\t\t\treturn data;\n\t\t\t}, existsData));\n\t};\n\n\tconst onNextClicked = async () => {\n\t\tif (files.length === 0) {\n\t\t\tif (Object.keys(guide.getData() || {}).length !== 0) {\n\t\t\t\t// no new file selected\n\t\t\t\thistory.push(toDomain(Path.GUIDE_MAPPING_FACTOR, guide.getDomain().code));\n\t\t\t} else {\n\t\t\t\talert.show('No data file selected.');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedFiles = await Promise.all(files.map(async file => await parseFile(file.file)));\n\t\tsyncNewData(parsedFiles);\n\t\thistory.push(toDomain(Path.GUIDE_MAPPING_FACTOR, guide.getDomain().code));\n\t};\n\n\tconst existsData = guide.getData() || {};\n\tconst existsDataCount = Object.keys(existsData).length;\n\tconst onExistsDataRemoveClicked = (key: string) => () => {\n\t\tguide.setData(Object.keys(existsData).filter(name => name !== key).reduce((all, key) => {\n\t\t\tall[key] = existsData[key];\n\t\t\treturn all;\n\t\t}, {} as DataSet));\n\t};\n\n\tconst onUseSampleClicked = async (evt: React.MouseEvent) => {\n\t\tevt.stopPropagation();\n\t\tconst domain = guide.getDomain();\n\t\tconst demoDef = domain.demo || {};\n\t\tif (Object.keys(demoDef).length === 0) {\n\t\t\talert.show('No sample data found for this domain.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedFiles = await Promise.all(Object.keys(demoDef).map(async key => {\n\t\t\tconst location = demoDef[key];\n\t\t\tconst ext = location.substr(location.lastIndexOf('.') + 1);\n\t\t\treturn await parseFile({\n\t\t\t\tname: `${key}.${ext}`,\n\t\t\t\ttext: async () => await getDomainDemoData(location)\n\t\t\t});\n\t\t}));\n\t\tif (parsedFiles.length !== 0) {\n\t\t\tguide.clearData();\n\t\t\tsyncNewData(parsedFiles);\n\t\t}\n\t};\n\n\tconst hasData = existsDataCount !== 0 || files.length !== 0;\n\n\treturn <Fragment>\n\t\t<ExistsFiles data-visible={existsDataCount !== 0} itemCount={existsDataCount}>\n\t\t\t{Object.keys(existsData)\n\t\t\t\t.sort((k1, k2) => k1.localeCompare(k2))\n\t\t\t\t.map((key, index) => {\n\t\t\t\t\treturn <SelectedFileRow key={`${key}-${index}`}>\n\t\t\t\t\t\t<div>{key}</div>\n\t\t\t\t\t\t<div>{(existsData[key].data || []).length} item(s)</div>\n\t\t\t\t\t\t<div><Button onClick={onExistsDataRemoveClicked(key)}><FontAwesomeIcon icon={faTimes}/></Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</SelectedFileRow>;\n\t\t\t\t})}\n\t\t</ExistsFiles>\n\t\t<SelectedFiles data-visible={files.length !== 0} itemCount={files.length}>\n\t\t\t{files.map((file, index) => {\n\t\t\t\treturn <SelectedFileRow key={`${file.name}-${index}`}>\n\t\t\t\t\t<div>{file.name}</div>\n\t\t\t\t\t<div>{file.size}</div>\n\t\t\t\t\t<div><Button onClick={onRemoveClicked(file)}><FontAwesomeIcon icon={faTimes}/></Button></div>\n\t\t\t\t</SelectedFileRow>;\n\t\t\t})}\n\t\t</SelectedFiles>\n\t\t<Files data-has-data={hasData}\n\t\t       itemCount={existsDataCount + files.length}\n\t\t       onClick={onFilesShouldSelect}>\n\t\t\t<div onClick={onUseSampleClicked}>\n\t\t\t\t<FontAwesomeIcon icon={faBook}/>\n\t\t\t\t<span>Or learning from samples.</span>\n\t\t\t</div>\n\t\t</Files>\n\t\t<OperationBar>\n\t\t\t<BigButton onClick={onChangeDomainClicked}>Change Domain</BigButton>\n\t\t\t<OperationBarPlaceholder/>\n\t\t\t<BigButton inkType={ButtonType.PRIMARY} onClick={onNextClicked}>Next</BigButton>\n\t\t</OperationBar>\n\t</Fragment>;\n};\n\nexport default ImportData;","import styled from 'styled-components';\nimport Dropdown from '../../component/dropdown';\n\nexport const DropdownInGrid = styled(Dropdown)`\n\theight: 27px;\n\tmargin-left: calc(var(--input-indent) * -1);\n\tborder-color: transparent;\n\ttransition: all 300ms ease-in-out;\n\tfont-size: 0.8em;\n\twidth: calc(100% + var(--input-indent));\n\t> div:last-child > span {\n\t\theight: 27px;\n\t}\n\t&:hover {\n\t\tborder-color: var(--primary-color);\n\t\t> svg {\n\t\t\tcolor: var(--primary-color);\n\t\t}\n\t}\n\t&:focus {\n\t\tborder-color: var(--border-color);\n\t\t> div:last-child {\n\t\t\tborder-color: var(--border-color);\n\t\t}\n\t\t> svg {\n\t\t\tcolor: var(--border-color);\n\t\t}\n\t}\n`;\n","import styled from 'styled-components';\nimport Input from '../../component/input';\n\nexport const InputInGrid = styled(Input)`\n\theight: 27px;\n\tmargin-left: calc(var(--input-indent) * -1);\n\tborder-color: transparent;\n\ttransition: all 300ms ease-in-out;\n\tfont-size: 0.8em;\n\twidth: calc(100% + var(--input-indent));\n\t&:hover {\n\t\tborder-color: var(--primary-color);\n\t}\n\t&:focus {\n\t\tborder-color: var(--border-color);\n\t}\n`;\n","import styled from 'styled-components';\n\nexport const ObjectDetail = styled.div`\n\twidth: 70%;\n\tdisplay: flex;\n\tflex-direction: column;\n\topacity: 0;\n\ttransition: all 300ms ease-in-out;\n\t&[data-visible=true] {\n\t\topacity: 1;\n\t}\n`;\nexport const ObjectDetailHeader = styled.div`\n\tdisplay: grid;\n\tborder-bottom: var(--border);\n\talign-items: center;\n`;\n\nexport const ObjectDetailHeaderCell = styled.div`\n\theight: 31px;\n\tpadding: 0 calc(var(--margin) / 2);\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const ObjectDetailBodyRow = styled.div`\n\tdisplay: grid;\n\tborder-bottom: var(--border);\n\tfont-size: 0.8em;\n\t&:nth-child(n + 10):last-child {\n\t\tborder-bottom-color: transparent;\n\t}\n\t&:hover {\n\t\tbackground-color: var(--hover-color);\n\t\t> div {\n\t\t\t> input:hover:focus,\n\t\t\t> div[data-widget=dropdown]:hover:focus {\n\t\t\t\tborder-color: var(--primary-color);\n\t\t\t\t> div:last-child {\n\t\t\t\t\tborder-color: var(--primary-color);\n\t\t\t\t}\n\t\t\t\t> svg {\n\t\t\t\t\tcolor: var(--primary-color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ObjectDetailBodyCell = styled.div`\n\theight: 31px;\n\tpadding: 0 calc(var(--margin) / 2);\n\tdisplay: flex;\n\talign-items: center;\n\toverflow-x: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`;\n\n\n\n","import { DataColumn } from '../../data/types';\n\nexport const asDisplayName = (column: DataColumn): string => {\n\tconst name = column.name || '';\n\tif (name.indexOf('.') !== -1) {\n\t\treturn name.split('.').reverse()[0];\n\t} else {\n\t\treturn name || 'Noname';\n\t}\n};\nexport const asDisplayType = (column: DataColumn): string => {\n\treturn column.type;\n};\n\nexport const gatherAsColumnMap = (columns: Array<DataColumn>, column: DataColumn, key: 'name' | 'label'): { [key in string]: DataColumn } => {\n\treturn columns.filter(existsColumn => existsColumn !== column)\n\t\t.reduce((map, column) => {\n\t\t\tmap[column[key]] = column;\n\t\t\treturn map;\n\t\t}, {} as { [key in string]: DataColumn });\n};\nexport const generateUniqueKey = (\n\toriginKey: string,\n\texists: { [key in string]: DataColumn },\n\tregexp: RegExp,\n\treplacement: (index: number) => string\n): string => {\n\tlet key = originKey;\n\tlet index = 1;\n\twhile (exists[key]) {\n\t\tkey = (originKey).replace(regexp, replacement(index));\n\t\tindex += 1;\n\t}\n\treturn key;\n};\nexport const generateUniqueName = (columns: Array<DataColumn>, column: DataColumn, originName: string): string => {\n\treturn generateUniqueKey(originName, gatherAsColumnMap(columns, column, 'name'), /^(.*)(_{\\d}+)*$/, (index) => `$1_${index}`);\n};\nexport const generateUniqueLabel = (columns: Array<DataColumn>, column: DataColumn, originLabel: string): string => {\n\treturn generateUniqueKey(originLabel, gatherAsColumnMap(columns, column, 'label'), /^(.*)(\\s{\\d}+)*$/, (index) => `$1 ${index}`);\n};\n","import React, { Fragment, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Path, { toDomain } from '../../../common/path';\nimport { DataColumn, DataColumnType, DataSet, ObjectDataColumn } from '../../../data/types';\nimport { BigButton, ButtonType } from '../../component/button';\nimport { DropdownOption } from '../../component/dropdown';\nimport { useAlert } from '../../context/alert';\nimport { DropdownInGrid } from '../component/dropdown-in-grid';\nimport { InputInGrid } from '../component/input-in-grid';\nimport {\n\tObjectDetail,\n\tObjectDetailBodyCell,\n\tObjectDetailBodyRow,\n\tObjectDetailHeader,\n\tObjectDetailHeaderCell\n} from '../component/object-detail';\nimport { NoObjects, ObjectItem, ObjectsContainer, ObjectsList } from '../component/object-list';\nimport { OperationBar, OperationBarPlaceholder } from '../component/operations-bar';\nimport { useGuideContext } from '../guide-context';\nimport { asDisplayName } from '../utils';\n\nconst DetailHeader = styled(ObjectDetailHeader)`\n\tgrid-template-columns: 40% 35% 25%;\n`;\nconst DetailBodyRow = styled(ObjectDetailBodyRow)`\n\tgrid-template-columns: 40% 35% 25%;\n`;\nconst DetailBodyCell = styled(ObjectDetailBodyCell)<{ indent?: number }>`\n\ttext-indent: calc(0.8em * ${({ indent }) => indent || 0});\n\t&:last-child {\n\t\ttext-transform: capitalize;\n\t}\n`;\n\nconst typeOptions = Object.keys(DataColumnType).filter(k =>\n\t// @ts-ignore\n\ttypeof DataColumnType[k] === 'number' || DataColumnType[k] === k || DataColumnType[DataColumnType[k]]?.toString() !== k\n).map(key => {\n\treturn {\n\t\t// @ts-ignore\n\t\tvalue: DataColumnType[key],\n\t\t// @ts-ignore\n\t\tlabel: DataColumnType[key] as string\n\t};\n});\n\nconst MappingFactor = () => {\n\tconst history = useHistory();\n\tconst alert = useAlert();\n\tconst guide = useGuideContext();\n\n\tconst data = (guide.getData() || {}) as DataSet;\n\tconst objectKeys = Object.keys(data).sort((k1, k2) => k1.localeCompare(k2));\n\n\tconst [ activeKey, setActiveKey ] = useState<string | null>(objectKeys.length !== 0 ? objectKeys[0] : null);\n\n\tconst onNoObjectsClicked = () => history.push(toDomain(Path.GUIDE_IMPORT_DATA, guide.getDomain().code));\n\tconst onImportDataClicked = () => history.push(toDomain(Path.GUIDE_IMPORT_DATA, guide.getDomain().code));\n\tconst onNextClicked = () => {\n\t\tif (objectKeys.length !== 0) {\n\t\t\thistory.push(toDomain(Path.GUIDE_MEASURE_INDICATOR, guide.getDomain().code));\n\t\t} else {\n\t\t\talert.show('No factor described.');\n\t\t}\n\t};\n\n\tconst onObjectSelected = (key: string) => () => setActiveKey(key);\n\tconst activeObject = activeKey ? data[activeKey!] : null;\n\tconst onColumnLabelChange = (column: DataColumn) => (evt: React.ChangeEvent<HTMLInputElement>) => {\n\t\tcolumn.label = evt.target.value;\n\t\tguide.setData(guide.getData()!);\n\t};\n\tconst onTypeChanged = (column: DataColumn) => async (option: DropdownOption) => {\n\t\tcolumn.type = option.value as DataColumnType;\n\t\tguide.setData(guide.getData()!);\n\t};\n\tconst renderColumns = (columns: Array<DataColumn> = [], indent: number = 0) => {\n\t\treturn columns.map(column => {\n\t\t\tconst name = asDisplayName(column);\n\t\t\tconst label = column.label;\n\t\t\tconst childTypes = (column as ObjectDataColumn).childTypes || [];\n\t\t\treturn <Fragment key={column.name}>\n\t\t\t\t<DetailBodyRow>\n\t\t\t\t\t<DetailBodyCell indent={indent}>{name}</DetailBodyCell>\n\t\t\t\t\t<DetailBodyCell>\n\t\t\t\t\t\t<InputInGrid type='text' value={label} placeholder={name}\n\t\t\t\t\t\t             onChange={onColumnLabelChange(column)}/>\n\t\t\t\t\t</DetailBodyCell>\n\t\t\t\t\t<DetailBodyCell>\n\t\t\t\t\t\t<DropdownInGrid options={typeOptions} onChange={onTypeChanged(column)} value={column.type}/>\n\t\t\t\t\t</DetailBodyCell>\n\t\t\t\t</DetailBodyRow>\n\t\t\t\t{childTypes.length !== 0 ? renderColumns(childTypes, indent + 1) : null}\n\t\t\t</Fragment>;\n\t\t});\n\t};\n\n\treturn <Fragment>\n\t\t<ObjectsContainer>\n\t\t\t<ObjectsList data-has-data={objectKeys.length !== 0} data-has-active={activeKey != null}>\n\t\t\t\t{objectKeys.map(key => {\n\t\t\t\t\treturn <ObjectItem key={key} onClick={onObjectSelected(key)} data-active={key === activeKey}>\n\t\t\t\t\t\t{key}\n\t\t\t\t\t</ObjectItem>;\n\t\t\t\t})}\n\t\t\t\t<NoObjects onClick={onNoObjectsClicked}>\n\t\t\t\t\tNo valid data imported, back and <span>Import Data</span> again.\n\t\t\t\t</NoObjects>\n\t\t\t</ObjectsList>\n\t\t\t<ObjectDetail data-visible={activeKey != null}>\n\t\t\t\t<DetailHeader>\n\t\t\t\t\t<ObjectDetailHeaderCell>Name</ObjectDetailHeaderCell>\n\t\t\t\t\t<ObjectDetailHeaderCell>Label</ObjectDetailHeaderCell>\n\t\t\t\t\t<ObjectDetailHeaderCell>Type</ObjectDetailHeaderCell>\n\t\t\t\t</DetailHeader>\n\t\t\t\t{renderColumns(activeObject?.columns.filter(column => column.native))}\n\t\t\t</ObjectDetail>\n\t\t</ObjectsContainer>\n\t\t<OperationBar>\n\t\t\t<BigButton onClick={onImportDataClicked}>Reimport Data</BigButton>\n\t\t\t<OperationBarPlaceholder/>\n\t\t\t<BigButton inkType={ButtonType.PRIMARY} onClick={onNextClicked}>Next</BigButton>\n\t\t</OperationBar>\n\t</Fragment>;\n};\n\nexport default MappingFactor;","import { ChartElement } from '../../charts/types';\nimport { DataSet } from '../../data/types';\n\nexport interface DomainExpression {\n\tcode: string;\n\tname: string;\n\tlabel: string;\n\tbody: string;\n}\n\nexport const CustomDomainExpression: DomainExpression = {\n\tcode: 'custom',\n\tname: 'customIndicator',\n\tlabel: 'Custom Indicator',\n\tbody: ''\n};\n\nexport interface DomainChartGroupBy {\n\tkey: string;\n\tlabel: string;\n\toptions: Array<{ label: string, value: string, default?: true }>\n}\n\nexport interface DomainChartOptions {\n\tgroupBy?: Array<DomainChartGroupBy>\n}\n\nexport interface DomainChart {\n\tkey: string;\n\tname: string;\n\tchart: ChartElement;\n\tenabled?: (data?: DataSet) => { enabled: boolean, reason?: string };\n\toptions?: DomainChartOptions\n}\n\nexport interface Domain {\n\tcode: string;\n\tlabel: string;\n\texpressions?: Array<DomainExpression>;\n\tdemo?: { [key in string]: string },\n\tcharts?: Array<DomainChart>\n}\n","import { faCheck, faEquals, faExclamation, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { CalculatedDataColumn, DataColumn, DataTopic } from '../../../data/types';\nimport { calculateColumn, isExpressionIncorrect } from '../../../services/factor-calculator';\nimport { DomainExpression } from '../../../services/guide/types';\nimport Button from '../../component/button';\nimport { DropdownOption } from '../../component/dropdown';\nimport { DropdownInGrid } from '../component/dropdown-in-grid';\nimport { InputInGrid } from '../component/input-in-grid';\nimport { ObjectDetailBodyCell, ObjectDetailBodyRow } from '../component/object-detail';\nimport { useGuideContext } from '../guide-context';\nimport { asDisplayName, generateUniqueLabel, generateUniqueName } from '../utils';\n\n// EXPLAIN use variable to avoid webstorm inspection errors, @supports is not supported yet\nconst DetailBodyRow = styled(ObjectDetailBodyRow)`\n\tgrid-template-columns: 30% calc(35% - 32px) calc(35% - 32px) 32px 32px;\n\t${'@supports selector(:focus-within)'} {\n\t\t&:not(:focus-within) {\n\t\t\t> div:last-child:not(:first-child) {\n\t\t\t\theight: 0;\n\t\t\t\tborder-top: 0;\n\t\t\t}\n\t\t}\n\t}\n\t> div:nth-child(4) {\n\t\t> svg {\n\t\t\ttransition: all 300ms linear;\n\t\t}\n\t\t> svg:first-child {\n\t\t\tcolor: var(--danger-color);\n\t\t\twidth: 0;\n\t\t}\n\t\t> svg:last-child {\n\t\t\tcolor: var(--success-color);\n\t\t\twidth: 1em;\n\t\t}\n\t}\n\t&[data-incorrect=true] {\n\t\t> div:nth-child(4) {\n\t\t\t> svg:first-child {\n\t\t\t\twidth: 1em;\n\t\t\t}\n\t\t\t> svg:last-child {\n\t\t\t\twidth: 0;\n\t\t\t}\n\t\t}\n\t}\n`;\nconst DetailBodyOperationCell = styled(ObjectDetailBodyCell)`\n\tjustify-content: center;\n\tpadding: 0;\n\t> button {\n\t\tborder: 0;\n\t\tborder-radius: 100%;\n\t\twidth: 27px;\n\t\theight: 27px;\n\t\tpadding: 0;\n\t\t&:hover {\n\t\t\tbackground-color: var(--primary-hover-color);\n\t\t\tcolor: var(--invert-color);\n\t\t}\n\t}\n`;\nconst DetailBodySettingCell = styled(ObjectDetailBodyCell)`\n\theight: var(--height);\n\tborder-top: var(--border);\n\tborder-top-color: transparent;\n\tgrid-column: span 4;\n\tposition: relative;\n\toverflow: hidden;\n\ttransition: all 300ms ease-in-out;\n\t> svg {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 16px;\n\t\ttransform: translateY(-50%);\n\t\topacity: 0.5;\n\t\tfont-size: 0.7em;\n\t}\n\t> input {\n\t\tmargin-right: calc(var(--input-indent) * -1);\n\t\twidth: calc(100% + var(--input-indent) * 2);\n\t\tpadding-left: 22px;\n\t}\n`;\n\nexport const CalcColumn = (props: { column: DataColumn, topic: DataTopic, typeOptions: Array<DropdownOption> }) => {\n\tconst { column, topic, typeOptions } = props;\n\n\tconst guide = useGuideContext();\n\n\tconst [ nameAutoGenerated, setNameAutoGenerated ] = useState(false);\n\tconst [ calcHandle, setCalcHandle ] = useState<number | null>(null);\n\n\tif (column.native) {\n\t\treturn null;\n\t}\n\n\tconst calcColumn = column as CalculatedDataColumn;\n\tconst name = asDisplayName(column);\n\tconst label = column.label;\n\tconst created = topic.columns.includes(column);\n\tconst incorrect = isExpressionIncorrect(topic, calcColumn);\n\n\tconst calc = () => {\n\t\tif (calcHandle) {\n\t\t\tclearTimeout(calcHandle);\n\t\t}\n\t\tsetCalcHandle(setTimeout(() => calculateColumn(topic, calcColumn), 1000));\n\t};\n\t// expression result values on data should be changed:\n\t// 1. column name changed\n\t// 2. expression changed\n\tconst onColumnNameChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { name: oldName } = column;\n\t\tcolumn.name = evt.target.value;\n\t\tif ((column.name || '').trim().length === 0) {\n\t\t\t// name cleared\n\t\t\tcolumn.name = generateUniqueName(topic.columns, column, asDisplayName(column));\n\t\t\tsetNameAutoGenerated(true);\n\t\t} else {\n\t\t\tsetNameAutoGenerated(false);\n\t\t}\n\t\t(topic.data || []).forEach(row => {\n\t\t\trow[column.name] = row[oldName];\n\t\t\tdelete row[oldName];\n\t\t});\n\t\tguide.setData(guide.getData()!);\n\t};\n\tconst onColumnLabelChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n\t\tcolumn.label = evt.target.value;\n\t\tguide.setData(guide.getData()!);\n\t};\n\tconst onCalcTypeChanged = (columns: Array<DataColumn>, column: CalculatedDataColumn) => async (option: DropdownOption) => {\n\t\tconst expression = option as unknown as DomainExpression;\n\t\tcolumn.expressionCode = option.value as string;\n\t\tcolumn.name = generateUniqueName(columns, column, column.name || expression.name);\n\t\tcolumn.label = generateUniqueLabel(columns, column, column.label || expression.label);\n\t\tcolumn.expression = expression.body;\n\t\tif (!columns.includes(column)) {\n\t\t\tcolumns.push(column);\n\t\t}\n\t\tcalc();\n\t\tguide.setData(guide.getData()!);\n\t};\n\tconst onColumnExpressionChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n\t\tcalcColumn.expression = evt.target.value;\n\t\tcalc();\n\t\t// console.log((topic.data || []).map(row => row[column.name]));\n\t\tguide.setData(guide.getData()!);\n\t};\n\tconst onColumnDeleteClicked = () => {\n\t\ttopic.columns = topic.columns.filter(exists => exists !== column);\n\t\t// delete data\n\t\t(topic.data || []).forEach(row => delete row[column.name]);\n\t\tguide.setData(guide.getData()!);\n\t};\n\n\treturn <DetailBodyRow data-incorrect={incorrect}>\n\t\t<ObjectDetailBodyCell>\n\t\t\t<DropdownInGrid options={typeOptions} value={calcColumn.expressionCode}\n\t\t\t                please={'New Indicator...'}\n\t\t\t                onChange={onCalcTypeChanged(topic.columns, calcColumn)}/>\n\t\t</ObjectDetailBodyCell>\n\t\t{created\n\t\t\t? <ObjectDetailBodyCell>\n\t\t\t\t<InputInGrid type='text' placeholder={name} value={nameAutoGenerated ? '' : name}\n\t\t\t\t             onChange={onColumnNameChange}/>\n\t\t\t</ObjectDetailBodyCell>\n\t\t\t: null\n\t\t}\n\t\t{created\n\t\t\t? <ObjectDetailBodyCell>\n\t\t\t\t<InputInGrid type='text' placeholder={label || name || ''} value={label ? label : ''}\n\t\t\t\t             onChange={onColumnLabelChange}/>\n\t\t\t</ObjectDetailBodyCell>\n\t\t\t: null\n\t\t}\n\t\t{created\n\t\t\t? <ObjectDetailBodyCell>\n\t\t\t\t<FontAwesomeIcon icon={faExclamation} title={'Something incorrect.'}/>\n\t\t\t\t<FontAwesomeIcon icon={faCheck}/>\n\t\t\t</ObjectDetailBodyCell>\n\t\t\t: null\n\t\t}\n\t\t{created\n\t\t\t? <DetailBodyOperationCell>\n\t\t\t\t<Button title={'Delete'} onClick={onColumnDeleteClicked}>\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes}/>\n\t\t\t\t</Button>\n\t\t\t</DetailBodyOperationCell>\n\t\t\t: null\n\t\t}\n\t\t{created\n\t\t\t? <DetailBodySettingCell>\n\t\t\t\t<FontAwesomeIcon icon={faEquals}/>\n\t\t\t\t<InputInGrid type='text' placeholder={'Expression...'}\n\t\t\t\t             value={calcColumn.expression}\n\t\t\t\t             onChange={onColumnExpressionChange}/>\n\t\t\t</DetailBodySettingCell>\n\t\t\t: null\n\t\t}\n\t</DetailBodyRow>;\n};\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { DataColumn, ObjectDataColumn } from '../../../data/types';\nimport { ObjectItem } from '../component/object-list';\nimport { asDisplayName, asDisplayType } from '../utils';\n\nconst ObjectColumn = styled(ObjectItem)<{ indent?: number }>`\n\tcursor: default;\n\ttext-indent: calc(0.8em * ${({ indent }) => (indent || 0) + 1});\n\tfont-size: 0.8em;\n\t&:hover {\n\t\tbackground-color: var(--hover-color);\n\t}\n\t&[data-visible=false] {\n\t\theight: 0;\n\t\tborder-bottom: 0;\n\t}\n\t> span:last-child {\n\t\ttransform: scale(0.8);\n\t\ttransform-origin: bottom;\n\t\ttext-transform: capitalize;\n\t}\n`;\n\nexport const NativeColumn = (props: { column: DataColumn, visible: boolean, indent?: number }) => {\n\tconst { column, visible, indent = 0 } = props;\n\n\tif (!column.native) {\n\t\treturn null;\n\t}\n\n\tconst name = asDisplayName(column);\n\tconst label = column.label;\n\tconst type = asDisplayType(column);\n\treturn <Fragment key={column.name}>\n\t\t<ObjectColumn indent={indent} data-visible={visible}>\n\t\t\t<span>{label || name}</span>\n\t\t\t<span>{type ? `(${type})` : null}</span>\n\t\t</ObjectColumn>\n\t\t{((column as ObjectDataColumn).childTypes || []).map(childColumn => {\n\t\t\treturn <NativeColumn column={childColumn} visible={visible} indent={indent + 1} key={childColumn.name}/>;\n\t\t})}\n\t</Fragment>;\n};\n","import { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Path, { toDomain } from '../../../common/path';\nimport { DataColumn, DataSet, DataTopic } from '../../../data/types';\nimport { CustomDomainExpression } from '../../../services/guide/types';\nimport { BigButton, ButtonType } from '../../component/button';\nimport { useAlert } from '../../context/alert';\nimport { ObjectDetail, ObjectDetailHeader, ObjectDetailHeaderCell } from '../component/object-detail';\nimport { NoObjects, ObjectItem, ObjectsContainer, ObjectsList } from '../component/object-list';\nimport { OperationBar, OperationBarPlaceholder } from '../component/operations-bar';\nimport { useGuideContext } from '../guide-context';\nimport { CalcColumn } from './calc-column';\nimport { NativeColumn } from './native-column';\n\nconst MeasureObjectItem = styled(ObjectItem)`\n\t&[data-active=false] + div {\n\t\theight: 0;\n\t}\n\t&[data-active=true] {\n\t\t> svg {\n\t\t\ttransform: rotateX(180deg);\n\t\t}\n\t}\n\t> span {\n\t\tflex-grow: 1;\n\t}\n\t> svg {\n\t\ttransition: all 300ms ease-in-out;\n\t}\n`;\nconst DetailHeader = styled(ObjectDetailHeader)`\n\tgrid-template-columns: 30% calc(35% - 32px) calc(35% - 32px) 32px 32px;\n`;\n\nconst MeasureIndicator = () => {\n\tconst history = useHistory();\n\tconst alert = useAlert();\n\tconst guide = useGuideContext();\n\n\tconst data = (guide.getData() || {}) as DataSet;\n\tconst objectKeys = Object.keys(data).sort((k1, k2) => k1.localeCompare(k2));\n\n\tconst [ activeKey, setActiveKey ] = useState<string | null>(objectKeys.length !== 0 ? objectKeys[0] : null);\n\n\tconst onNoObjectsClicked = () => history.push(toDomain(Path.GUIDE_IMPORT_DATA, guide.getDomain().code));\n\tconst onMappingFactorsClicked = () => history.push(toDomain(Path.GUIDE_MAPPING_FACTOR, guide.getDomain().code));\n\tconst onNextClicked = () => {\n\t\tif (objectKeys.length !== 0) {\n\t\t\thistory.push(toDomain(Path.GUIDE_BUILD_METRICS, guide.getDomain().code));\n\t\t} else {\n\t\t\talert.show('No factor described.');\n\t\t}\n\t};\n\n\tconst onObjectClicked = (key: string) => () => {\n\t\tif (key === activeKey) {\n\t\t\tsetActiveKey(null);\n\t\t} else {\n\t\t\tsetActiveKey(key);\n\t\t}\n\t};\n\n\tconst renderCalcColumns = (topic: DataTopic) => {\n\t\tconst calcColumnTypeOptions = [ ...(guide.getDomain().expressions || []), CustomDomainExpression ].map(option => {\n\t\t\treturn {\n\t\t\t\t...option,\n\t\t\t\tvalue: option.code\n\t\t\t};\n\t\t});\n\t\tconst existsColumns = (topic.columns || [])\n\t\t\t.map((column, index) => {\n\t\t\t\treturn <CalcColumn column={column} topic={topic}\n\t\t\t\t                   typeOptions={calcColumnTypeOptions}\n\t\t\t\t                   key={index}/>;\n\t\t\t});\n\n\t\tconst newColumn = { native: false } as DataColumn;\n\t\treturn <Fragment>\n\t\t\t{existsColumns}\n\t\t\t<CalcColumn column={newColumn} topic={topic} typeOptions={calcColumnTypeOptions}/>\n\t\t</Fragment>;\n\t};\n\n\treturn <Fragment>\n\t\t<ObjectsContainer>\n\t\t\t<ObjectsList data-has-data={objectKeys.length !== 0} data-has-active={activeKey != null}>\n\t\t\t\t{objectKeys.map(key => {\n\t\t\t\t\tconst columnsVisible = key === activeKey;\n\t\t\t\t\treturn <Fragment key={key}>\n\t\t\t\t\t\t<MeasureObjectItem onClick={onObjectClicked(key)} data-active={key === activeKey}>\n\t\t\t\t\t\t\t<span>{key}</span>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faAngleUp}/>\n\t\t\t\t\t\t</MeasureObjectItem>\n\t\t\t\t\t\t{(data[key].columns || []).map(column => {\n\t\t\t\t\t\t\treturn <NativeColumn column={column} visible={columnsVisible} key={column.name}/>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Fragment>;\n\t\t\t\t})}\n\t\t\t\t<NoObjects onClick={onNoObjectsClicked}>\n\t\t\t\t\tNo valid data imported, back and <span>Import Data</span> again.\n\t\t\t\t</NoObjects>\n\t\t\t</ObjectsList>\n\t\t\t<ObjectDetail data-visible={activeKey != null}>\n\t\t\t\t<DetailHeader>\n\t\t\t\t\t<ObjectDetailHeaderCell>Calc.</ObjectDetailHeaderCell>\n\t\t\t\t\t<ObjectDetailHeaderCell>Name</ObjectDetailHeaderCell>\n\t\t\t\t\t<ObjectDetailHeaderCell>Label</ObjectDetailHeaderCell>\n\t\t\t\t</DetailHeader>\n\t\t\t\t{activeKey ? renderCalcColumns(data[activeKey]) : null}\n\t\t\t</ObjectDetail>\n\t\t</ObjectsContainer>\n\t\t<OperationBar>\n\t\t\t<BigButton onClick={onMappingFactorsClicked}>Check Factors</BigButton>\n\t\t\t<OperationBarPlaceholder/>\n\t\t\t<BigButton inkType={ButtonType.PRIMARY} onClick={onNextClicked}>Next</BigButton>\n\t\t</OperationBar>\n\t</Fragment>;\n};\n\nexport default MeasureIndicator;","import { faFlagCheckered, faTruckPickup } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link, matchPath, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Path from '../../common/path';\nimport { useGuideContext } from './guide-context';\n\nexport enum Step {\n\tDOMAIN_SELECT,\n\tIMPORT_DATA,\n\tMAPPING_FACTORS,\n\tMEASURE_INDICATORS,\n\tBUILD_METRICS\n}\n\nconst StepLabels = [ 'Domain Select', 'Import Data', 'Mapping Factors', 'Measure Indicators', 'Build & Export Metrics' ];\n\nconst StepsContainer = styled.div.attrs({\n\t'data-widget': 'guide-steps'\n})`\n\tposition: relative;\n\tpadding: 0 var(--margin);\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding-bottom: 1em;\n`;\nconst CurrentStep = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t> span:first-child {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t\topacity: 0.5;\n\t\twhite-space: nowrap;\n\t\t> span > a {\n\t\t\ttext-decoration: none;\n\t\t\tcolor: var(--font-color);\n\t\t\t&:hover {\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t}\n\t\t> span:not(:first-child) {\n\t\t\t&:before {\n\t\t\t\tcontent: '/';\n    \t\t\tpadding: 0.5em;\n\t\t\t}\n\t\t}\n\t\t> span:last-child {\n\t\t\tuser-select: none;\n\t\t\ttext-overflow: ellipsis;\n    \t\toverflow: hidden;\n\t\t}\n\t}\n\t> span:last-child {\n\t\tfont-size: 1.7em;\n\t\tline-height: 1.7em;\n\t\tfont-weight: var(--font-boldest);\n\t\tuser-select: none;\n\t}\n`;\nconst StepDots = styled.ul`\n\tlist-style-type: none;\n\tmargin-block-start: 0;\n\tmargin-block-end: 0;\n\tpadding-inline-start: 0;\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n`;\nconst StepDot = styled.li`\n\theight: 8px;\n\twidth: 8px;\n\tborder-radius: 100%;\n\tbackground-color: var(--border-color);\n\tcolor: var(--border-color);\n\tborder: var(--border);\n\tfont-size: 12px;\n\ttransition: all 300ms 100ms ease-in-out;\n\t&:not(:first-child) {\n\t\tposition: relative;\n\t\tmargin-left: calc(var(--margin) * 2);\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\tleft: calc(var(--margin) * -2 - 1px);\n\t\t\ttop: 50%;\n\t\t\ttransform: translateY(-50%);\n\t\t\twidth: calc(var(--margin) * 2);\n\t\t\theight: 1px;\n\t\t\tbackground-color: var(--border-color);\n\t\t\tz-index: -1;\n\t\t\ttransition: background-color 300ms ease-in-out;\n\t\t}\n\t}\n\t&[data-performed=true] {\n\t\tbackground-color: var(--font-color);\n\t\tborder-color: var(--font-color);\n\t}\n\t&[data-current=true],\n\t&[data-performed=true] {\n\t\t&:before {\n\t\t\tbackground-color: var(--font-color);\n\t\t}\n\t}\n\t&:nth-last-child(2),\n\t&[data-current=true] {\n\t\tborder-color: transparent;\n\t\tbackground-color: transparent;\n\t}\n\t&[data-current=true] {\n\t\t&:nth-last-child(2) {\n\t\t\t> svg {\n\t\t\t\topacity: 1;\n\t\t\t\tcolor: var(--font-color);\n\t\t\t}\n\t\t}\n\t\t> svg {\n\t\t\topacity: 0;\n\t\t}\n\t\t+ div {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\t> svg {\n\t\tcolor: var(--border-color);\n\t\topacity: 1;\n\t\ttransform: translateY(-4px);\n\t\ttransition: all 300ms ease-in-out;\n\t}\n`;\nconst Current = styled.div<{ step: number }>`\n\tposition: absolute;\n\tleft: calc((8px + var(--margin) * 2) * ${({ step }) => step} - 1px);\n\ttransition: left 300ms ease-in-out;\n`;\n\nconst Steps = (props: { step: Step }) => {\n\tconst { step } = props;\n\tconst location = useLocation();\n\tconst showDomain = !matchPath(location.pathname, Path.GUIDE_DOMAIN_SELECT);\n\tconst guide = useGuideContext();\n\n\tconst domain = guide.getDomain();\n\n\treturn <StepsContainer>\n\t\t<CurrentStep>\n\t\t\t<span>\n\t\t\t\t<span><Link to={Path.HOME}>Home</Link></span>\n\t\t\t\t<span>\n\t\t\t\t\t{showDomain ? <Link to={Path.GUIDE_DOMAIN_SELECT}>Step by Step Guide</Link> : 'Step by Step Guide'}\n\t\t\t\t</span>\n\t\t\t\t{showDomain ? <span>{domain.label}</span> : null}\n\t\t\t</span>\n\t\t\t<span>{StepLabels[step]}</span>\n\t\t</CurrentStep>\n\t\t<StepDots>\n\t\t\t{StepLabels.map((label, index) => {\n\t\t\t\treturn <StepDot key={label} title={label} data-current={index === step} data-performed={index < step}>\n\t\t\t\t\t{index === Step.BUILD_METRICS ? <FontAwesomeIcon icon={faFlagCheckered}/> : null}\n\t\t\t\t</StepDot>;\n\t\t\t})}\n\t\t\t<Current step={step}><FontAwesomeIcon icon={faTruckPickup}/></Current>\n\t\t</StepDots>\n\t</StepsContainer>;\n};\n\nexport default Steps;","import React, { Fragment } from 'react';\nimport { matchPath, Redirect, Route, Switch, useLocation, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport BuildMetricsImage from '../../assets/build-metrics.png';\nimport DomainSelectImage from '../../assets/domain-select.png';\nimport ExportReportImage from '../../assets/export-report.png';\nimport ImportDataImage from '../../assets/import-data.png';\nimport MappingFactorImage from '../../assets/mapping-factor.png';\nimport MeasureIndicatorImage from '../../assets/measure-indicator.png';\nimport Path from '../../common/path';\nimport Page from '../component/page';\nimport BuildMetrics from './build-metrics';\nimport DomainSelect from './domain-select';\nimport { GuideContextProvider, useGuideContext } from './guide-context';\nimport ImportData from './import-data';\nimport MappingFactor from './mapping-factor';\nimport MeasureIndicator from './measure-indicator';\nimport Steps, { Step } from './steps';\n\nconst BackgroundImages = [ DomainSelectImage, ImportDataImage, MappingFactorImage, MeasureIndicatorImage, BuildMetricsImage, ExportReportImage ];\nconst HomePage = styled(Page)<{ step: Step }>`\n\t> main {\n\t\twidth: ${({ step }) => step === Step.BUILD_METRICS ? 'calc(100% - var(--margin) * 2)' : '1000px'};\n\t\toverflow: hidden;\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\tleft: calc(var(--margin) * 3);\n\t\t\tbottom: calc(var(--margin) * 3);\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tz-index: -1;\n\t\t\tpointer-events: none;\n\t\t\tuser-select: none;\n\t\t\tfilter: brightness(1.5) opacity(0.1);\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position: left bottom;\n\t\t\tbackground-size: 200px;\n\t\t\tbackground-image: url(${({ step }) => BackgroundImages[step]});\n\t\t}\n\t\t@media (max-width: ${({ theme }) => theme.maxMobileWidth}px) {\n\t\t\twidth: 100vw;\n\t\t}\n\t}\n`;\n\nconst DomainChecker = (props: { children: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { domain: domainCode } = useParams<{ domain: string }>();\n\tconst guide = useGuideContext();\n\tif (guide.getDomain().code !== domainCode) {\n\t\treturn <Redirect to={Path.GUIDE_DOMAIN_SELECT}/>;\n\t} else {\n\t\tconst { children } = props;\n\t\treturn <Fragment>{children}</Fragment>;\n\t}\n};\n\nconst Guide = () => {\n\tlet step = Step.DOMAIN_SELECT;\n\tconst location = useLocation();\n\n\tif (matchPath(location.pathname, Path.GUIDE_DOMAIN_SELECT)) {\n\t\tstep = Step.DOMAIN_SELECT;\n\t} else if (matchPath(location.pathname, Path.GUIDE_IMPORT_DATA)) {\n\t\tstep = Step.IMPORT_DATA;\n\t} else if (matchPath(location.pathname, Path.GUIDE_MAPPING_FACTOR)) {\n\t\tstep = Step.MAPPING_FACTORS;\n\t} else if (matchPath(location.pathname, Path.GUIDE_MEASURE_INDICATOR)) {\n\t\tstep = Step.MEASURE_INDICATORS;\n\t} else if (matchPath(location.pathname, Path.GUIDE_BUILD_METRICS)) {\n\t\tstep = Step.BUILD_METRICS;\n\t}\n\n\treturn <GuideContextProvider>\n\t\t<HomePage step={step}>\n\t\t\t<Steps step={step}/>\n\t\t\t<Switch>\n\t\t\t\t<Route path={Path.GUIDE_DOMAIN_SELECT}><DomainSelect/></Route>\n\t\t\t\t<Route path={Path.GUIDE_IMPORT_DATA}><DomainChecker><ImportData/></DomainChecker></Route>\n\t\t\t\t<Route path={Path.GUIDE_MAPPING_FACTOR}><DomainChecker><MappingFactor/></DomainChecker></Route>\n\t\t\t\t<Route path={Path.GUIDE_MEASURE_INDICATOR}><DomainChecker><MeasureIndicator/></DomainChecker></Route>\n\t\t\t\t<Route path={Path.GUIDE_BUILD_METRICS}><DomainChecker><BuildMetrics/></DomainChecker></Route>\n\t\t\t\t<Route><Redirect to={Path.GUIDE_DOMAIN_SELECT}/></Route>\n\t\t\t</Switch>\n\t\t</HomePage>\n\t</GuideContextProvider>;\n};\nexport default Guide;","import color from 'color';\n\nconst baseColors1 = [ '#60acfc', '#32d3eb', '#5bc49f', '#feb64d', '#ff7c7c', '#9287e7' ];\nconst baseColors2 = [ '#238ee4', '#42B1C2', '#8DD86F', '#FD8C56', '#E14D7C', '#6163D9' ];\nconst baseColors3 = [ '#31A3E5', '#39C6BB', '#CCED48', '#F66B5B', '#CA4697', '#5057D6' ];\nconst baseColors4 = [ '#2EB1D9', '#55CEA3', '#FED535', '#F75559', '#A542AF', '#5479CD' ];\n\nexport const BaseColors6 = baseColors1;\nexport const BaseColors12 = [ ...baseColors1, ...baseColors2 ];\nexport const BaseColors24 = [ ...baseColors1, ...baseColors2, ...baseColors3, ...baseColors4 ];\n\nconst base24 = BaseColors24.map(c => color(c));\nexport const DarkenColors24 = base24.map(c => c.darken(0.1).rgb().toString());\nexport const LightColors24 = base24.map(c => c.lighten(0.2).rgb().toString());\nexport const LighterColors24 = base24.map(c => c.lighten(0.4).rgb().toString());\n\nexport const [ DarkenColors12, LightColors12, LighterColors12 ] = [ DarkenColors24, LightColors24, LighterColors24 ].map(series => {\n\treturn series.filter((c, index) => index % 2 === 0);\n});\nexport const [ DarkenColors6, LightColors6, LighterColors6 ] = [ DarkenColors24, LightColors24, LighterColors24 ].map(series => {\n\treturn series.filter((c, index) => index % 4 === 0);\n});","import { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Theme } from '../../theme/types';\n\nexport interface DropdownOption {\n\tvalue: string | number | boolean;\n\tlabel: string | ((props: any) => React.ReactNode) | React.ReactNode;\n}\n\ninterface State {\n\tactive: boolean;\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\tminWidth: number;\n}\n\nconst DropdownContainer = styled.div.attrs<State & { itemCount: number }>(() => {\n\treturn { 'data-widget': 'dropdown' };\n})<State & { itemCount: number }>(({ theme, top, height, itemCount }) => {\n\tconst atBottom = top + height + Math.min(itemCount, 8) * (theme as Theme).height + 2 < window.innerHeight;\n\treturn `\n\t\tposition: relative;\n\t\tpadding: 6px var(--input-indent);\n\t\toutline: none;\n\t\tappearance: none;\n\t\tborder: var(--border);\n\t\tborder-radius: var(--border-radius);\n\t\tfont-size: var(--font-size);\n\t\theight: var(--height);\n\t\tline-height: var(--line-height);\n\t\tcolor: var(--font-color);\n\t\tbackground-color: transparent;\n\t\ttransition: all 300ms ease-in-out;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tcursor: pointer;\n\t\twidth: 100%;\n\t\t> svg {\n\t\t\topacity: 0;\n\t\t\tmargin-left: var(--letter-gap);\n\t\t\ttransition: all 300ms ease-in-out;\n\t\t}\n\t\t&:hover,\n\t\t&:focus {\n\t\t\t> svg {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t\t&[data-options-visible=true]:focus {\n\t\t\tborder-bottom-left-radius: ${atBottom ? 0 : 'var(--border-radius)'};\n\t\t\tborder-bottom-right-radius: ${atBottom ? 0 : 'var(--border-radius)'};\n\t\t\tborder-top-left-radius: ${atBottom ? 'var(--border-radius)' : 0};\n\t\t\tborder-top-right-radius: ${atBottom ? 'var(--border-radius)' : 0};\n\t\t\t> div:last-child {\n\t\t\t\topacity: 1;\n\t\t\t\tpointer-events: auto;\n\t\t\t}\n\t\t}\n\t`;\n});\nconst Label = styled.span`\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow-x: hidden;\n\tflex-grow: 1;\n`;\nconst Options = styled.div.attrs<State & { itemCount: number }>(({ theme, top, left, height, minWidth, itemCount }) => {\n\tconst atBottom = top + height + Math.min(itemCount, 8) * (theme as Theme).height + 2 < window.innerHeight;\n\treturn {\n\t\tstyle: {\n\t\t\ttop: atBottom ? (top + height - 1) : 'unset',\n\t\t\tbottom: atBottom ? 'unset' : `calc(100vh - ${top + 1}px)`,\n\t\t\tleft,\n\t\t\tminWidth,\n\t\t\tborderTopLeftRadius: atBottom ? 0 : 'var(--border-radius)',\n\t\t\tborderTopRightRadius: atBottom ? 0 : 'var(--border-radius)',\n\t\t\tborderBottomLeftRadius: atBottom ? 'var(--border-radius)' : 0,\n\t\t\tborderBottomRightRadius: atBottom ? 'var(--border-radius)' : 0\n\t\t}\n\t};\n})<State & { itemCount: number }>`\n\tposition: fixed;\n\tmax-height: calc(var(--height) * 8 + 2px);\n\tpointer-events: none;\n\topacity: 0;\n\tbackground-color: var(--bg-color);\n\tborder: var(--border);\n\ttransition: opacity 300ms ease-in-out;\n\tz-index: 999;\n\toverflow-y: auto;\n\t> span {\n\t\theight: var(--height);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 6px var(--input-indent);\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\t&:hover {\n\t\t\tbackground-color: var(--hover-color);\n\t\t}\n\t}\n`;\n\nconst getPosition = (container: HTMLDivElement) => {\n\tconst rect = container.getBoundingClientRect();\n\treturn {\n\t\ttop: rect.top,\n\t\tleft: rect.left,\n\t\twidth: rect.width,\n\t\theight: rect.height\n\t};\n};\n\nconst Dropdown = (props: {\n\tclassName?: string,\n\toptions: Array<DropdownOption>,\n\tonChange: (option: DropdownOption) => Promise<void | { active: boolean }>,\n\tvalue?: string | number | boolean,\n\tplease?: string\n\tselect?: (value: string | number | boolean) => ((props: any) => React.ReactNode) | React.ReactNode;\n}) => {\n\tconst { className, options = [], onChange, value, please = '', select, ...rest } = props;\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst [ state, setState ] = useState<State>({ active: false, top: 0, left: 0, width: 0, height: 0, minWidth: 0 });\n\n\tuseEffect(() => {\n\t\tconst onScroll = () => {\n\t\t\tif (!state.active) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { top, left, width, height } = getPosition(containerRef.current!);\n\t\t\tsetState({ ...state, top, left, width, height, minWidth: width });\n\t\t};\n\t\twindow.addEventListener('scroll', onScroll, true);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', onScroll, true);\n\t\t};\n\t});\n\n\tlet selectedLabel;\n\tif (value == null) {\n\t\tselectedLabel = please;\n\t} else if (select) {\n\t\tselectedLabel = select(value) || please;\n\t} else {\n\t\tconst selectedOption = options.find(option => option.value === value);\n\t\tselectedLabel = selectedOption ? selectedOption.label : please;\n\t}\n\n\tconst onClicked = () => {\n\t\tconst { top, left, width, height } = getPosition(containerRef.current!);\n\t\tsetState({ active: true, top, left, width, height, minWidth: width });\n\t};\n\tconst onBlurred = () => setState({ ...state, active: false });\n\tconst onOptionClicked = (option: DropdownOption) => async () => {\n\t\tconst ret = await onChange(option);\n\t\tif (!ret) {\n\t\t\tsetState({ ...state, active: false });\n\t\t} else {\n\t\t\tsetState({ ...state, active: ret.active });\n\t\t}\n\t};\n\n\treturn <DropdownContainer className={className}\n\t                          data-options-visible={state.active}\n\t                          {...state}\n\t                          {...rest}\n\t                          itemCount={options.length}\n\t                          ref={containerRef}\n\t                          role='input' tabIndex={0}\n\t                          onClick={onClicked} onBlur={onBlurred}>\n\t\t<Label>{selectedLabel}</Label>\n\t\t<FontAwesomeIcon icon={faCaretDown}/>\n\t\t<Options {...state} itemCount={options.length}>\n\t\t\t{options.map(option => {\n\t\t\t\treturn <span key={`${option.value}`} onClick={onOptionClicked(option)}>\n\t\t\t\t\t{option.label}\n\t\t\t\t</span>;\n\t\t\t})}\n\t\t</Options>\n\t</DropdownContainer>;\n};\n\nexport default Dropdown;","export enum DataColumnType {\n\tTEXT = 'text',\n\tNUMERIC = 'numeric',\n\tBOOLEAN = 'boolean',\n\tDATE = 'date',\n\tTIME = 'time',\n\tDATETIME = 'datetime',\n\tOBJECT = 'object',\n\tARRAY = 'array',\n\tUNKNOWN = 'unknown'\n}\n\nexport interface DataColumn {\n\tname: string;\n\tlabel: string;\n\ttype: DataColumnType;\n\tnative: boolean;\n}\n\nexport interface CalculatedDataColumn extends DataColumn {\n\texpressionCode: string;\n\texpression: string;\n}\n\nexport interface ObjectDataColumn extends DataColumn {\n\tchildTypes: Array<DataColumn>;\n}\n\nexport type DataTopic = {\n\tcolumns: Array<DataColumn>,\n\tdata: Array<any>,\n\thash: string;\n};\n\nexport type DataSet = {\n\t[key in string]: DataTopic\n};\n"],"sourceRoot":""}