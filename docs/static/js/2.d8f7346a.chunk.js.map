{"version":3,"sources":["services/console/space.ts","pages/component/console/narrow-page-title.tsx","pages/component/console/page-container.tsx","pages/component/console/carved-button.tsx","pages/component/console/user-avatar.tsx","services/console/dashboard.ts","pages/console/connected-space/subject-view/graphics/utils.ts","pages/console/context/console-settings.tsx","pages/component/console/menu/resize-handle.tsx","pages/console/chart/chart-utils.ts","pages/console/chart/utils.ts","pages/console/chart/chart-bar.ts","pages/console/chart/chart-count.ts","pages/console/chart/chart-doughnut.ts","pages/console/chart/chart-line.ts","pages/console/chart/chart-nightingale.ts","pages/console/chart/chart-pie.ts","pages/console/chart/chart-scatter.ts","pages/console/chart/chart-defender.ts","pages/console/chart/chart-sunburst.ts","pages/console/chart/chart-tree.ts","pages/console/chart/chart-treemap.ts","pages/console/chart/chart-diagram.tsx","pages/component/toggle.tsx","pages/console/connected-space/subject-view/graphics/components.tsx","pages/console/connected-space/subject-view/graphics/chart-is-predefined.tsx","pages/console/connected-space/subject-view/graphics/chart-settings-admin.tsx","pages/console/connected-space/subject-view/graphics/chart-dimension.tsx","pages/console/connected-space/subject-view/graphics/chart-settings-dimensions.tsx","pages/console/connected-space/subject-view/graphics/chart-indicator.tsx","pages/console/connected-space/subject-view/graphics/chart-settings-indicators.tsx","pages/console/connected-space/subject-view/graphics/chart-colors.tsx","pages/console/connected-space/subject-view/graphics/chart.tsx","pages/console/connected-space/subject-view/graphics/chart-settings-render.tsx","pages/console/connected-space/subject-view/graphics/chart-settings-panel.tsx","pages/component/console/context/console-menu.tsx","pages/console/context/console-messages.tsx","pages/component/console/menu/menu-item.tsx","pages/component/console/menu/menu-logo.tsx","pages/component/console/menu/menu-separator.tsx","pages/component/console/menu/menu-user.tsx","pages/component/console/horizontal-loading.tsx","pages/console/context/console-nofitications.tsx","services/console/notification.ts","services/console/types.ts","pages/component/console/link-button.tsx","charts/color-theme.ts","pages/component/dropdown.tsx","pages/console/context/console-dashboards.tsx","pages/console/context/console-mails.tsx","services/console/favorites.ts","services/console/mail.ts","pages/console/context/console-spaces.tsx","pages/console/context/console-context.tsx","pages/console/context/console-favorites.tsx","pages/console/connected-space/subject-view/context.tsx","pages/component/console/context/console-tooltip.tsx"],"names":["demoTopics","topicId","code","name","factors","factorId","label","type","ConsoleTopicFactorType","SEQUENCE","TEXT","DATETIME","NUMBER","BOOLEAN","ENUM","enum","JSON","stringify","value","demoTopicRelations","relationId","sourceTopicId","sourceFactorNames","targetTopicId","targetFactorNames","ConsoleTopicRelationshipType","ONE_2_ONE","strictToTarget","strictToSource","MANY_2_ONE","fetchConnectedSpaces","a","isMockService","spaceId","connectId","ConsoleSpaceType","PUBLIC","lastVisitTime","topics","topicRelations","groups","subjects","PRIVATE","subjectId","topicCount","graphicsCount","createdAt","dataset","columns","groupId","token","findToken","fetch","getServiceHost","method","headers","Authorization","response","json","fetchAvailableSpaces","newConnectedSpaceId","connectSpace","Promise","resolve","setTimeout","dayjs","format","renameConnectedSpace","console","log","deleteConnectedSpace","space","newGroupId","newSubjectId","createGroup","data","group","body","result","deleteGroup","renameGroup","createSubject","subject","deleteSubject","saveSubject","fetchSubjectData","options","pageNumber","pageSize","itemCount","pageCount","Array","fill","map","row","rowIndex","index","padStart","quoteDate","subtract","Math","floor","random","issueDate","add","fetchCountChartData","chartId","meta","fetchTop10SQL","filter","x","query","toUpperCase","startsWith","executionTime","parts","split","fromWordIndex","findIndex","part","toLowerCase","topicName","replace","trim","parseFloat","sort","aTime","fetchTop10Pipeline","fetchChartData","TitleContainer","styled","div","attrs","NarrowPageTitle","props","title","onSettingsClicked","tooltip","center","ignoreHorizontalPadding","onClick","icon","faCog","PageContainer","NarrowContainer","PlainNarrowContainer","CarvedButton","button","TooltipCarvedButton","children","buttonRef","useRef","useTooltip","show","ref","rect","align","TooltipAlignment","CENTER","LEFT","offsetY","mouseEnter","mouseLeave","hide","onMouseEnter","onMouseLeave","event","User","color","UserAvatar","showTooltip","containerRef","first","second","names","length","BaseColors24","charCodeAt","single-character","fetchDashboards","dashboardId","graphics","newDashboardId","createDashboard","current","saveDashboard","dashboard","renameDashboard","deleteDashboard","INIT_MIN_WIDTH","CHART_HEADER_HEIGHT","CHART_ASPECT_RATIO","CHART_MIN_HEIGHT","CHART_MIN_WIDTH","generateChartRect","container","clientWidth","width","max","CHART_MARGIN","CHART_COLUMN_GAP","top","left","height","transformColumnToDropdownValue","column","operator","secondaryTopicId","secondaryFactorId","transformColumnsToDropdownOptions","topic","find","factor","secondaryTopic","ColumnExpressionOperator","NONE","alias","Frequency","FrequencyOptions","MIN_5","MIN_10","MIN_15","MIN_20","MIN_30","HOUR_1","useConsoleSettings","useState","notificationFrequency","notificationSubscriptionCategories","Object","keys","ConsoleNotificationCategory","mailFrequency","state","setState","notificationFrequencyChanged","frequency","notificationCategorySubscriptionAdded","category","includes","notificationCategorySubscriptionRemoved","c","mailFrequencyChanged","ResizeHandleAlignment","Handle","resizing","alignment","style","handleWidth","right","RIGHT","paddingLeft","ResizeHandle","onResize","handleRef","setResizing","canStartResize","abs","onMouseDown","target","clientX","window","innerWidth","onResizeEnd","removeEventListener","addEventListener","onMouseMove","cursor","getDimensionColumnIndexOffset","chart","indicators","buildDescartesByDimensions","dimensions","columnIndexOffset","dimensionIndexes","v","join","buildTreeData","dimensionColumnIndexOffset","buildData","dimensionIndex","grid","dimensionValueMap","Map","reduce","dimensionValue","dimensionValueIndex","get","push","set","stageNode","parentNode","followDimensionIndex","dimensionCount","node","validateIndicatorCount","def","indicatorCount","minIndicatorCount","pass","error","maxIndicatorCount","validateDimensionCount","minDimensionCount","maxDimensionCount","findFactorInSpace","where","Error","findFactorByDimension","dimension","findFactorByIndicator","indicator","Intl","NumberFormat","undefined","useGrouping","maximumFractionDigits","formatNumber","BAR","ConsoleSpaceSubjectChartType","buildOptions","legends","indicatorIndex","trigger","axisPointer","legend","item","xAxis","axisTick","yAxis","series","barGap","position","distance","verticalAlign","rotate","COUNT","DOUGHNUT","radius","LINE","NIGHTINGALE","roseType","PIE","findExtremum","columnIndex","extremum","min","Infinity","ChartTypes","SCATTER","rows","legendMap","legendIndex","buildLegends","xAxisFactor","yAxisFactor","visualMap","inRange","symbolSize","colorAlpha","SUNBURST","TREE","bottom","leaves","expandAndCollapse","TREEMAP","leafDepth","ChartTypeDropdownOptions","ChartTypeMap","findChartTypeDefinition","customValidate","validate","ret","buildEChartsOptions","ChartDiagramContainer","Chart","CountChart","setCountChartFontSize","countChartRef","getComputedStyle","display","clientHeight","fontSize","CountChartDiagram","rootRef","visible","useEffect","resizeObserver","ResizeObserver","observe","disconnect","toLocaleString","ChartDiagram","chartInstance","setChartInstance","setData","validation","setValidation","resize","prev","echarts","init","setOption","data-visible","e","ToggleButton","Slider","Toggle","onChange","toggleRef","data-positive","getBoundingClientRect","SettingsContainer","SettingsBackdrop","SettingsHeader","SettingsBody","SettingsRowLabel","SettingsSegmentTitle","SettingsSegmentRowLabel","AppendButton","PrimaryObjectButton","BottomGapper","SettingsFooter","ChartIsPredefined","forceUpdate","useForceUpdate","predefined","ChartSettingsAdmin","isAdmin","DimensionEditor","ChartDimension","onRemove","option","indexOf","canRemove","canReduceDimensions","isDimensionCanRemove","data-can-remove","faTimes","ChartSettingsDimensions","onDimensionRemove","d","canAddDimension","currentCount","canAppendDimensions","isDimensionCanAppend","v4","faLayerGroup","IndicatorEditor","ChartIndicator","onAggregatorChange","aggregator","canReduceIndicators","isIndicatorCanRemove","aggregateOptions","ConsoleSpaceSubjectChartIndicatorAggregator","SUMMARY","AVERAGE","MEDIAN","MINIMUM","MAXIMUM","some","ChartSettingsIndicators","onIndicatorRemove","i","canAddIndicator","canAppendIndicators","isIndicatorCanAppend","faUncharted","Colors","DragType","ColorsMap","STANDARD","DARK","DarkenColors24","LIGHT","LightColors24","LIGHTER","LighterColors24","CUSTOM_COLORS","ColorsDropdown","Dropdown","ColorLabelContainer","CustomColors","CustomColor","span","backgroundColor","borderColor","ColorPicker","opacity","pointerEvents","ColorLabel","ChartColors","customColorsRef","pickerRef","pickerState","setPickerState","useCollapseFixedThing","selectedColor","onColorsChange","colors","onColorClicked","containerLeft","firstLeft","querySelector","colorIndex","isArray","ChartSettingsRender","ChartSettingsPanel","closeSettings","onTypeChanged","forEach","defend","defendChart","faDoorOpen","ChartContainer","relative","borderRadius","zIndex","ChartDragHandle","ChartDragHandlePart","RESIZE_TOP","RESIZE_BOTTOM","RESIZE_LEFT","RESIZE_RIGHT","RESIZE_TOP_LEFT","RESIZE_TOP_RIGHT","RESIZE_BOTTOM_RIGHT","RESIZE_BOTTOM_LEFT","DND","Header","HeaderButtons","Body","resizeFromTop","clientY","startY","newHeight","newTop","resizeFromBottom","resizeFromLeft","startX","newWidth","newLeft","resizeFromRight","settings","onDeleteChart","locked","dialog","useDialog","useSubjectContext","save","chartRef","headerRef","headerButtonsRef","setMax","settingsVisible","setSettingsVisible","dragState","setDragState","currentTop","currentLeft","currentWidth","currentHeight","maxChart","offsetWidth","offsetHeight","releaseDraggingIfCan","chartContainer","transition","boxShadow","parseInt","getSelection","removeAllRanges","onCloseSettings","onDeleteConfirmClicked","data-max","getAttribute","contains","onMouseUp","chartStyle","data-position","data-locked","data-expanded","preventDefault","stopPropagation","faCompressArrowsAlt","faExpandArrowsAlt","data-widget","flexGrow","inkType","ButtonType","PRIMARY","DEFAULT","data-part-type","useConsoleMenu","minWidth","useTheme","consoleMenuWidth","menuWidth","setMenuWidth","distinct","messages","exclusive","ids","Set","message","id","exclusiveIds","n1","n2","createDate","localeCompare","reverse","has","delete","useMessages","updateAsRead","listReadMessages","listUnreadMessages","getLatestMessages","typeStr","latestArrivedEvent","EventEmitter","emitter","initialized","unread","allUnreadLoaded","read","allReadLoaded","mergeToState","newData","key","readAll","readOne","n","fetchRead","endTime","list","allLoaded","groupCollapsed","groupEnd","fetchUnread","fetchLatest","latest","emit","on","listener","off","MenuItemContainer","MenuItemIcon","FontAwesomeIcon","iconSize","MenuItemLabel","MenuItem","className","active","offsetX","data-active","icon-size","LogoContainer","TopLogo","Logo","TopTitle","MenuLogo","MenuSeparator","UserContainer","UserName","MenuUser","user","Container","HorizontalCircle","opacityList","keyframes","array","marginLeft","rotateY","createRollingAnimation","HorizontalLoading","BlendSmall","BlendMiddle","BlendLarge","size","marginTop","ConsoleNotificationEvent","listUnreadNotifications","notifications","REPORT_PUSHED","sender","CHART_TYPE_PUSHED","SPACE_PUSHED","GROUP_LEFT","GROUP_JOINED","listReadNotifications","getLatestNotifications","updateNotificationsAsRead","useConsoleNotifications","LATEST_RECEIVED","FilterJointType","FilterExpressionOperator","TopicJoinType","ConsoleFavoriteType","createLinkButtonBackgroundAnimation","Button","LinkButton","ignore-horizontal-padding","baseColors1","baseColors2","BaseColors6","BaseColors12","base24","darken","rgb","toString","lighten","DropdownContainer","theme","atBottom","innerHeight","Label","Options","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","getPosition","selectedLabel","please","select","rest","onScroll","selectedOption","onOptionClicked","data-options-visible","role","tabIndex","onBlur","faCaretDown","ConsoleDashboardsEvent","ConsoleMailEvent","fetchFavorites","DASHBOARD","SPACE","listUnreadMails","mails","listReadMails","getLatestMails","updateMailsAsRead","ConsoleSpacesEvent","Context","React","createContext","displayName","ConsoleContextProvider","menu","findAccount","context","spaces","connected","available","addSpace","SPACE_ADDED","addSpaceAddedListener","removeSpaceAddedListener","deleteSpace","s","splice","SPACE_DELETED","addSpaceDeletedListener","removeSpaceDeletedListener","spaceRenamed","SPACE_RENAMED","addSpaceRenamedListener","removeSpaceRenamedListener","usable","useConsoleSpaces","dashboards","items","addDashboard","DASHBOARD_ADDED","addDashboardAddedListener","removeDashboardAddedListener","DASHBOARD_DELETED","addDashboardDeletedListener","removeDashboardDeletedListener","dashboardRenamed","DASHBOARD_RENAMED","addDashboardRenamedListener","removeDashboardRenamedListener","useConsoleDashboards","favorites","pinned","remove","fav","f","isMenuExpanded","invoker","pin","unpin","useConsoleFavorites","Provider","useConsoleContext","useContext","computeSpaceDefs","spaceDef","topicOptions","factorOptions","all","relationOptions","relation","source","factorName","relations","SubjectContextProvider","doSave","defs","setDefs","saveTimeoutHandle","setSaveTimeoutHandle","immediately","clearTimeout","TooltipContainer","maxWidth","y","transform","transformOrigin","consoleTooltipMinHeight","Caret","ConsoleTooltipContextProvider","content","setContent","functions","data-show","notShow","tooltipContext"],"mappings":"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","file":"static/js/2.d8f7346a.chunk.js","sourcesContent":["import dayjs from 'dayjs';\nimport { findToken } from '../account/account-session';\nimport { DataPage } from '../admin/types';\nimport { getServiceHost, isMockService } from '../service_utils';\nimport {\n\tConnectedConsoleSpace,\n\tConsoleSpace,\n\tConsoleSpaceGroup,\n\tConsoleSpaceSubject,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceType,\n\tConsoleTopic,\n\tConsoleTopicFactorType,\n\tConsoleTopicRelationship,\n\tConsoleTopicRelationshipType\n} from './types';\n\nconst demoTopics: Array<ConsoleTopic> = [\n\t{\n\t\ttopicId: '1',\n\t\tcode: 'quotation',\n\t\tname: 'Quotation',\n\t\tfactors: [\n\t\t\t{\n\t\t\t\tfactorId: '101',\n\t\t\t\tname: 'quotationId',\n\t\t\t\tlabel: 'Quotation Sequence',\n\t\t\t\ttype: ConsoleTopicFactorType.SEQUENCE\n\t\t\t},\n\t\t\t{ factorId: '102', name: 'quoteNo', label: 'Quotation No.', type: ConsoleTopicFactorType.TEXT },\n\t\t\t{\n\t\t\t\tfactorId: '103',\n\t\t\t\tname: 'quoteDate',\n\t\t\t\tlabel: 'Quotation Create Date',\n\t\t\t\ttype: ConsoleTopicFactorType.DATETIME\n\t\t\t},\n\t\t\t{\n\t\t\t\tfactorId: '104',\n\t\t\t\tname: 'policyHolderId',\n\t\t\t\tlabel: 'Policy Holder Id',\n\t\t\t\ttype: ConsoleTopicFactorType.SEQUENCE\n\t\t\t},\n\t\t\t{ factorId: '105', name: 'premium', label: 'Premium', type: ConsoleTopicFactorType.NUMBER },\n\t\t\t{ factorId: '106', name: 'issued', label: 'Issued', type: ConsoleTopicFactorType.BOOLEAN }\n\t\t]\n\t},\n\t{\n\t\ttopicId: '2',\n\t\tcode: 'policy',\n\t\tname: 'Policy',\n\t\tfactors: [\n\t\t\t{ factorId: '201', name: 'policyId', label: 'Policy Sequence', type: ConsoleTopicFactorType.SEQUENCE },\n\t\t\t{ factorId: '202', name: 'quotationNo', label: 'Quotation No.', type: ConsoleTopicFactorType.TEXT },\n\t\t\t{\n\t\t\t\tfactorId: '203',\n\t\t\t\tname: 'quoteDate',\n\t\t\t\tlabel: 'Quotation Create Date',\n\t\t\t\ttype: ConsoleTopicFactorType.DATETIME\n\t\t\t},\n\t\t\t{ factorId: '204', name: 'policyNo', label: 'Policy No.', type: ConsoleTopicFactorType.TEXT },\n\t\t\t{ factorId: '205', name: 'issueDate', label: 'Policy Issue Date', type: ConsoleTopicFactorType.DATETIME },\n\t\t\t{\n\t\t\t\tfactorId: '206',\n\t\t\t\tname: 'policyHolderId',\n\t\t\t\tlabel: 'Policy Holder Id',\n\t\t\t\ttype: ConsoleTopicFactorType.SEQUENCE\n\t\t\t},\n\t\t\t{ factorId: '207', name: 'premium', label: 'Premium', type: ConsoleTopicFactorType.NUMBER }\n\t\t]\n\t},\n\t{\n\t\ttopicId: '3',\n\t\tcode: 'participant',\n\t\tname: 'Participant',\n\t\tfactors: [\n\t\t\t{\n\t\t\t\tfactorId: '301',\n\t\t\t\tname: 'participantId',\n\t\t\t\tlabel: 'Participant Sequence',\n\t\t\t\ttype: ConsoleTopicFactorType.SEQUENCE\n\t\t\t},\n\t\t\t{ factorId: '302', name: 'firstName', label: 'First Name', type: ConsoleTopicFactorType.TEXT },\n\t\t\t{ factorId: '303', name: 'lastName', label: 'Last Name', type: ConsoleTopicFactorType.TEXT },\n\t\t\t{ factorId: '304', name: 'fullName', label: 'Full Name', type: ConsoleTopicFactorType.TEXT },\n\t\t\t{ factorId: '305', name: 'dateOfBirth', label: 'Birth Date', type: ConsoleTopicFactorType.DATETIME },\n\t\t\t{\n\t\t\t\tfactorId: '306',\n\t\t\t\tname: 'gender',\n\t\t\t\tlabel: 'Gender',\n\t\t\t\ttype: ConsoleTopicFactorType.ENUM,\n\t\t\t\tenum: JSON.stringify([\n\t\t\t\t\t{ value: 'F', label: 'Female' },\n\t\t\t\t\t{ value: 'M', label: 'Male' }\n\t\t\t\t])\n\t\t\t},\n\t\t\t{\n\t\t\t\tfactorId: '307',\n\t\t\t\tname: 'city',\n\t\t\t\tlabel: 'City',\n\t\t\t\ttype: ConsoleTopicFactorType.ENUM,\n\t\t\t\tenum: JSON.stringify([\n\t\t\t\t\t{ value: 'AU', label: 'Augusta' },\n\t\t\t\t\t{ value: 'BO', label: 'Boston' },\n\t\t\t\t\t{ value: 'CO', label: 'Concord' },\n\t\t\t\t\t{ value: 'HA', label: 'Hartford' },\n\t\t\t\t\t{ value: 'MO', label: 'Montpelier' },\n\t\t\t\t\t{ value: 'NY', label: 'New York' },\n\t\t\t\t\t{ value: 'PR', label: 'Providence' }\n\t\t\t\t])\n\t\t\t}\n\t\t]\n\t}\n];\nconst demoTopicRelations: Array<ConsoleTopicRelationship> = [\n\t{\n\t\trelationId: '1',\n\t\tsourceTopicId: '2',\n\t\tsourceFactorNames: [ 'quotationNo' ],\n\t\ttargetTopicId: '1',\n\t\ttargetFactorNames: [ 'quoteNo' ],\n\t\ttype: ConsoleTopicRelationshipType.ONE_2_ONE,\n\t\tstrictToTarget: true,\n\t\tstrictToSource: false\n\t},\n\t{\n\t\trelationId: '2',\n\t\tsourceTopicId: '2',\n\t\tsourceFactorNames: [ 'policyHolderId' ],\n\t\ttargetTopicId: '3',\n\t\ttargetFactorNames: [ 'participantId' ],\n\t\ttype: ConsoleTopicRelationshipType.MANY_2_ONE,\n\t\tstrictToTarget: true,\n\t\tstrictToSource: false\n\t},\n\t{\n\t\trelationId: '3',\n\t\tsourceTopicId: '1',\n\t\tsourceFactorNames: [ 'policyHolderId' ],\n\t\ttargetTopicId: '3',\n\t\ttargetFactorNames: [ 'participantId' ],\n\t\ttype: ConsoleTopicRelationshipType.MANY_2_ONE,\n\t\tstrictToTarget: true,\n\t\tstrictToSource: false\n\t}\n];\nexport const fetchConnectedSpaces = async (): Promise<Array<ConnectedConsoleSpace>> => {\n\tif (isMockService()) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '1',\n\t\t\t\tname: 'Sales Statistics',\n\t\t\t\ttype: ConsoleSpaceType.PUBLIC,\n\t\t\t\tlastVisitTime: '2020/10/31 14:23:07',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tgroups: [],\n\t\t\t\tsubjects: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '2',\n\t\t\t\tname: 'Sales Statistics in New York',\n\t\t\t\ttype: ConsoleSpaceType.PRIVATE,\n\t\t\t\tlastVisitTime: '2020/11/05 15:14:11',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tsubjects: [\n\t\t\t\t\t{\n\t\t\t\t\t\tsubjectId: '1',\n\t\t\t\t\t\tname: 'Premium Summary',\n\t\t\t\t\t\ttopicCount: 3,\n\t\t\t\t\t\tgraphicsCount: 2,\n\t\t\t\t\t\tlastVisitTime: '2020/11/12 20:20:01',\n\t\t\t\t\t\tcreatedAt: '2020/11/12 19:20:02',\n\t\t\t\t\t\tdataset: {\n\t\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t\t{ topicId: '1', factorId: '102' },\n\t\t\t\t\t\t\t\t{ topicId: '1', factorId: '103' },\n\t\t\t\t\t\t\t\t{ topicId: '1', factorId: '106' },\n\t\t\t\t\t\t\t\t{ topicId: '2', factorId: '204' },\n\t\t\t\t\t\t\t\t{ topicId: '2', factorId: '205' },\n\t\t\t\t\t\t\t\t{ topicId: '2', factorId: '207' },\n\t\t\t\t\t\t\t\t{ topicId: '3', factorId: '304' },\n\t\t\t\t\t\t\t\t{ topicId: '3', factorId: '305' },\n\t\t\t\t\t\t\t\t{ topicId: '3', factorId: '306' },\n\t\t\t\t\t\t\t\t{ topicId: '3', factorId: '307' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsubjectId: '2',\n\t\t\t\t\t\tname: 'District Summary',\n\t\t\t\t\t\ttopicCount: 2,\n\t\t\t\t\t\tgraphicsCount: 1,\n\t\t\t\t\t\tlastVisitTime: '2020/11/02 20:25:01',\n\t\t\t\t\t\tcreatedAt: '2020/11/01 19:25:02'\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tgroups: [\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupId: '1',\n\t\t\t\t\t\tname: 'All About Money',\n\t\t\t\t\t\tsubjects: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsubjectId: '101',\n\t\t\t\t\t\t\t\tname: 'Premium Summary',\n\t\t\t\t\t\t\t\ttopicCount: 1,\n\t\t\t\t\t\t\t\tgraphicsCount: 1,\n\t\t\t\t\t\t\t\tlastVisitTime: '2020/11/12 20:25:01',\n\t\t\t\t\t\t\t\tcreatedAt: '2020/11/12 19:25:02'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupId: '2',\n\t\t\t\t\t\tname: 'All About Time',\n\t\t\t\t\t\tsubjects: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsubjectId: '201',\n\t\t\t\t\t\t\t\tname: 'Premium Summary',\n\t\t\t\t\t\t\t\ttopicCount: 2,\n\t\t\t\t\t\t\t\tgraphicsCount: 1,\n\t\t\t\t\t\t\t\tlastVisitTime: '2020/11/12 20:25:01',\n\t\t\t\t\t\t\t\tcreatedAt: '2020/11/12 19:25:02'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupId: '3',\n\t\t\t\t\t\tname: 'All About Gender',\n\t\t\t\t\t\tsubjects: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsubjectId: '301',\n\t\t\t\t\t\t\t\tname: 'Premium Summary',\n\t\t\t\t\t\t\t\ttopicCount: 2,\n\t\t\t\t\t\t\t\tgraphicsCount: 1,\n\t\t\t\t\t\t\t\tlastVisitTime: '2020/8/31 20:25:01',\n\t\t\t\t\t\t\t\tcreatedAt: '2020/8/21 19:25:02'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupId: '4',\n\t\t\t\t\t\tname: 'All About Age',\n\t\t\t\t\t\tsubjects: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsubjectId: '401',\n\t\t\t\t\t\t\t\tname: 'Premium Summary',\n\t\t\t\t\t\t\t\ttopicCount: 2,\n\t\t\t\t\t\t\t\tgraphicsCount: 1,\n\t\t\t\t\t\t\t\tlastVisitTime: '2019/11/12 20:25:01',\n\t\t\t\t\t\t\t\tcreatedAt: '2019/11/12 19:25:02'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '3',\n\t\t\t\tname: 'Sales Statistics in Maine',\n\t\t\t\ttype: ConsoleSpaceType.PRIVATE,\n\t\t\t\tlastVisitTime: '2020/11/05 14:13:11',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tgroups: [],\n\t\t\t\tsubjects: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '4',\n\t\t\t\tname: 'Sales Statistics in New Hampshire',\n\t\t\t\ttype: ConsoleSpaceType.PUBLIC,\n\t\t\t\tlastVisitTime: '2020/11/05 13:12:11',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tgroups: [],\n\t\t\t\tsubjects: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '5',\n\t\t\t\tname: 'Sales Statistics in Vermont',\n\t\t\t\ttype: ConsoleSpaceType.PUBLIC,\n\t\t\t\tlastVisitTime: '2020/11/05 12:11:11',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tgroups: [],\n\t\t\t\tsubjects: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '6',\n\t\t\t\tname: 'Sales Statistics in Rhode Island',\n\t\t\t\ttype: ConsoleSpaceType.PRIVATE,\n\t\t\t\tlastVisitTime: '2020/11/05 11:10:11',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tgroups: [],\n\t\t\t\tsubjects: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '7',\n\t\t\t\tname: 'Sales Statistics in Connecticut',\n\t\t\t\ttype: ConsoleSpaceType.PRIVATE,\n\t\t\t\tlastVisitTime: '2020/11/05 10:09:11',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tgroups: [],\n\t\t\t\tsubjects: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tconnectId: '8',\n\t\t\t\tname: 'Sales Statistics in Massachusetts',\n\t\t\t\ttype: ConsoleSpaceType.PUBLIC,\n\t\t\t\tlastVisitTime: '2020/11/05 09:08:11',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\tgroups: [],\n\t\t\t\tsubjects: []\n\t\t\t}\n\t\t];\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}console_space/connected/me`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\n\t\treturn await response.json();\n\t}\n};\n\nexport const fetchAvailableSpaces = async (): Promise<Array<ConsoleSpace>> => {\n\tif (isMockService()) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tspaceId: '1',\n\t\t\t\tname: 'Sales Statistics',\n\t\t\t\ttopics: demoTopics,\n\t\t\t\ttopicRelations: demoTopicRelations\n\t\t\t},\n\t\t\t{\n\t\t\t\tspaceId: '2',\n\t\t\t\tname: 'Claim Trend',\n\t\t\t\ttopics: demoTopics\n\t\t\t}\n\t\t];\n\n\t\t// const account = Storage.findAccount();\n\t} else {\n\t\t// console.log(mock_flag);\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}space/available`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\n\t\treturn await response.json();\n\t}\n};\n\n// TODO demo purpose\nlet newConnectedSpaceId = 10000;\nexport const connectSpace = async (\n\tspaceId: string,\n\tname: string,\n\ttype: ConsoleSpaceType\n): Promise<ConnectedConsoleSpace> => {\n\tif (isMockService()) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve({\n\t\t\t\t\tspaceId,\n\t\t\t\t\tconnectId: `${newConnectedSpaceId++}`,\n\t\t\t\t\tname,\n\t\t\t\t\ttype,\n\t\t\t\t\tlastVisitTime: dayjs().format('YYYY-MM-DD HH:mm:ss'),\n\t\t\t\t\ttopics: demoTopics,\n\t\t\t\t\ttopicRelations: demoTopicRelations,\n\t\t\t\t\tgroups: [],\n\t\t\t\t\tsubjects: []\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t});\n\n\t\t// const account = Storage.findAccount();\n\t} else {\n\t\t// console.log(mock_flag);\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}space/connect?space_id=${spaceId}&name=${name}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\n\t\treturn await response.json();\n\t}\n};\n\nexport const renameConnectedSpace = async (connectId: string, name: string): Promise<void> => {\n\tif (isMockService()) {\n\t\tconsole.log('rename mock service');\n\t} else {\n\t\tconst token = findToken();\n\t\tawait fetch(`${getServiceHost()}console_space/rename?connect_id=${connectId}&name=${name}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const deleteConnectedSpace = async (space: ConnectedConsoleSpace): Promise<void> => {\n\tif (isMockService()) {\n\t\tconsole.log('detele connect space mock service');\n\t} else {\n\t\tconst token = findToken();\n\t\tawait fetch(`${getServiceHost()}console_space/delete?connect_id=${space.connectId}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t}\n};\n\n// TODO demo purpose\nlet newGroupId = 10000;\nlet newSubjectId = 10000;\nexport const createGroup = async (data: { space: ConnectedConsoleSpace; group: ConsoleSpaceGroup }): Promise<void> => {\n\tif (isMockService()) {\n\t\tdata.group.groupId = `${newGroupId++}`;\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}console_space/group?connect_id=${data.space.connectId}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t},\n\t\t\tbody: JSON.stringify(data.group)\n\t\t});\n\n\t\tconst result = await response.json();\n\t\tdata.group.groupId = result.groupId;\n\t}\n};\nexport const deleteGroup = async (group: ConsoleSpaceGroup): Promise<void> => {\n};\nexport const renameGroup = async (groupId: string, name: string): Promise<void> => {\n\tif (isMockService()) {\n\t\tconsole.log('rename mock service');\n\t} else {\n\t\tconst token = findToken();\n\t\tawait fetch(`${getServiceHost()}console_space/group/rename?group_id=${groupId}&name=${name}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const createSubject = async (data: {\n\tspace: ConnectedConsoleSpace;\n\tgroup?: ConsoleSpaceGroup;\n\tsubject: ConsoleSpaceSubject;\n}): Promise<void> => {\n\tif (isMockService()) {\n\t\tdata.subject.subjectId = `${newSubjectId++}`;\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(\n\t\t\t`${getServiceHost()}console_space/subject?connect_id=${data.space.connectId}&group_id=${\n\t\t\t\tdata.group?.groupId\n\t\t\t}`,\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data.subject)\n\t\t\t}\n\t\t);\n\n\t\tconst result = await response.json();\n\t\tconsole.log(result);\n\t\tdata.subject.subjectId = result.subjectId;\n\t}\n};\nexport const deleteSubject = async (subject: ConsoleSpaceSubject): Promise<void> => {\n\tif (isMockService()) {\n\t\tconsole.log('delete mock subject');\n\t} else {\n\t\tconst token = findToken();\n\t\tawait fetch(`${getServiceHost()}console_space/subject/delete?subject_id=${subject.subjectId}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t}\n};\nexport const saveSubject = async (subject: ConsoleSpaceSubject): Promise<void> => {\n\tif (isMockService()) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => resolve(), 500);\n\t\t});\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}console_space/subject/save`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t},\n\t\t\tbody: JSON.stringify(subject)\n\t\t});\n\n\t\tconst result = await response.json();\n\t\tconsole.log(result);\n\t}\n};\n\nexport const fetchSubjectData = async (options: {\n\tsubjectId: string;\n\tpageNumber?: number;\n\tpageSize?: number;\n}): Promise<DataPage<Array<any>>> => {\n\tconst { pageNumber = 1, pageSize = 100 } = options;\n\tif (isMockService()) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve({\n\t\t\t\t\titemCount: 223,\n\t\t\t\t\tpageNumber,\n\t\t\t\t\tpageSize,\n\t\t\t\t\tpageCount: 3,\n\t\t\t\t\tdata: new Array(pageNumber === 3 ? 23 : 100).fill(1).map((row, rowIndex) => {\n\t\t\t\t\t\tconst index = `${(pageNumber - 1) * pageSize + rowIndex + 1}`.padStart(5, '0');\n\t\t\t\t\t\tconst quoteDate = dayjs()\n\t\t\t\t\t\t\t.subtract(1, 'year')\n\t\t\t\t\t\t\t.subtract(Math.floor(Math.random() * 30), 'day');\n\t\t\t\t\t\tconst issueDate = quoteDate.add(Math.floor(Math.random() * 30), 'day');\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t`Q${index}`,\n\t\t\t\t\t\t\tquoteDate.format('YYYY/MM/DD'),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t`P${index}`,\n\t\t\t\t\t\t\tissueDate.format('YYYY/MM/DD'),\n\t\t\t\t\t\t\t10000,\n\t\t\t\t\t\t\t'John Doe',\n\t\t\t\t\t\t\t'1985/02/13',\n\t\t\t\t\t\t\t'M',\n\t\t\t\t\t\t\t'AU'\n\t\t\t\t\t\t];\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t});\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(\n\t\t\t`${getServiceHost()}console_space/subject/dataset?subject_id=${options.subjectId}`,\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ pageNumber: options.pageNumber, pageSize: options.pageSize })\n\t\t\t}\n\t\t);\n\n\t\tconst result = await response.json();\n\t\treturn result;\n\t}\n};\n\nexport const fetchCountChartData = async (\n\tsubjectId: string,\n\tchartId: string\n): Promise<ConsoleSpaceSubjectChartDataSet> => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(\n\t\t\t() =>\n\t\t\t\tresolve({\n\t\t\t\t\tmeta: [],\n\t\t\t\t\tdata: [ [ 1234 ] ]\n\t\t\t\t} as ConsoleSpaceSubjectChartDataSet),\n\t\t\t500\n\t\t);\n\t});\n};\n\nconst fetchTop10SQL = (data?: Array<{ query: string, executionTime: string }>): Promise<ConsoleSpaceSubjectChartDataSet> => {\n\treturn new Promise(resolve => {\n\t\tsetTimeout(() => resolve({\n\t\t\tmeta: [],\n\t\t\tdata: (data || [\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT * FROM monitor_pipeline ORDER BY complete_time DESC LIMIT 10',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '944.49ms',\n\t\t\t\t\t'rawInputPositions': 95\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT * FROM monitor_pipeline ORDER BY complete_time DESC LIMIT 10',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '174.35ms',\n\t\t\t\t\t'rawInputPositions': 95\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT COUNT(*) FROM \"topic_gi_policy\"',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '225.28ms',\n\t\t\t\t\t'rawInputPositions': 163\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT * FROM monitor_pipeline ORDER BY complete_time DESC LIMIT 10',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '156.01ms',\n\t\t\t\t\t'rawInputPositions': 95\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT MAX(\"beforeVatPremium\") FROM \"topic_gi_policy\" GROUP BY \"orgCode\"',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '644.57ms',\n\t\t\t\t\t'rawInputPositions': 163\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT * FROM monitor_pipeline ORDER BY complete_time DESC LIMIT 10',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '103.83ms',\n\t\t\t\t\t'rawInputPositions': 95\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT \"adjustedPremium\",\"commission\",\"beforeVatPremium\",\"duePremium\",\"commissionRate\",\"agentCode\",\"productCode\",\"effDateMonth\" FROM \"topic_gi_policy\" OFFSET 1 LIMIT 100',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '329.57ms',\n\t\t\t\t\t'rawInputPositions': 163\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT MAX(\"beforeVatPremium\") FROM \"topic_gi_policy\" GROUP BY \"orgCode\"',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '127.72ms',\n\t\t\t\t\t'rawInputPositions': 163\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'query': 'SELECT * FROM monitor_pipeline ORDER BY complete_time DESC LIMIT 10',\n\t\t\t\t\t'state': 'FINISHED',\n\t\t\t\t\t'executionTime': '95.80ms',\n\t\t\t\t\t'rawInputPositions': 95\n\t\t\t\t}\n\t\t\t]).filter(x => !x.query.toUpperCase().startsWith('SELECT * FROM MONITOR_PIPELINE'))\n\t\t\t\t.map(x => [ x.query, x.executionTime ])\n\t\t\t\t.map(([ query, executionTime ]) => {\n\t\t\t\t\tconst parts = query.split(' ');\n\t\t\t\t\tconst fromWordIndex = parts.findIndex(part => part.toLowerCase() === 'from');\n\t\t\t\t\tconst topicName = parts[fromWordIndex + 1].replace(/\"/g, '').trim().toUpperCase();\n\t\t\t\t\treturn [ parseFloat(executionTime), topicName ];\n\t\t\t\t})\n\t\t\t\t.sort(([ aTime ], [ bTime ]) => {\n\t\t\t\t\treturn (bTime as number) - (aTime as number);\n\t\t\t\t})\n\t\t}), 500);\n\t});\n};\n\nconst fetchTop10Pipeline = (data?: Array<[ number, string, string ]>): Promise<ConsoleSpaceSubjectChartDataSet> => {\n\treturn new Promise(resolve => {\n\t\tsetTimeout(() => resolve({\n\t\t\tmeta: [],\n\t\t\tdata: (data || [\n\t\t\t\t[\n\t\t\t\t\t18.886,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18.351,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18.141,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15.892,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14.99,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14.92,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14.67,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14.418,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14.321,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13.876,\n\t\t\t\t\t'FINISHED',\n\t\t\t\t\t'Raw_gi_poliocy'\n\t\t\t\t]\n\t\t\t]).map(([ time, , name ]) => [ time, name.toUpperCase() ])\n\t\t\t\t.sort(([ aTime ], [ bTime ]) => {\n\t\t\t\t\treturn (bTime as number) - (aTime as number);\n\t\t\t\t})\n\t\t}), 500);\n\t});\n};\n\nexport const fetchChartData = async (subjectId: string, chartId: string): Promise<ConsoleSpaceSubjectChartDataSet> => {\n\t// console.log(subjectId, chartId);\n\tif (isMockService()) {\n\t\tif (subjectId === 'SYS_001' && chartId === 'TOP_10_SQL') {\n\t\t\t// admin dashboard top-slow-sql\n\t\t\treturn fetchTop10SQL();\n\t\t} else if (subjectId === 'SYS_001' && chartId === 'TOP_10_SLOW_PIPELINE') {\n\t\t\t// admin dashboard top-slow-pipeline\n\t\t\treturn fetchTop10Pipeline();\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(\n\t\t\t\t() =>\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\tdata: []\n\t\t\t\t\t} as ConsoleSpaceSubjectChartDataSet),\n\t\t\t\t500\n\t\t\t);\n\t\t});\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(\n\t\t\t`${getServiceHost()}console_space/dataset/chart?subject_id=${subjectId}&chart_id=${chartId}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tlet result = await response.json();\n\t\tif (subjectId === 'SYS_001' && chartId === 'TOP_10_SQL') {\n\t\t\t// admin dashboard top-slow-sql\n\t\t\tresult = await fetchTop10SQL(result.data);\n\t\t} else if (subjectId === 'SYS_001' && chartId === 'TOP_10_SLOW_PIPELINE') {\n\t\t\t// admin dashboard top-slow-pipeline\n\t\t\tresult = await fetchTop10Pipeline(result.data);\n\t\t}\n\t\treturn result;\n\t}\n};\n","import { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { LinkButton } from './link-button';\n\nconst TitleContainer = styled.div.attrs({\n\t'data-widget': 'console-narrow-page-title'\n})`\n\tdisplay: flex;\n\talign-items: baseline;\n\t> div:first-child {\n\t\tfont-family: var(--console-title-font-family);\n\t\tfont-size: 3em;\n\t\tletter-spacing: 1px;\n\t}\n\t> button {\n\t\tmargin-left: calc(var(--margin) / 2);\n\t\tfont-size: 1.4em;\n\t\tcolor: var(--console-primary-color);\n\t}\n`;\n\nexport const NarrowPageTitle = (props: {\n\ttitle: string;\n\tonSettingsClicked?: () => void;\n}) => {\n\tconst { title, onSettingsClicked } = props;\n\n\treturn <TitleContainer>\n\t\t<div>{title}</div>\n\t\t{onSettingsClicked\n\t\t\t? <LinkButton tooltip='Settings'\n\t\t\t              center={true}\n\t\t\t              ignoreHorizontalPadding={true}\n\t\t\t              onClick={onSettingsClicked}>\n\t\t\t\t<FontAwesomeIcon icon={faCog}/>\n\t\t\t</LinkButton>\n\t\t\t: null}\n\t</TitleContainer>;\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div<{ 'background-image': string }>`\n\t&:before {\n\t\tcontent: '';\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\ttop: 0;\t\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\tz-index: -1;\n\t\tpointer-events: none;\n\t\tuser-select: none;\n\t\tfilter: brightness(1.5) opacity(0.2);\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: left calc(var(--margin) * 3) bottom calc(var(--margin) * 3);\n\t\tbackground-size: 300px;\n\t\tbackground-image: url(${({ 'background-image': backgroundImage }) => backgroundImage});\n\t\ttransform: rotateY(180deg);\n\t}\n`;\nexport const NarrowContainer = styled(PageContainer).attrs({\n\t'data-widget': 'console-narrow-page-container'\n})`\n\tflex-grow: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\tmax-width: 1000px;\n\tmin-width: 600px;\n\tmargin: var(--margin) auto;\n`;\nexport const PlainNarrowContainer = styled.div.attrs({\n\t'data-widget': 'console-narrow-page-container'\n})`\n\tflex-grow: 1;\n\tdisplay: flex;\n\tposition: relative;\n\tflex-direction: column;\n\tmax-width: 1000px;\n\tmin-width: 600px;\n\tmargin: var(--margin) auto;\n`;\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { TooltipAlignment, useTooltip } from './context/console-tooltip';\n\nexport const CarvedButton = styled.button`\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 4px calc(var(--margin) / 2);\n\tborder: 0;\n\tborder-radius: var(--border-radius);\n\tappearance: none;\n\toutline: none;\n\tbackground-color: transparent;\n\tcolor: var(--console-primary-color);\n\tfont-weight: var(--font-bold);\n\tcursor: pointer;\n\ttransition: all 300ms ease-in-out;\n\t&[data-visible=false] {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n\t&:hover {\n\t\tcolor: var(--console-primary-color);\n\t\tbackground-color: var(--invert-color);\n\t\tbox-shadow: var(--console-hover-shadow);\n\t}\n\t> svg {\n\t\tmargin-right: calc(var(--margin) / 4);\n\t}\n`;\n\nexport const TooltipCarvedButton = (props: {\n\ttooltip?: string;\n\tcenter?: boolean;\n\tonClick?: (event: React.MouseEvent) => void;\n\tchildren: ((props: any) => React.ReactNode) | React.ReactNode\n}) => {\n\tconst { tooltip, center = false, onClick, children } = props;\n\n\tconst buttonRef = useRef<HTMLButtonElement>(null);\n\tconst { mouseEnter, mouseLeave, hide } = useTooltip({\n\t\tshow: !!tooltip,\n\t\ttooltip,\n\t\tref: buttonRef,\n\t\trect: () => ({ align: center ? TooltipAlignment.CENTER : TooltipAlignment.LEFT, offsetY: 10 })\n\t});\n\n\tconst onClicked = (event: React.MouseEvent) => {\n\t\tif (onClick) {\n\t\t\thide && hide();\n\t\t\tonClick(event);\n\t\t}\n\t};\n\n\treturn <CarvedButton onMouseEnter={mouseEnter} onMouseLeave={mouseLeave}\n\t                     onClick={onClicked}\n\t                     ref={buttonRef}>\n\t\t{children}\n\t</CarvedButton>;\n};","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { BaseColors24 } from '../../../charts/color-theme';\nimport { TooltipAlignment, useTooltip } from './context/console-tooltip';\n\nconst User = styled.div<{ color: string, 'single-character': boolean }>`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1.3em;\n\tfont-family: var(--console-title-font-family);\n\tfont-weight: var(--console-title-font-weight);\n\tfont-variant: petite-caps;\n\twidth: var(--console-menu-item-icon-size);\n\theight: var(--console-menu-item-icon-size);\n\tborder-radius: 100%;\n\tbackground-color: ${({ color }) => color};\n\tcolor: var(--invert-color);\n\tuser-select: none;\n\ttransform: scale(0.9);\n\ttransform-origin: center;\n\t> span:first-child {\n\t\ttransform: ${({ 'single-character': singleCharacter }) => singleCharacter ? '' : 'translate(1px, -1px)'};\n\t\tz-index: 1;\n\t}\n\t> span:last-child {\n\t\tz-index: 0;\n\t\topacity: 0.7;\n\t\ttransform: translate(-1px, -1px);\n\t}\n`;\n\nexport const UserAvatar = (props: { name: string, showTooltip?: boolean }) => {\n\tconst { name, showTooltip = false } = props;\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\n\tconst { mouseEnter, mouseLeave } = useTooltip({\n\t\tshow: showTooltip,\n\t\ttooltip: name,\n\t\tref: containerRef,\n\t\trect: () => ({ align: TooltipAlignment.CENTER, offsetY: 10 })\n\t});\n\n\tlet first = 'X';\n\tlet second = '';\n\tconst names = (name || '').split(/[\\s.-]/);\n\tif (names.length !== 0) {\n\t\tfirst = ((names[0] || '')[0] || 'X').toUpperCase();\n\t\tif (names.length > 1) {\n\t\t\tsecond = ((names[names.length - 1] || '')[0] || '').toUpperCase();\n\t\t}\n\t}\n\n\tconst color = BaseColors24[(first.charCodeAt(0) + (second || ' ').charCodeAt(0)) % BaseColors24.length];\n\n\treturn <User color={color} single-character={!second}\n\t             onMouseEnter={mouseEnter} onMouseLeave={mouseLeave}\n\t             ref={containerRef}>\n\t\t<span>{first}</span>\n\t\t<span>{second}</span>\n\t</User>;\n};","import dayjs from \"dayjs\";\nimport { findToken } from \"../account/account-session\";\nimport { getServiceHost, isMockService } from \"../service_utils\";\nimport { ConsoleDashboard } from \"./types\";\n\nexport const fetchDashboards = async (): Promise<Array<ConsoleDashboard>> => {\n\tif (isMockService()) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tdashboardId: \"1\",\n\t\t\t\tname: \"Sales Statistics\",\n\t\t\t\tlastVisitTime: \"2020/10/20 09:36:46\",\n\t\t\t\tgraphics: [],\n\t\t\t},\n\t\t];\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}dashboard/me`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t\t// body: JSON.stringify(subject),\n\t\t});\n\n\t\tconst result = await response.json();\n\t\treturn result;\n\t}\n};\n\nlet newDashboardId = 10000;\n\nexport const createDashboard = async (name: string): Promise<ConsoleDashboard> => {\n\tif (isMockService()) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve({\n\t\t\t\t\tdashboardId: `${newDashboardId++}`,\n\t\t\t\t\tname,\n\t\t\t\t\tlastVisitTime: dayjs().format(\"YYYY-MM-DD HH:mm:ss\"),\n\t\t\t\t\tcurrent: true,\n\t\t\t\t\tgraphics: [],\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t});\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}dashboard/create?name=${name}`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t\t// body: JSON.stringify(subject),\n\t\t});\n\n\t\tconst result = await response.json();\n\t\treturn result;\n\t}\n};\n\nexport const saveDashboard = async (dashboard: ConsoleDashboard): Promise<void> => {\n\tif (isMockService()) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => resolve(), 500);\n\t\t});\n\t} else {\n\t\tconst token = findToken();\n\t\tconst response = await fetch(`${getServiceHost()}dashboard/save`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(dashboard),\n\t\t});\n\n\t\tconst result = await response.json();\n\t\treturn result;\n\t}\n};\n\nexport const renameDashboard = async (dashboardId: string, name: string): Promise<void> => {\n\tif (isMockService()) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => resolve(), 500);\n\t\t});\n\t} else {\n\t\tconst token = findToken();\n\t\tawait fetch(`${getServiceHost()}dashboard/rename?dashboard_id=${dashboardId}&name=${name}`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t});\n\n\t\t// const result = await response.json();\n\t\t// return result;\n\t}\n};\n\nexport const deleteDashboard = async (dashboardId: string): Promise<void> => {\n\tif (isMockService()) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => resolve(), 500);\n\t\t});\n\t} else {\n\t\tconst token = findToken();\n\t\tawait fetch(`${getServiceHost()}dashboard/delete?dashboard_id=${dashboardId}`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t});\n\n\t\t// const result = await response.json();\n\t\t// return result;\n\t}\n};\n","import {\n\tColumnExpressionOperator,\n\tConsoleSpace,\n\tConsoleSpaceSubjectDataSetColumn,\n\tConsoleTopic,\n\tConsoleTopicFactor\n} from '../../../../../services/console/types';\nimport {DropdownOption} from '../../../../component/dropdown';\n\nexport const CHART_MARGIN = 32;\nexport const CHART_COLUMN_GAP = 32;\nexport const INIT_TOP = CHART_MARGIN;\nexport const INIT_LEFT = CHART_MARGIN;\nexport const INIT_MIN_WIDTH = 400;\nexport const CHART_HEADER_HEIGHT = 40;\nexport const CHART_ASPECT_RATIO = 9 / 16;\nexport const CHART_MIN_HEIGHT = 200 + CHART_HEADER_HEIGHT;\nexport const CHART_MIN_WIDTH = CHART_MIN_HEIGHT / CHART_ASPECT_RATIO + CHART_HEADER_HEIGHT;\n\nexport const generateChartRect = (container: HTMLDivElement) => {\n\tconst {clientWidth} = container;\n\tconst width = Math.max(INIT_MIN_WIDTH, (clientWidth - CHART_MARGIN * 2 - CHART_COLUMN_GAP * 2) / 3);\n\tconst height = width * CHART_ASPECT_RATIO + CHART_HEADER_HEIGHT;\n\treturn {top: INIT_TOP, left: INIT_LEFT, width, height, max: false};\n};\n\nexport const transformColumnToDropdownValue = (column: ConsoleSpaceSubjectDataSetColumn) => {\n\treturn `${column.topicId || ''}-${column.factorId || ''}-${column.operator || ''}-${column.secondaryTopicId || ''}-${column.secondaryFactorId || ''}`;\n};\n\nexport const transformColumnsToDropdownOptions = (space: ConsoleSpace, columns: Array<ConsoleSpaceSubjectDataSetColumn>) => {\n\treturn columns.map(column => {\n\t\t// eslint-disable-next-line\n\t\tconst topic = space.topics.find(topic => topic.topicId == column.topicId);\n\t\tif (!topic) {\n\t\t\t// topic not found, ignored.\n\t\t\treturn null;\n\t\t}\n\t\t// eslint-disable-next-line\n\t\tconst factor = topic.factors.find(factor => factor.factorId == column.factorId);\n\t\tif (!factor) {\n\t\t\t// factor not found, ignored.\n\t\t\treturn null;\n\t\t}\n\n\t\tconst operator = column.operator;\n\t\tlet secondaryTopic: ConsoleTopic | { topicId: undefined } | undefined = {topicId: (void 0)};\n\t\tlet secondaryFactor: ConsoleTopicFactor | { factorId: undefined } | undefined = {factorId: (void 0)};\n\t\tif (!!operator && operator !== ColumnExpressionOperator.NONE) {\n\t\t\t// eslint-disable-next-line\n\t\t\tsecondaryTopic = space.topics.find(topic => topic.topicId == column.secondaryTopicId);\n\t\t\tif (!secondaryTopic) {\n\t\t\t\t// has operator, but no secondary topic, ignored.\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// eslint-disable-next-line\n\t\t\tsecondaryFactor = secondaryTopic.factors.find(factor => factor.factorId == column.secondaryFactorId);\n\t\t\tif (!secondaryFactor) {\n\t\t\t\t// has operator, but no secondary factor, ignored.\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tlabel: column.alias || factor.label || factor.name,\n\t\t\tvalue: transformColumnToDropdownValue(column),\n\t\t\tcolumn\n\t\t};\n\t}).filter(x => x != null) as Array<DropdownOption & { column: ConsoleSpaceSubjectDataSetColumn }>;\n};\n","import { useState } from 'react';\nimport { ConsoleNotificationCategory } from '../../../services/console/types';\n\nexport enum Frequency {\n\tMIN_5 = '1',\n\tMIN_10 = '2',\n\tMIN_15 = '3',\n\tMIN_20 = '4',\n\tMIN_30 = '5',\n\tHOUR_1 = '6'\n}\n\nexport const FrequencyOptions = [\n\t{ value: Frequency.MIN_5, label: '5 Minutes' },\n\t{ value: Frequency.MIN_10, label: '10 Minutes' },\n\t{ value: Frequency.MIN_15, label: '15 Minutes' },\n\t{ value: Frequency.MIN_20, label: '20 Minutes' },\n\t{ value: Frequency.MIN_30, label: '30 Minutes' },\n\t{ value: Frequency.HOUR_1, label: '1 Hours' }\n];\n\nexport interface ConsoleSettingsStorage {\n\tnotificationFrequency: Frequency;\n\tnotificationSubscriptionCategories: Array<ConsoleNotificationCategory>;\n\tmailFrequency: Frequency;\n}\n\nexport interface ConsoleSettingsUsable {\n\tnotificationFrequencyChanged: (frequency: Frequency) => void;\n\tnotificationCategorySubscriptionAdded: (category: ConsoleNotificationCategory) => void;\n\tnotificationCategorySubscriptionRemoved: (category: ConsoleNotificationCategory) => void;\n\tmailFrequencyChanged: (frequency: Frequency) => void;\n}\n\nexport const useConsoleSettings = () => {\n\t// TODO simulate data for demo purpose\n\tconst [ state, setState ] = useState<ConsoleSettingsStorage>({\n\t\tnotificationFrequency: Frequency.MIN_15,\n\t\tnotificationSubscriptionCategories: Object.keys(ConsoleNotificationCategory) as Array<ConsoleNotificationCategory>,\n\t\tmailFrequency: Frequency.MIN_30\n\t});\n\n\tconst notificationFrequencyChanged = (frequency: Frequency) => {\n\t\tsetState({ ...state, notificationFrequency: frequency });\n\t};\n\tconst notificationCategorySubscriptionAdded = (category: ConsoleNotificationCategory) => {\n\t\tif (!state.notificationSubscriptionCategories.includes(category)) {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tnotificationSubscriptionCategories: [ ...state.notificationSubscriptionCategories, category ]\n\t\t\t});\n\t\t}\n\t};\n\tconst notificationCategorySubscriptionRemoved = (category: ConsoleNotificationCategory) => {\n\t\tif (state.notificationSubscriptionCategories.includes(category)) {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tnotificationSubscriptionCategories: state.notificationSubscriptionCategories.filter(c => c !== category)\n\t\t\t});\n\t\t}\n\t};\n\tconst mailFrequencyChanged = (frequency: Frequency) => {\n\t\tsetState({ ...state, mailFrequency: frequency });\n\t};\n\n\treturn {\n\t\t...state,\n\n\t\tnotificationFrequencyChanged,\n\t\tnotificationCategorySubscriptionAdded,\n\t\tnotificationCategorySubscriptionRemoved,\n\n\t\tmailFrequencyChanged\n\t};\n};","import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nexport enum ResizeHandleAlignment {\n\tLEFT, RIGHT\n}\n\ninterface HandleState {\n\ttop: number;\n\tleft: number;\n\tresizing: boolean;\n\talignment: ResizeHandleAlignment;\n}\n\nconst handleWidth = 6;\nconst Handle = styled.div.attrs<HandleState>(({ top = 0, left, resizing, alignment }) => {\n\treturn {\n\t\tstyle: {\n\t\t\ttop,\n\t\t\tleft: alignment === ResizeHandleAlignment.LEFT ? (resizing ? 0 : (left - handleWidth / 2)) : 'unset',\n\t\t\tright: alignment === ResizeHandleAlignment.RIGHT ? (resizing ? 0 : (left - handleWidth / 2)) : 'unset',\n\t\t\twidth: resizing ? '100vw' : handleWidth,\n\t\t\tpaddingLeft: resizing ? (alignment === ResizeHandleAlignment.LEFT ? (left - handleWidth / 2) : `calc(100% - ${left + handleWidth / 2}px)`) : 0\n\t\t}\n\t};\n})<HandleState>`\n\tdisplay: block;\n\tposition: fixed;\n\theight: 100vh;\n\tz-index: 500;\n\tbackground-color: transparent;\n\t&:before {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\twidth: ${handleWidth}px;\n\t\theight: 100%;\n\t\tbackground-color: var(--primary-hover-color);\n\t\topacity: 0;\n\t\ttransition: opacity 300ms ease-in-out;\n\t\tpointer-events: none;\n\t}\n\t&:hover {\n\t\t&:before {\n\t\t\tpointer-events: auto;\n\t\t\topacity: 0.3;\n\t\t}\n\t}\n`;\n\nexport const ResizeHandle = (props: {\n\ttop?: number;\n\twidth: number;\n\tonResize: (width: number) => void;\n\talignment?: ResizeHandleAlignment\n}) => {\n\tconst { top = 0, width, onResize, alignment = ResizeHandleAlignment.LEFT } = props;\n\n\tconst handleRef = useRef<HTMLDivElement>(null);\n\tconst [ resizing, setResizing ] = useState(false);\n\n\tconst canStartResize = (x: number) => Math.abs(x - width) <= 3;\n\tconst onMouseDown = ({ target, button, clientX }: React.MouseEvent) => {\n\t\tconst x = alignment === ResizeHandleAlignment.LEFT ? clientX : (window.innerWidth - clientX);\n\t\tif (button === 0 && canStartResize(x)) {\n\t\t\tsetResizing(true);\n\t\t\tconst onResizeEnd = (event: Event) => {\n\t\t\t\tconst { target } = event;\n\t\t\t\tsetResizing(false);\n\t\t\t\ttarget!.removeEventListener('mouseup', onResizeEnd);\n\t\t\t\ttarget!.removeEventListener('mouseleave', onResizeEnd);\n\t\t\t};\n\t\t\ttarget.addEventListener('mouseup', onResizeEnd);\n\t\t\ttarget.addEventListener('mouseleave', onResizeEnd);\n\t\t}\n\t};\n\tconst onMouseMove = ({ clientX }: React.MouseEvent) => {\n\t\tconst x = alignment === ResizeHandleAlignment.LEFT ? clientX : (window.innerWidth - clientX);\n\t\tif (!resizing) {\n\t\t\tif (canStartResize(x)) {\n\t\t\t\thandleRef.current!.style.cursor = 'col-resize';\n\t\t\t} else {\n\t\t\t\thandleRef.current!.style.cursor = 'default';\n\t\t\t}\n\t\t} else {\n\t\t\tonResize(x);\n\t\t}\n\t};\n\n\treturn <Handle top={top} left={width} alignment={alignment}\n\t               resizing={resizing} ref={handleRef}\n\t               onMouseDown={onMouseDown} onMouseMove={onMouseMove}/>;\n};","import {\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartDataSetGrid\n} from '../../../services/console/types';\nimport { ChartTypeDefinition, Validator } from './types';\n\ninterface IntermediateTreeNode {\n\tname: string,\n\tchildren: ConsoleSpaceSubjectChartDataSetGrid\n}\n\ninterface TreeNode {\n\tname: string;\n}\n\ninterface NonLeafTreeNode extends TreeNode {\n\tchildren: Array<TreeNode>;\n}\n\ninterface LeafTreeNode extends TreeNode {\n\tvalue: number;\n}\n\nexport const getDimensionColumnIndexOffset = (chart: ConsoleSpaceSubjectChart) => {\n\treturn chart.indicators.length;\n};\n\nexport const buildDescartesByDimensions = (chart: ConsoleSpaceSubjectChart, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\tconst { data } = dataset;\n\tconst { dimensions } = chart;\n\n\tconst columnIndexOffset = getDimensionColumnIndexOffset(chart);\n\tconst dimensionIndexes = new Array(dimensions.length).fill(1).map((v, index) => index + columnIndexOffset);\n\treturn data.map(row => {\n\t\treturn { value: dimensionIndexes.map(index => row[index]).join(','), row };\n\t});\n};\n\n/**\n * multiple roots are allowed, depends on data.\n * each branch has same depth.\n */\nexport const buildTreeData = (chart: ConsoleSpaceSubjectChart, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\tconst { dimensions } = chart;\n\tconst dimensionColumnIndexOffset = getDimensionColumnIndexOffset(chart);\n\tconst buildData = (dimensionIndex: number, grid: ConsoleSpaceSubjectChartDataSetGrid): Array<TreeNode> => {\n\t\tconst dimensionValueMap = new Map<string, number>();\n\t\treturn grid.reduce<Array<IntermediateTreeNode>>((data, row) => {\n\t\t\tconst dimensionValue = `${row[dimensionIndex + dimensionColumnIndexOffset] || ''}`;\n\t\t\tconst dimensionValueIndex = dimensionValueMap.get(dimensionValue);\n\t\t\tif (dimensionValueIndex == null) {\n\t\t\t\tdata.push({ name: dimensionValue, children: [ row ] });\n\t\t\t\tdimensionValueMap.set(dimensionValue, data.length - 1);\n\t\t\t} else {\n\t\t\t\tdata[dimensionValueIndex].children.push(row);\n\t\t\t}\n\t\t\treturn data;\n\t\t}, []).map(({ name, children }) => {\n\t\t\tif (dimensionIndex === dimensions.length - 2) {\n\t\t\t\t// non-leaf nodes done, start to process last dimension and indicator\n\t\t\t\treturn {\n\t\t\t\t\tname,\n\t\t\t\t\tchildren: children.map(row => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: `${row[dimensionIndex + 1 + dimensionColumnIndexOffset]}`,\n\t\t\t\t\t\t\tvalue: row[0]\n\t\t\t\t\t\t} as LeafTreeNode;\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (children.length === 1) {\n\t\t\t\t// only one data row on this name, check following dimensions.\n\t\t\t\t// ignore dimensions has no practical meaning value\n\t\t\t\tconst stageNode = { name };\n\t\t\t\tlet parentNode = stageNode;\n\t\t\t\tconst row = children[0];\n\t\t\t\tfor (let followDimensionIndex = dimensionIndex + 1, dimensionCount = dimensions.length; followDimensionIndex < dimensionCount; followDimensionIndex++) {\n\t\t\t\t\tconst dimensionValue = row[followDimensionIndex + dimensionColumnIndexOffset];\n\t\t\t\t\tif (!dimensionValue) {\n\t\t\t\t\t\t// no value, ignore\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// append a new node\n\t\t\t\t\tconst node = parentNode as NonLeafTreeNode;\n\t\t\t\t\tnode.children = [ { name: `${dimensionValue}` } ];\n\t\t\t\t\tparentNode = node.children[0];\n\t\t\t\t}\n\t\t\t\t(parentNode as LeafTreeNode).value = row[0];\n\t\t\t\treturn stageNode as TreeNode;\n\t\t\t}\n\n\t\t\t// next dimension\n\t\t\treturn { name, children: buildData(dimensionIndex + 1, children) };\n\t\t});\n\t};\n\treturn buildData(0, dataset.data);\n};\n\nexport const validateIndicatorCount: Validator = (chart: ConsoleSpaceSubjectChart, def: ChartTypeDefinition) => {\n\tconst indicatorCount = chart.indicators.length;\n\tif (!chart.indicators || indicatorCount === 0) {\n\t\treturn { pass: false, error: 'No indicator defined.' };\n\t}\n\tif (def.minIndicatorCount && indicatorCount < def.minIndicatorCount) {\n\t\treturn { pass: false, error: `At least ${def.minIndicatorCount} indicators, current has ${indicatorCount}.` };\n\t}\n\tif (def.maxIndicatorCount && indicatorCount > def.maxIndicatorCount) {\n\t\treturn { pass: false, error: `At most ${def.maxIndicatorCount} indicators, current has ${indicatorCount}.` };\n\t}\n\treturn { pass: true };\n};\n\nexport const validateDimensionCount: Validator = (chart: ConsoleSpaceSubjectChart, def: ChartTypeDefinition) => {\n\tconst dimensionCount = chart.dimensions.length;\n\tif (!chart.dimensions || dimensionCount === 0) {\n\t\treturn { pass: false, error: 'No dimensions defined.' };\n\t}\n\tif (def.minDimensionCount && dimensionCount < def.minDimensionCount) {\n\t\treturn { pass: false, error: `At least ${def.minDimensionCount} dimensions, current has ${dimensionCount}.` };\n\t}\n\tif (def.maxDimensionCount && dimensionCount > def.maxDimensionCount) {\n\t\treturn { pass: false, error: `At most ${def.maxDimensionCount} dimensions, current has ${dimensionCount}.` };\n\t}\n\treturn { pass: true };\n};","import {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChartDimension,\n\tConsoleSpaceSubjectChartIndicator\n} from '../../../services/console/types';\n\nfunction findFactorInSpace(topicId: string | undefined, factorId: string | undefined, space: ConsoleSpace, where: string) {\n\tif (!topicId || !factorId) {\n\t\tthrow new Error(`Factor not defined in ${where}.`);\n\t}\n\n\t// eslint-disable-next-line\n\tconst topic = space.topics.find(topic => topic.topicId == topicId);\n\tif (!topic) {\n\t\tthrow new Error(`Topic mismatched according to ${where}.`);\n\t}\n\t// eslint-disable-next-line\n\tconst factor = topic.factors.find(factor => factor.factorId == factorId);\n\tif (!factor) {\n\t\tthrow new Error(`Factor mismatched according to ${where}.`);\n\t}\n\n\treturn factor;\n}\n\nexport const findFactorByDimension = (space: ConsoleSpace, dimension: ConsoleSpaceSubjectChartDimension) => {\n\tconst { topicId, factorId } = dimension;\n\treturn findFactorInSpace(topicId, factorId, space, 'dimension');\n};\n\nexport const findFactorByIndicator = (space: ConsoleSpace, indicator: ConsoleSpaceSubjectChartIndicator) => {\n\tconst { topicId, factorId } = indicator;\n\treturn findFactorInSpace(topicId, factorId, space, 'indicator');\n};\n\nconst format = new Intl.NumberFormat(undefined, { useGrouping: false, maximumFractionDigits: 2 }).format;\nexport const formatNumber = (value: any): any => {\n\tif (typeof value === 'number') {\n\t\treturn format(value);\n\t} else {\n\t\treturn value;\n\t}\n};\n","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildDescartesByDimensions } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\nimport { findFactorByIndicator, formatNumber } from './utils';\n\nexport const BAR: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.BAR,\n\tname: 'Bar',\n\tminDimensionCount: 1,\n\tminIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\tconst { indicators } = chart;\n\n\t\tconst legends = indicators.map((indicator, indicatorIndex) => {\n\t\t\tconst factor = findFactorByIndicator(space, indicator);\n\t\t\treturn { label: factor.label || factor.name, indicator, index: indicatorIndex };\n\t\t});\n\t\tconst groups = buildDescartesByDimensions(chart, dataset);\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: { type: 'shadow' }\n\t\t\t},\n\t\t\tlegend: { data: legends.map(item => item.label) },\n\t\t\txAxis: [ {\n\t\t\t\ttype: 'category',\n\t\t\t\taxisTick: { show: false },\n\t\t\t\tdata: groups.map(({ value }) => value)\n\t\t\t} ],\n\t\t\tyAxis: [ { type: 'value' } ],\n\t\t\tseries: legends.map(({ label, index: indicatorIndex }) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: label,\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tbarGap: 0,\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tposition: 'insideTop',\n\t\t\t\t\t\tdistance: 15,\n\t\t\t\t\t\tverticalAlign: 'middle',\n\t\t\t\t\t\trotate: 0\n\t\t\t\t\t},\n\t\t\t\t\tdata: groups.map(({ row }) => formatNumber(row[indicatorIndex]))\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t}\n};\n","import { ConsoleSpaceSubjectChartType } from '../../../services/console/types';\nimport { ChartTypeDefinition } from './types';\n\nexport const COUNT: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.COUNT,\n\tname: 'Count',\n\tminDimensionCount: 0,\n\tmaxDimensionCount: 0,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 1\n};\n","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildDescartesByDimensions } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\nimport { findFactorByIndicator, formatNumber } from './utils';\n\nexport const DOUGHNUT: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.DOUGHNUT,\n\tname: 'Doughnut',\n\tminDimensionCount: 1,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\t// only one indicator allowed\n\t\tconst { indicators: [ indicator ] } = chart;\n\n\t\tconst groups = buildDescartesByDimensions(chart, dataset);\n\t\tconst factor = findFactorByIndicator(space, indicator);\n\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\tlegend: { data: groups.map(({ value }) => value) },\n\t\t\tseries: [ {\n\t\t\t\tname: factor.label || factor.name,\n\t\t\t\ttype: 'pie',\n\t\t\t\tradius: [ '30%', '70%' ],\n\t\t\t\tcenter: [ '50%', '50%' ],\n\t\t\t\tdata: groups.map(({ value, row }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: value,\n\t\t\t\t\t\tvalue: formatNumber(row[0] || 0)\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t} ]\n\t\t};\n\t}\n};","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildDescartesByDimensions } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\nimport { findFactorByIndicator, formatNumber } from './utils';\n\nexport const LINE: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.LINE,\n\tname: 'Line',\n\tminDimensionCount: 1,\n\tminIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\tconst { indicators } = chart;\n\n\t\tconst legends = indicators.map((indicator, indicatorIndex) => {\n\t\t\tconst factor = findFactorByIndicator(space, indicator);\n\t\t\treturn { label: factor.label || factor.name, indicator, index: indicatorIndex };\n\t\t});\n\t\tconst groups = buildDescartesByDimensions(chart, dataset);\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: { type: 'shadow' }\n\t\t\t},\n\t\t\tlegend: { data: legends.map(item => item.label) },\n\t\t\txAxis: [ {\n\t\t\t\ttype: 'category',\n\t\t\t\taxisTick: { show: false },\n\t\t\t\tdata: groups.map(({ value }) => value)\n\t\t\t} ],\n\t\t\tyAxis: [ { type: 'value' } ],\n\t\t\tseries: legends.map(({ label, index: indicatorIndex }) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: label,\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tbarGap: 0,\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tposition: 'insideTop',\n\t\t\t\t\t\tdistance: 15,\n\t\t\t\t\t\tverticalAlign: 'middle',\n\t\t\t\t\t\trotate: 0\n\t\t\t\t\t},\n\t\t\t\t\tdata: groups.map(({ row }) => formatNumber(row[indicatorIndex]))\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t}\n};\n","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildDescartesByDimensions } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\nimport { findFactorByIndicator, formatNumber } from './utils';\n\nexport const NIGHTINGALE: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.NIGHTINGALE,\n\tname: 'Nightingale',\n\tminDimensionCount: 1,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\t// only one indicator allowed\n\t\tconst { indicators: [ indicator ] } = chart;\n\n\t\tconst groups = buildDescartesByDimensions(chart, dataset);\n\t\tconst factor = findFactorByIndicator(space, indicator);\n\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\tlegend: { data: groups.map(({ value }) => value) },\n\t\t\tseries: [ {\n\t\t\t\tname: factor.label || factor.name,\n\t\t\t\ttype: 'pie',\n\t\t\t\troseType: 'area',\n\t\t\t\tcenter: [ '50%', '50%' ],\n\t\t\t\tdata: groups.map(({ value, row }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: value,\n\t\t\t\t\t\tvalue: formatNumber(row[0] || 0)\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t} ]\n\t\t};\n\t}\n};","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildDescartesByDimensions } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\nimport { findFactorByIndicator, formatNumber } from './utils';\n\n\nexport const PIE: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.PIE,\n\tname: 'Pie',\n\tminDimensionCount: 1,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\t// only one indicator allowed\n\t\tconst { indicators: [ indicator ] } = chart;\n\n\t\tconst groups = buildDescartesByDimensions(chart, dataset);\n\t\tconst factor = findFactorByIndicator(space, indicator);\n\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\tlegend: { data: groups.map(({ value }) => value) },\n\t\t\tseries: [ {\n\t\t\t\tname: factor.label || factor.name,\n\t\t\t\ttype: 'pie',\n\t\t\t\tcenter: [ '50%', '50%' ],\n\t\t\t\tdata: groups.map(({ value, row }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: value,\n\t\t\t\t\t\tvalue: formatNumber(row[0] || 0)\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t} ]\n\t\t};\n\t}\n};","import { EChartOption } from 'echarts';\nimport { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartDataSetRow,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { getDimensionColumnIndexOffset } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\nimport { findFactorByDimension, findFactorByIndicator } from './utils';\n\ninterface Legend {\n\tname: string;\n\trows: Array<ConsoleSpaceSubjectChartDataSetRow>\n}\n\nconst buildLegends = (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\tconst { dimensions } = chart;\n\n\tconst dimensionColumnIndexOffset = getDimensionColumnIndexOffset(chart);\n\n\tif (dimensions.length === 1) {\n\t\t// only one dimension, use as xAxis. legend is not needed.\n\t\t// still build as legend for later logic\n\t\tconst factor = findFactorByDimension(space, dimensions[0]);\n\t\treturn [ {\n\t\t\tname: factor.label || factor.name,\n\t\t\trows: dataset.data\n\t\t} ];\n\t} else {\n\t\t// multiple dimensions, first as legends, second as xAxis\n\t\tconst legendMap = new Map<string, number>();\n\t\treturn dataset.data.reduce<Array<Legend>>((legends, row) => {\n\t\t\t// values of first dimension as legends\n\t\t\tconst dimensionValue = `${row[dimensionColumnIndexOffset]}`;\n\t\t\tconst legendIndex = legendMap.get(dimensionValue);\n\t\t\tif (legendIndex == null) {\n\t\t\t\tlegends.push({ name: dimensionValue, rows: [ row ] });\n\t\t\t\tlegendMap.set(dimensionValue, legends.length - 1);\n\t\t\t} else {\n\t\t\t\tlegends[legendIndex].rows.push(row);\n\t\t\t}\n\t\t\treturn legends;\n\t\t}, []);\n\t}\n};\nconst findExtremum = (dataset: ConsoleSpaceSubjectChartDataSet, columnIndex: number) => {\n\treturn dataset.data.reduce((extremum, row) => {\n\t\tconst value = row[columnIndex];\n\t\tif (value > extremum.max) {\n\t\t\textremum.max = value;\n\t\t}\n\t\tif (value < extremum.min) {\n\t\t\textremum.min = value;\n\t\t}\n\t\treturn extremum;\n\t}, { max: -Infinity, min: Infinity });\n};\n\nexport const SCATTER: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.SCATTER,\n\tname: 'Scatter',\n\tminDimensionCount: 1,\n\tmaxDimensionCount: 2,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 3,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\tconst { dimensions, indicators } = chart;\n\n\t\tconst dimensionColumnIndexOffset = getDimensionColumnIndexOffset(chart);\n\t\tconst legends = buildLegends(chart, space, dataset);\n\t\t// use last dimension as xAxis\n\t\tconst xAxisFactor = findFactorByDimension(space, dimensions[dimensions.length - 1]);\n\t\tconst yAxisFactor = findFactorByIndicator(space, indicators[0]);\n\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\t// legend only available on multiple dimensions defined\n\t\t\tlegend: legends.length > 1 ? { data: legends.map(({ name }) => name) } : (void 0),\n\t\t\txAxis: {\n\t\t\t\ttype: 'category',\n\t\t\t\tname: xAxisFactor.label || xAxisFactor.name\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttype: 'value',\n\t\t\t\tname: yAxisFactor.label || yAxisFactor.name\n\t\t\t},\n\t\t\tseries: legends.map(({ name, rows }) => {\n\t\t\t\treturn {\n\t\t\t\t\tname,\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tdata: rows.map(row => {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t// value of last dimension as xAxis value\n\t\t\t\t\t\t\trow[dimensions.length - 1 + dimensionColumnIndexOffset],\n\t\t\t\t\t\t\t// value of first indicator as yAxis value\n\t\t\t\t\t\t\t// and rest values according to indicators order\n\t\t\t\t\t\t\t...indicators.map((indicator, index) => row[index])\n\t\t\t\t\t\t];\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}),\n\t\t\t// visual map only available on multiple indicators defined\n\t\t\tvisualMap: indicators.length === 1 ? (void 0) : indicators.map((indicator, index) => {\n\t\t\t\tswitch (index) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t// first indicator is used as yAxis, ignore\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t// use size to identify difference\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\t// index of per data row, first is xAxis(dimension), second is yAxis(first indicator)\n\t\t\t\t\t\t\tdimension: 2,\n\t\t\t\t\t\t\t// column index of second indicator is 1\n\t\t\t\t\t\t\t...findExtremum(dataset, 1),\n\t\t\t\t\t\t\tinRange: {\n\t\t\t\t\t\t\t\tsymbolSize: [ 10, 50 ]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t// use opacity to identify difference\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\t// index of per data row, first is xAxis(dimension), second is yAxis(first indicator)\n\t\t\t\t\t\t\tdimension: 2,\n\t\t\t\t\t\t\t// column index of third indicator is 2\n\t\t\t\t\t\t\t...findExtremum(dataset, 2),\n\t\t\t\t\t\t\tinRange: {\n\t\t\t\t\t\t\t\tcolorAlpha: [ 0.4, 1 ]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// more indicators are not supported yet\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}).filter(x => !x) as Array<EChartOption.VisualMap>\n\t\t};\n\t}\n};\n","import {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartIndicatorAggregator,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { BAR } from './chart-bar';\nimport { COUNT } from './chart-count';\nimport { DOUGHNUT } from './chart-doughnut';\nimport { LINE } from './chart-line';\nimport { NIGHTINGALE } from './chart-nightingale';\nimport { PIE } from './chart-pie';\nimport { SCATTER } from './chart-scatter';\nimport { SUNBURST } from './chart-sunburst';\nimport { TREE } from './chart-tree';\nimport { TREEMAP } from './chart-treemap';\nimport { validateDimensionCount, validateIndicatorCount } from './chart-utils';\nimport { ChartTypeDefinition, ValidationFailure, ValidationSuccess, Validator } from './types';\n\nexport const ChartTypes: Array<ChartTypeDefinition> = [ COUNT, BAR, LINE, PIE, DOUGHNUT, NIGHTINGALE, SCATTER, SUNBURST, TREE, TREEMAP ];\nexport const ChartTypeDropdownOptions = ChartTypes.map(({ name, type }) => ({ label: name, value: type }));\nexport const ChartTypeMap: Map<ConsoleSpaceSubjectChartType, ChartTypeDefinition> = ChartTypes.reduce((map, def) => {\n\tmap.set(def.type, def);\n\treturn map;\n}, new Map());\nexport const findChartTypeDefinition = (type: ConsoleSpaceSubjectChartType) => ChartTypeMap.get(type)!;\n\nexport const defendChart = (chart: ConsoleSpaceSubjectChart) => {\n\tif (!chart.type) {\n\t\tchart.type = ConsoleSpaceSubjectChartType.BAR;\n\t}\n\tif (!chart.dimensions) {\n\t\tchart.dimensions = [];\n\t}\n\tif (!chart.indicators) {\n\t\tchart.indicators = [];\n\t}\n\n\tconst def = findChartTypeDefinition(chart.type);\n\n\t// make dimensions and indicators fulfill the minimum count\n\tnew Array(Math.max((def.minDimensionCount || 1) - chart.dimensions.length, 0)).fill(1).forEach(() => chart.dimensions.push({}));\n\tnew Array(Math.max((def.minIndicatorCount || 1) - chart.indicators.length, 0)).fill(1).forEach(() => chart.indicators.push({ aggregator: ConsoleSpaceSubjectChartIndicatorAggregator.NONE }));\n\n\tconst defend = def.defend;\n\tif (defend) {\n\t\tdefend(chart, def);\n\t\treturn;\n\t}\n};\n\nexport const isDimensionCanRemove = (chart: ConsoleSpaceSubjectChart) => {\n\tconst def = findChartTypeDefinition(chart.type!);\n\tconst currentCount = chart.dimensions.length;\n\tif (currentCount <= (def.minDimensionCount || 1)) {\n\t\treturn false;\n\t}\n\n\tconst canReduceDimensions = def.canReduceDimensions;\n\treturn !canReduceDimensions || canReduceDimensions(chart, def);\n};\nexport const isDimensionCanAppend = (chart: ConsoleSpaceSubjectChart) => {\n\tconst def = findChartTypeDefinition(chart.type!);\n\tconst currentCount = chart.dimensions.length;\n\tif (def.maxDimensionCount && currentCount >= def.maxDimensionCount) {\n\t\treturn false;\n\t}\n\n\tconst canAppendDimensions = def.canAppendDimensions;\n\treturn !canAppendDimensions || canAppendDimensions(chart, def);\n};\nexport const isIndicatorCanRemove = (chart: ConsoleSpaceSubjectChart) => {\n\tconst def = findChartTypeDefinition(chart.type!);\n\tconst currentCount = chart.indicators.length;\n\tif (currentCount <= (def.minIndicatorCount || 1)) {\n\t\treturn false;\n\t}\n\tconst canReduceIndicators = def.canReduceIndicators;\n\treturn !canReduceIndicators || canReduceIndicators(chart, def);\n};\nexport const isIndicatorCanAppend = (chart: ConsoleSpaceSubjectChart) => {\n\tconst def = findChartTypeDefinition(chart.type!);\n\tconst currentCount = chart.indicators.length;\n\tif (def.maxIndicatorCount && currentCount >= def.maxIndicatorCount) {\n\t\treturn false;\n\t}\n\n\tconst canAppendIndicators = def.canAppendIndicators;\n\treturn !canAppendIndicators || canAppendIndicators(chart, def);\n};\nconst customValidate: Validator = (chart: ConsoleSpaceSubjectChart, def: ChartTypeDefinition) => {\n\tconst validate = def.validate;\n\tif (validate) {\n\t\tconst ret = validate(chart, def);\n\t\tif (ret === true) {\n\t\t\treturn { pass: true };\n\t\t} else {\n\t\t\treturn { pass: false, error: typeof ret === 'string' ? ret : '' };\n\t\t}\n\t}\n\treturn { pass: true };\n};\nexport const validate = (chart: ConsoleSpaceSubjectChart): ValidationSuccess | ValidationFailure => {\n\tif (!chart.type) {\n\t\treturn { pass: false, error: 'No chart type defined.' };\n\t}\n\n\tconst def = findChartTypeDefinition(chart.type);\n\treturn [\n\t\tvalidateDimensionCount,\n\t\tvalidateIndicatorCount,\n\t\tcustomValidate\n\t].reduce((prev: ValidationSuccess | ValidationFailure, validate) => {\n\t\tif (!prev.pass) {\n\t\t\t// previous not passed, return directly\n\t\t\treturn prev;\n\t\t} else {\n\t\t\treturn validate(chart, def);\n\t\t}\n\t}, { pass: true });\n};\nexport const buildEChartsOptions = (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\tconst def = findChartTypeDefinition(chart.type!);\n\treturn def.buildOptions && def.buildOptions(chart, space, dataset);\n};\n","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildTreeData } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\n\nexport const SUNBURST: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.SUNBURST,\n\tname: 'Sunburst',\n\tminDimensionCount: 2,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\tseries: [ {\n\t\t\t\ttype: 'sunburst',\n\t\t\t\tradius: [ '10%', '90%' ],\n\t\t\t\tdata: buildTreeData(chart, dataset)\n\t\t\t} ]\n\t\t};\n\t}\n};\n","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildTreeData } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\n\nexport const TREE: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.TREE,\n\tname: 'Tree',\n\tminDimensionCount: 2,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\tseries: [ {\n\t\t\t\ttype: 'tree',\n\t\t\t\ttop: '2%',\n\t\t\t\tleft: '2%',\n\t\t\t\tbottom: '2%',\n\t\t\t\tright: '2%',\n\t\t\t\tsymbolSize: 8,\n\t\t\t\tlabel: {\n\t\t\t\t\tposition: 'right',\n\t\t\t\t\tverticalAlign: 'middle',\n\t\t\t\t\talign: 'left'\n\t\t\t\t},\n\t\t\t\tleaves: {\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tposition: 'left',\n\t\t\t\t\t\tverticalAlign: 'middle',\n\t\t\t\t\t\talign: 'right'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\texpandAndCollapse: true,\n\t\t\t\tdata: buildTreeData(chart, dataset)\n\t\t\t} ]\n\t\t};\n\t}\n};\n","import { BaseColors24 } from '../../../charts/color-theme';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildTreeData } from './chart-utils';\nimport { ChartTypeDefinition } from './types';\n\nexport const TREEMAP: ChartTypeDefinition = {\n\ttype: ConsoleSpaceSubjectChartType.TREEMAP,\n\tname: 'Treemap',\n\tminDimensionCount: 2,\n\tminIndicatorCount: 1,\n\tmaxIndicatorCount: 1,\n\tbuildOptions: (chart: ConsoleSpaceSubjectChart, space: ConsoleSpace, dataset: ConsoleSpaceSubjectChartDataSet) => {\n\t\treturn {\n\t\t\tcolor: BaseColors24,\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\tseries: [ {\n\t\t\t\tname: chart.name,\n\t\t\t\ttype: 'treemap',\n\t\t\t\tleafDepth: 1,\n\t\t\t\tdata: buildTreeData(chart, dataset)\n\t\t\t} ]\n\t\t};\n\t}\n};\n","import { ECharts } from 'echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/custom';\nimport 'echarts/lib/chart/effectScatter';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/chart/scatter';\nimport 'echarts/lib/chart/sunburst';\nimport 'echarts/lib/chart/tree';\nimport 'echarts/lib/chart/treemap';\nimport 'echarts/lib/component/axisPointer';\nimport 'echarts/lib/component/dataZoom';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/tooltip';\nimport echarts from 'echarts/lib/echarts';\nimport React, { RefObject, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { BaseColors24 } from '../../../charts/color-theme';\nimport { fetchChartData, fetchCountChartData } from '../../../services/console/space';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubject,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDataSet,\n\tConsoleSpaceSubjectChartType\n} from '../../../services/console/types';\nimport { buildEChartsOptions, validate } from './chart-defender';\nimport { ValidationFailure, ValidationSuccess } from './types';\n\nconst ChartDiagramContainer = styled.div`\n\tdisplay         : flex;\n\tposition        : absolute;\n\talign-items     : center;\n\tjustify-content : center;\n\twidth           : 100%;\n\theight          : 100%;\n`;\nconst Error = styled.div`\n\tdisplay     : none;\n\tfont-family : var(--console-title-font-family);\n\t&[data-visible=true] {\n\t\tdisplay : block;\n\t}\n`;\nconst Chart = styled.div`\n\tflex-grow : 1;\n\theight    : 100%;\n\toverflow  : hidden;\n\t&[data-visible=false] {\n\t\tdisplay : none;\n\t}\n`;\nconst CountChart = styled.div`\n\tdisplay         : flex;\n\talign-items     : center;\n\tjustify-content : center;\n\tfont-family     : var(--console-title-font-family);\n\tcolor           : ${BaseColors24[4]};\n\twidth           : 100%;\n\theight          : 100%;\n\t&[data-visible=false] {\n\t\tdisplay : none;\n\t}\n`;\n\nconst setCountChartFontSize = (countChartRef: RefObject<HTMLDivElement>) => {\n\tif (countChartRef.current) {\n\t\tif (getComputedStyle(countChartRef.current).display !== 'none') {\n\t\t\tconst { clientHeight } = countChartRef.current;\n\t\t\tconst fontSize = Math.min(512, clientHeight / 2);\n\t\t\tcountChartRef.current.style.fontSize = `${fontSize}px`;\n\t\t}\n\t}\n};\n\nconst CountChartDiagram = (props: {\n\trootRef: RefObject<HTMLDivElement>;\n\tdata: ConsoleSpaceSubjectChartDataSet | null;\n\tvisible: boolean;\n}) => {\n\tconst { rootRef, data, visible } = props;\n\n\tconst countChartRef = useRef<HTMLDivElement>(null);\n\tuseEffect(() => {\n\t\tif (visible && rootRef.current) {\n\t\t\t// @ts-ignore\n\t\t\tconst resizeObserver = new ResizeObserver(() => {\n\t\t\t\tsetCountChartFontSize(countChartRef);\n\t\t\t});\n\t\t\tresizeObserver.observe(rootRef.current);\n\t\t\tsetCountChartFontSize(countChartRef);\n\t\t\treturn () => resizeObserver.disconnect();\n\t\t}\n\t});\n\n\tif (!visible) {\n\t\treturn null;\n\t}\n\n\t// there is only one value in row-0, column-0\n\tlet value = ((data?.data || [])[0] || [ 0 ])[0];\n\tif (typeof value === 'number') {\n\t\tvalue = value.toLocaleString();\n\t}\n\n\treturn <CountChart ref={countChartRef}>\n\t\t{value || 'No data fetched yet.'}\n\t</CountChart>;\n};\nexport const ChartDiagram = (props: {\n\tspace: ConsoleSpace;\n\tsubject: ConsoleSpaceSubject;\n\tchart: ConsoleSpaceSubjectChart;\n\tvisible: boolean;\n}) => {\n\tconst { space, subject, chart, visible } = props;\n\n\tconst rootRef = useRef<HTMLDivElement>(null);\n\tconst [ chartInstance, setChartInstance ] = useState<ECharts | null>(null);\n\tconst [ data, setData ] = useState<ConsoleSpaceSubjectChartDataSet | null>(null);\n\tconst [ validation, setValidation ] = useState<ValidationSuccess | ValidationFailure>({\n\t\tpass: false,\n\t\terror: 'Chart not prepared yet.'\n\t});\n\n\tuseEffect(() => {\n\t\tif (visible && rootRef.current) {\n\t\t\t// @ts-ignore\n\t\t\tconst resizeObserver = new ResizeObserver(() => {\n\t\t\t\tchartInstance && chartInstance.resize();\n\t\t\t});\n\t\t\tresizeObserver.observe(rootRef.current);\n\t\t\treturn () => resizeObserver.disconnect();\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tif (visible && rootRef.current) {\n\t\t\tconst ret = validate(chart);\n\t\t\tconsole.log(chart.type, ret.pass);\n\t\t\tif (!ret.pass) {\n\t\t\t\tsetValidation(ret);\n\t\t\t} else if (chart.type === ConsoleSpaceSubjectChartType.COUNT) {\n\t\t\t\t// count chart use special logic\n\t\t\t\t(async () => {\n\t\t\t\t\tconst data = await fetchCountChartData(subject.subjectId, chart.chartId!);\n\t\t\t\t\tsetChartInstance(null);\n\t\t\t\t\tsetData(data);\n\t\t\t\t\tsetValidation(ret);\n\t\t\t\t})();\n\t\t\t} else {\n\t\t\t\t(async () => {\n\t\t\t\t\tconst chartInstance = echarts.init(rootRef.current!);\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//  fetch data remotely\n\t\t\t\t\t\tconst data = await fetchChartData(subject.subjectId, chart.chartId!);\n\t\t\t\t\t\tconst options = buildEChartsOptions(chart, space, data)!;\n\t\t\t\t\t\t// console.log(options);\n\t\t\t\t\t\tchartInstance.setOption(options, true);\n\t\t\t\t\t\tsetChartInstance(chartInstance);\n\t\t\t\t\t\tsetData(data);\n\t\t\t\t\t\tsetValidation(ret);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\tsetValidation({\n\t\t\t\t\t\t\tpass: false,\n\t\t\t\t\t\t\terror: 'Unpredicted error occurred, check chart settings please.'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t}\n\t}, [ visible, space, subject.subjectId, chart, chart.type ]);\n\n\tif (!visible) {\n\t\treturn null;\n\t}\n\n\ttry {\n\t\treturn <ChartDiagramContainer>\n\t\t\t<Chart ref={rootRef} data-visible={validation.pass}>\n\t\t\t\t<CountChartDiagram rootRef={rootRef} data={data}\n\t\t\t\t                   visible={chart.type === ConsoleSpaceSubjectChartType.COUNT}/>\n\t\t\t</Chart>\n\t\t\t<Error data-visible={!validation.pass}>\n\t\t\t\t{!validation.pass && (validation.error || 'Unfinished definition.')}\n\t\t\t</Error>\n\t\t</ChartDiagramContainer>;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\treturn <ChartDiagramContainer>\n\t\t\t<Error data-visible={true}>Unpredicted error occurred, check chart settings please.</Error>\n\t\t</ChartDiagramContainer>;\n\t}\n};","import React, { useRef } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleButton = styled.div.attrs({\n\t'data-widget': 'toggle'\n})`\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\twidth: 48px;\n\theight: 22px;\n\tborder-width: 1px;\n\tborder-style: solid;\n\tborder-radius: 11px;\n\tcursor: pointer;\n\ttransition: all 300ms ease-in-out;\n\t&[data-positive=true] {\n\t\tbackground-color: var(--toggle-positive-bg-color);\n\t\tborder-color: var(--toggle-positive-border-color);\n\t}\n\t&[data-positive=false] {\n\t\tbackground-color: var(--toggle-negative-bg-color);\n\t\tborder-color: var(--toggle-negative-border-color);\n\t}\n`;\nconst Slider = styled.div`\n\tdisplay: block;\n\tposition: relative;\n\twidth: 24px;\n\theight: 18px;\n\tborder-radius: 9px;\n\ttransition: all 300ms ease-in-out;\n\t&[data-positive=true] {\n\t\tmargin-left: 21px;\n\t\tbackground-color: var(--toggle-positive-slider-color);\n\t}\n\t&[data-positive=false] {\n\t\tmargin-left: 1px;\n\t\tbackground-color: var(--toggle-negative-slider-color);\n\t}\n`;\n\nconst Toggle = (props: {\n\tvalue: boolean;\n\tonChange: (value: boolean) => void;\n}) => {\n\tconst { value, onChange } = props;\n\n\tconst toggleRef = useRef<HTMLDivElement>(null);\n\n\tconst onToggleClicked = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst { clientX } = event;\n\t\tconst { left, width } = toggleRef.current!.getBoundingClientRect();\n\t\tif (clientX - left > width / 2) {\n\t\t\t// toggle to true\n\t\t\tif (!value) {\n\t\t\t\tonChange(true);\n\t\t\t}\n\t\t} else if (value) {\n\t\t\t// toggle to false\n\t\t\tonChange(false);\n\t\t}\n\t};\n\n\treturn <ToggleButton data-positive={value} onClick={onToggleClicked}\n\t                     ref={toggleRef}>\n\t\t<Slider data-positive={value}/>\n\t</ToggleButton>;\n};\n\nexport default Toggle;","import styled from 'styled-components';\nimport { PrimaryObjectButton } from '../../../../component/object-button';\n\nexport const SettingsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: fixed;\n\ttop: 10vh;\n\tleft: 10vw;\n\twidth: 80vw;\n\theight: 80vh;\n\tborder-radius: calc(var(--border-radius) * 2);\n\tbackground-color: var(--bg-color);\n\ttransition: all 300ms ease-in-out;\n\toverflow: hidden;\n\tz-index: 100;\n\tbox-shadow: var(--console-hover-shadow);\n\t&[data-visible=false] {\n\t\tpadding-top: 0;\n\t\tpadding-bottom: 0;\n\t\ttop: 50vh;\n\t\theight: 0;\n\t\t> div:first-child {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n`;\nexport const SettingsBackdrop = styled.div`\n\tdisplay: block;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100vw;\n\theight: 100vh;\n\tz-index: -1;\n`;\nexport const SettingsHeader = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\theight: 52px;\n\tmin-height: 52px;\n\tfont-variant: petite-caps;\n\tfont-weight: var(--font-demi-bold);\n\tfont-size: 1.4em;\n\tmargin: 0 var(--margin);\n\tborder-bottom: var(--border);\n`;\nexport const SettingsBody = styled.div`\n\twidth: 100%;\n\tflex-grow: 1;\n\tdisplay: grid;\n\tgrid-template-columns: 120px 1fr 120px 1fr;\n\tgrid-auto-rows: minmax(28px, auto);\n\tgrid-column-gap: var(--margin);\n\tgrid-row-gap: calc(var(--margin) / 4);\n\talign-content: start;\n\tpadding: calc(var(--margin) / 2) var(--margin);\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\t&::-webkit-scrollbar {\n\t\tbackground-color: transparent;\n\t\twidth: 4px;\n\t}\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: transparent;\n\t\tborder-radius: 2px;\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: var(--console-favorite-color);\n\t\tborder-radius: 2px;\n\t}\n\tinput {\n\t\tfont-size: 0.8em;\n\t\tcolor: var(--console-font-color);\n\t\theight: 28px;\n\t}\n\tdiv[data-widget=dropdown] {\n\t\tfont-size: 0.8em;\n\t\tcolor: var(--console-font-color);\n\t\theight: 28px;\n\t\t> div:last-child {\n\t\t\t&::-webkit-scrollbar {\n\t\t\t\tbackground-color: transparent;\n\t\t\t\twidth: 4px;\n\t\t\t}\n\t\t\t&::-webkit-scrollbar-track {\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder-radius: 2px;\n\t\t\t}\n\t\t\t&::-webkit-scrollbar-thumb {\n\t\t\t\tbackground-color: var(--console-favorite-color);\n\t\t\t\tborder-radius: 2px;\n\t\t\t}\n\t\t}\n\t}\n\tdiv[data-widget=toggle] {\n\t\tmargin-top: 3px;\n\t\tmargin-bottom: 3px;\n\t}\n`;\nexport const SettingsRowLabel = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tfont-variant: petite-caps;\n\tfont-weight: var(--font-demi-bold);\n\tfont-size: 0.8em;\n\theight: 28px;\n`;\nexport const SettingsSegmentTitle = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\tgrid-column: span 4;\n\tfont-variant: petite-caps;\n\tfont-weight: var(--font-demi-bold);\n\tfont-size: 0.8em;\n\theight: 28px;\n\t&:after {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 55%;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\theight: 1px;\n\t\tbackground-color: var(--border-color);\n\t\topacity: 0.3;\n\t}\n\t> span {\n\t\tz-index: 1;\n\t\tbackground-color: var(--bg-color);\n\t\tpadding-right: calc(var(--margin) / 2);\n\t}\n`;\nexport const SettingsSegmentRowLabel = styled(SettingsRowLabel)`\n\tpadding-left: calc(var(--margin) / 2);\n`;\nexport const AppendButton = styled(PrimaryObjectButton)`\n\tgrid-column: span 4;\n\talign-self: center;\n\tjustify-self: end;\n`;\nexport const BottomGapper = styled.div`\n\tgrid-column: span 4;\n\theight: calc(var(--margin) / 2);\n`;\nexport const SettingsFooter = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\theight: 52px;\n\tmin-height: 52px;\n\tmargin: 0 var(--margin);\n\tborder-top: var(--border);\n`;","import React, { Fragment } from 'react';\nimport { useForceUpdate } from '../../../../../common/utils';\nimport { ConsoleSpaceSubjectChart } from '../../../../../services/console/types';\nimport Toggle from '../../../../component/toggle';\nimport { SettingsSegmentRowLabel } from './components';\n\nexport const ChartIsPredefined = (props: {\n\tchart: ConsoleSpaceSubjectChart;\n}) => {\n\tconst { chart } = props;\n\n\tconst forceUpdate = useForceUpdate();\n\n\tconst onValueChange = (value: boolean) => {\n\t\tchart.predefined = value;\n\t\tforceUpdate();\n\t};\n\n\treturn <Fragment>\n\t\t<SettingsSegmentRowLabel>Predefined:</SettingsSegmentRowLabel>\n\t\t<Toggle value={chart.predefined || false} onChange={onValueChange}/>\n\t</Fragment>;\n};","import React, { Fragment } from 'react';\nimport { isAdmin } from '../../../../../services/account/account-session';\nimport { ConsoleSpaceSubjectChart } from '../../../../../services/console/types';\nimport { ChartIsPredefined } from './chart-is-predefined';\nimport { SettingsSegmentTitle } from './components';\n\nexport const ChartSettingsAdmin = (props: {\n\tchart: ConsoleSpaceSubjectChart;\n}) => {\n\tif (!isAdmin()) {\n\t\treturn null;\n\t}\n\n\tconst { chart } = props;\n\n\treturn <Fragment>\n\t\t<SettingsSegmentTitle><span>Admin</span></SettingsSegmentTitle>\n\t\t<ChartIsPredefined chart={chart}/>\n\t</Fragment>;\n};","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment } from \"react\";\nimport styled from 'styled-components';\nimport { useForceUpdate } from '../../../../../common/utils';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubject,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDimension,\n\tConsoleSpaceSubjectDataSetColumn\n} from '../../../../../services/console/types';\nimport { LinkButton } from '../../../../component/console/link-button';\nimport Dropdown, { DropdownOption } from '../../../../component/dropdown';\nimport { isDimensionCanRemove } from '../../../chart/chart-defender';\nimport { SettingsSegmentRowLabel } from './components';\nimport { transformColumnsToDropdownOptions, transformColumnToDropdownValue } from './utils';\n\nconst DimensionEditor = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\t&[data-can-remove=true] {\n\t\t> div:first-child {\n\t\t\tborder-right: 0;\n\t\t\tborder-top-right-radius: 0;\n\t\t\tborder-bottom-right-radius: 0;\n\t\t}\n\t\t> button {\n\t\t\tborder: var(--border);\n\t\t\tborder-top-right-radius: var(--border-radius);\n\t\t\tborder-bottom-right-radius: var(--border-radius);\n\t\t\tborder-left-color: transparent;\n\t\t\t&:before {\n\t\t\t\tborder-top-left-radius: 0;\n\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t}\n\t\t\t> svg {\n\t\t\t\topacity: 0;\n\t\t\t}\n\t\t}\n\t}\n\t&:hover > button,\n\t> div:first-child:focus-within + button {\n\t\tborder-left-color: var(--border-color);\n\t\t> svg {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t> div:first-child {\n\t\tflex-grow: 1;\n\t\twidth: 0;\n\t}\n\t> button {\n\t\talign-self: stretch;\n\t\tmin-width: 32px;\n\t\tfont-size: 0.8em;\n\t\tmargin-left: -1px;\n\t\t> svg {\n\t\t\ttransform: scale(0.9);\n\t\t\ttransition: all 300ms ease-in-out;\n\t\t}\n\t}\n`;\n\nexport const ChartDimension = (props: {\n\tspace: ConsoleSpace;\n\tsubject: ConsoleSpaceSubject;\n\tchart: ConsoleSpaceSubjectChart;\n\tdimension: ConsoleSpaceSubjectChartDimension;\n\tonRemove: (dimension: ConsoleSpaceSubjectChartDimension) => void;\n}) => {\n\tconst { space, subject, chart, dimension, onRemove } = props;\n\tconst { dataset: { columns = [] } = {} } = subject;\n\tconst { dimensions } = chart;\n\n\tconst forceUpdate = useForceUpdate();\n\n\tconst onChange = async (option: DropdownOption) => {\n\t\tconst column: ConsoleSpaceSubjectDataSetColumn = (option as any).column;\n\t\tdimension.topicId = column.topicId;\n\t\tdimension.factorId = column.factorId;\n\t\tdimension.operator = column.operator;\n\t\tdimension.secondaryTopicId = column.secondaryTopicId;\n\t\tdimension.secondaryFactorId = column.secondaryFactorId;\n\t\tdimension.alias = column.alias;\n\t\tforceUpdate();\n\t};\n\tconst onDimensionRemoveClicked = () => onRemove(dimension);\n\n\tconst index = dimensions.indexOf(dimension);\n\tconst options = transformColumnsToDropdownOptions(space, columns);\n\tconst canRemove = isDimensionCanRemove(chart);\n\tconst value = transformColumnToDropdownValue(dimension);\n\n\treturn <Fragment>\n\t\t<SettingsSegmentRowLabel>{index === 0 ? 'On:' : 'And On:'}</SettingsSegmentRowLabel>\n\t\t<DimensionEditor data-can-remove={canRemove}>\n\t\t\t<Dropdown value={value} options={options} onChange={onChange}/>\n\t\t\t{canRemove\n\t\t\t\t? <LinkButton onClick={onDimensionRemoveClicked}>\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes}/>\n\t\t\t\t</LinkButton>\n\t\t\t\t: null}\n\t\t</DimensionEditor>\n\t</Fragment>;\n};","import { faLayerGroup } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment } from 'react';\nimport { v4 } from 'uuid';\nimport { useForceUpdate } from '../../../../../common/utils';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubject,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartDimension\n} from '../../../../../services/console/types';\nimport { isDimensionCanAppend } from '../../../chart/chart-defender';\nimport { ChartDimension } from './chart-dimension';\nimport { AppendButton, SettingsSegmentTitle } from './components';\n\nexport const ChartSettingsDimensions = (props: {\n\tspace: ConsoleSpace;\n\tsubject: ConsoleSpaceSubject;\n\tchart: ConsoleSpaceSubjectChart;\n}) => {\n\tconst { space, subject, chart } = props;\n\n\tconst forceUpdate = useForceUpdate();\n\n\tconst onDimensionRemove = (dimension: ConsoleSpaceSubjectChartDimension) => {\n\t\tchart.dimensions = chart.dimensions.filter(d => d !== dimension);\n\t\tforceUpdate();\n\t};\n\tconst onDimensionAddClicked = () => {\n\t\tchart.dimensions.push({});\n\t\tforceUpdate();\n\t};\n\n\tconst canAddDimension = isDimensionCanAppend(chart);\n\n\treturn <Fragment>\n\t\t<SettingsSegmentTitle><span>Dimensions</span></SettingsSegmentTitle>\n\t\t{chart.dimensions.map(dimension => {\n\t\t\treturn <ChartDimension space={space} subject={subject} chart={chart} dimension={dimension}\n\t\t\t                       onRemove={onDimensionRemove}\n\t\t\t                       key={v4()}/>;\n\t\t})}\n\t\t{canAddDimension\n\t\t\t? <AppendButton onClick={onDimensionAddClicked}>\n\t\t\t\t<FontAwesomeIcon icon={faLayerGroup}/>\n\t\t\t\t<span>Add Dimension</span>\n\t\t\t</AppendButton>\n\t\t\t: null}\n\t</Fragment>;\n};","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment } from \"react\";\nimport styled from 'styled-components';\nimport { useForceUpdate } from '../../../../../common/utils';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubject,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartIndicator,\n\tConsoleSpaceSubjectChartIndicatorAggregator,\n\tConsoleSpaceSubjectDataSetColumn,\n\tConsoleTopicFactorType\n} from '../../../../../services/console/types';\nimport { LinkButton } from '../../../../component/console/link-button';\nimport Dropdown, { DropdownOption } from '../../../../component/dropdown';\nimport { isIndicatorCanRemove } from '../../../chart/chart-defender';\nimport { SettingsSegmentRowLabel } from './components';\nimport { transformColumnsToDropdownOptions, transformColumnToDropdownValue } from './utils';\n\nconst IndicatorEditor = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\t&[data-can-remove=true] {\n\t\t> div:first-child {\n\t\t\tborder-top-right-radius: 0;\n\t\t\tborder-bottom-right-radius: 0;\n\t\t}\n\t\t> div:nth-child(2) {\n\t\t\tborder-right: 0;\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t> button {\n\t\t\tborder: var(--border);\n\t\t\tborder-top-right-radius: var(--border-radius);\n\t\t\tborder-bottom-right-radius: var(--border-radius);\n\t\t\tborder-left-color: transparent;\n\t\t\t&:before {\n\t\t\t\tborder-top-left-radius: 0;\n\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t}\n\t\t\t> svg {\n\t\t\t\topacity: 0;\n\t\t\t}\n\t\t}\n\t}\n\t&:hover > button,\n\t> div:first-child:focus-within ~ button,\n\t> div:nth-child(2):focus-within + button {\n\t\tborder-left-color: var(--border-color);\n\t\t> svg {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t&:hover > div:nth-child(2),\n\t> div:first-child:focus-within + div,\n\t> div:nth-child(2):focus-within {\n\t\tborder-left-color: var(--border-color);\n\t}\n\t> div:first-child {\n\t\tflex-grow: 1;\n\t\tborder-right: 0;\n\t\tborder-top-right-radius: 0;\n\t\tborder-bottom-right-radius: 0;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap;\n\t\twidth: 0;\n\t}\n\t> div:nth-child(2) {\n\t\tflex-grow: 0;\n\t\twidth: 0;\n\t\tmin-width: 100px;\n\t\tborder-left-color: transparent;\n\t\tborder-top-left-radius: 0;\n\t\tborder-bottom-left-radius: 0;\n\t\tmargin-left: -1px;\n\t}\n\t> button {\n\t\talign-self: stretch;\n\t\tmin-width: 32px;\n\t\tfont-size: 0.8em;\n\t\tmargin-left: -1px;\n\t\t> svg {\n\t\t\ttransform: scale(0.9);\n\t\t\ttransition: all 300ms ease-in-out;\n\t\t}\n\t}\n`;\n\nexport const ChartIndicator = (props: {\n\tspace: ConsoleSpace;\n\tsubject: ConsoleSpaceSubject;\n\tchart: ConsoleSpaceSubjectChart;\n\tindicator: ConsoleSpaceSubjectChartIndicator;\n\tonRemove: (indicator: ConsoleSpaceSubjectChartIndicator) => void;\n}) => {\n\tconst { space, subject, chart, indicator, onRemove } = props;\n\tconst { dataset: { columns = [] } = {} } = subject;\n\tconst { indicators } = chart;\n\n\tconst forceUpdate = useForceUpdate();\n\n\tconst onChange = async (option: DropdownOption) => {\n\t\tconst column: ConsoleSpaceSubjectDataSetColumn = (option as any).column;\n\t\tindicator.topicId = column.topicId;\n\t\tindicator.factorId = column.factorId;\n\t\tindicator.operator = column.operator;\n\t\tindicator.secondaryTopicId = column.secondaryTopicId;\n\t\tindicator.secondaryFactorId = column.secondaryFactorId;\n\t\tindicator.alias = column.alias;\n\t\tforceUpdate();\n\t};\n\tconst onAggregatorChange = async (option: DropdownOption) => {\n\t\tindicator.aggregator = option.value as ConsoleSpaceSubjectChartIndicatorAggregator;\n\t\tforceUpdate();\n\t};\n\tconst onIndicatorRemoveClicked = () => onRemove(indicator);\n\n\tconst index = indicators.indexOf(indicator);\n\tconst options = transformColumnsToDropdownOptions(space, columns);\n\tconst canRemove = isIndicatorCanRemove(chart);\n\tconst value = transformColumnToDropdownValue(indicator);\n\tconst aggregateOptions: Array<DropdownOption> = [\n\t\t{ label: 'As Is', value: ConsoleSpaceSubjectChartIndicatorAggregator.NONE },\n\t\t{ label: 'Count', value: ConsoleSpaceSubjectChartIndicatorAggregator.COUNT }\n\t];\n\n\tif (!!indicator.topicId && !!indicator.factorId) {\n\t\t// eslint-disable-next-line\n\t\tconst topic = space.topics.find(topic => topic.topicId == indicator.topicId);\n\t\t// eslint-disable-next-line\n\t\tconst factor = topic?.factors.find(factor => factor.factorId == indicator.factorId);\n\t\tswitch (true) {\n\t\t\tcase !factor:\n\t\t\t\tbreak;\n\t\t\tcase factor!.type === ConsoleTopicFactorType.NUMBER:\n\t\t\t\taggregateOptions.push(\n\t\t\t\t\t{ label: 'Summary', value: ConsoleSpaceSubjectChartIndicatorAggregator.SUMMARY },\n\t\t\t\t\t{ label: 'Average', value: ConsoleSpaceSubjectChartIndicatorAggregator.AVERAGE },\n\t\t\t\t\t{ label: 'Median', value: ConsoleSpaceSubjectChartIndicatorAggregator.MEDIAN },\n\t\t\t\t\t{ label: 'Minimum', value: ConsoleSpaceSubjectChartIndicatorAggregator.MINIMUM },\n\t\t\t\t\t{ label: 'Maximum', value: ConsoleSpaceSubjectChartIndicatorAggregator.MAXIMUM }\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase factor!.type === ConsoleTopicFactorType.DATETIME:\n\t\t\t\taggregateOptions.push(\n\t\t\t\t\t{ label: 'Minimum', value: ConsoleSpaceSubjectChartIndicatorAggregator.MINIMUM },\n\t\t\t\t\t{ label: 'Maximum', value: ConsoleSpaceSubjectChartIndicatorAggregator.MAXIMUM }\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t// no aggregator\n\t\t}\n\t}\n\n\tif (!aggregateOptions.some(option => option.value === indicator.aggregator)) {\n\t\tindicator.aggregator = ConsoleSpaceSubjectChartIndicatorAggregator.NONE;\n\t}\n\tconst { aggregator } = indicator;\n\n\treturn <Fragment>\n\t\t<SettingsSegmentRowLabel>{index === 0 ? 'With:' : 'And With:'}</SettingsSegmentRowLabel>\n\t\t<IndicatorEditor data-can-remove={canRemove}>\n\t\t\t<Dropdown value={value} options={options} onChange={onChange}/>\n\t\t\t<Dropdown value={aggregator} options={aggregateOptions} onChange={onAggregatorChange}/>\n\t\t\t{canRemove\n\t\t\t\t? <LinkButton onClick={onIndicatorRemoveClicked}>\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes}/>\n\t\t\t\t</LinkButton>\n\t\t\t\t: null}\n\t\t</IndicatorEditor>\n\t</Fragment>;\n};","import { faUncharted } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment } from 'react';\nimport { v4 } from 'uuid';\nimport { useForceUpdate } from '../../../../../common/utils';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubject,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartIndicator,\n\tConsoleSpaceSubjectChartIndicatorAggregator\n} from '../../../../../services/console/types';\nimport { isIndicatorCanAppend } from '../../../chart/chart-defender';\nimport { ChartIndicator } from './chart-indicator';\nimport { AppendButton, SettingsSegmentTitle } from './components';\n\nexport const ChartSettingsIndicators = (props: {\n\tspace: ConsoleSpace;\n\tsubject: ConsoleSpaceSubject;\n\tchart: ConsoleSpaceSubjectChart;\n}) => {\n\tconst { space, subject, chart } = props;\n\n\tconst forceUpdate = useForceUpdate();\n\n\tconst onIndicatorRemove = (indicator: ConsoleSpaceSubjectChartIndicator) => {\n\t\tchart.indicators = chart.indicators.filter(i => i !== indicator);\n\t\tforceUpdate();\n\t};\n\tconst onIndicatorAddClicked = () => {\n\t\tchart.indicators.push({ aggregator: ConsoleSpaceSubjectChartIndicatorAggregator.NONE });\n\t\tforceUpdate();\n\t};\n\n\tconst canAddIndicator = isIndicatorCanAppend(chart);\n\n\treturn <Fragment>\n\t\t<SettingsSegmentTitle><span>Indicators</span></SettingsSegmentTitle>\n\t\t{chart.indicators.map(indicator => {\n\t\t\treturn <ChartIndicator space={space} subject={subject} chart={chart} indicator={indicator}\n\t\t\t                       onRemove={onIndicatorRemove}\n\t\t\t                       key={v4()}/>;\n\t\t})}\n\t\t{canAddIndicator\n\t\t\t? <AppendButton onClick={onIndicatorAddClicked}>\n\t\t\t\t<FontAwesomeIcon icon={faUncharted}/>\n\t\t\t\t<span>Add Indicator</span>\n\t\t\t</AppendButton>\n\t\t\t: null}\n\t</Fragment>;\n};","import React, { Fragment, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { BaseColors24, DarkenColors24, LightColors24, LighterColors24 } from '../../../../../charts/color-theme';\nimport { useCollapseFixedThing, useForceUpdate } from '../../../../../common/utils';\nimport { ConsoleSpaceSubjectChart } from '../../../../../services/console/types';\nimport Dropdown, { DropdownOption } from '../../../../component/dropdown';\nimport { SettingsSegmentRowLabel } from './components';\n\nconst PICKER_HEIGHT = 200;\n\ninterface PickerState {\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\tvisible: boolean;\n\tcolor?: string;\n\tcolorIndex?: number;\n}\n\nenum Colors {\n\tSTANDARD = 'standard',\n\tDARK = 'dark',\n\tLIGHT = 'light',\n\tLIGHTER = 'lighter'\n}\n\nconst ColorsMap: { [key in Colors]: Array<string> } = {\n\t[Colors.STANDARD]: BaseColors24,\n\t[Colors.DARK]: DarkenColors24,\n\t[Colors.LIGHT]: LightColors24,\n\t[Colors.LIGHTER]: LighterColors24\n};\nconst CUSTOM_COLORS = 'custom';\n\nconst ColorsDropdown = styled(Dropdown)`\n\toverflow: hidden;\n\t> span {\n\t\tmargin-right: 4px;\n\t\tborder-top-right-radius: 2px;\n\t\tborder-bottom-right-radius: 2px;\n\t}\n`;\nconst ColorLabelContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\talign-items: center;\n\t> span {\n\t\tmargin-right: var(--margin);\n\t\ttext-transform: capitalize;\n\t}\n\t> div {\n\t\tdisplay: flex;\n\t\tflex-grow: 1;\n\t\talign-items: center;\n\t\tjustify-content: flex-end;\n\t\t> span {\n\t\t\tdisplay: block;\n\t\t\twidth: 16px;\n\t\t\theight: 16px;\n\t\t\t&:first-child {\n\t\t\t\tborder-top-left-radius: 2px;\n\t\t\t\tborder-bottom-left-radius: 2px;\n\t\t\t}\n\t\t\t&:last-child {\n\t\t\t\tborder-top-right-radius: 2px;\n\t\t\t\tborder-bottom-right-radius: 2px;\n\t\t\t}\n\t\t}\n\t}\n`;\nconst CustomColors = styled.div`\n\tgrid-column: span 2;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(24, minmax(20px, 1fr));\n\talign-self: center;\n\theight: 28px;\n\ttransition: all 300ms ease-in-out;\n\t&[data-visible=false] {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n`;\nconst CustomColor = styled.span.attrs<{ color?: string }>(({ color }) => {\n\treturn {\n\t\tstyle: {\n\t\t\tbackgroundColor: color || 'transparent',\n\t\t\tborderColor: color || 'var(--border-color)'\n\t\t}\n\t};\n})<{ color?: string }>`\n\tdisplay: block;\n\talign-self: center;\n\tjustify-self: end;\n\twidth: 16px;\n\theight: 16px;\n\tborder: var(--border);\n\tborder-radius: var(--border-radius);\n\tcursor: pointer;\n\t&:hover {\n\t\tbox-shadow: 0 0 8px rgba(0, 0, 0, 0.7);\n\t}\n`;\nconst ColorPicker = styled.div.attrs<PickerState>(({ top, left, width, visible }) => {\n\treturn {\n\t\tstyle: {\n\t\t\ttop, left, width,\n\t\t\topacity: visible ? 1 : 0,\n\t\t\tpointerEvents: visible ? 'auto' : 'none'\n\t\t}\n\t};\n})<PickerState>`\n\tdisplay: grid;\n\tgrid-template-columns: 50% 1fr;\n\tgrid-column-gap: var(--margin);\n\tposition: fixed;\n\tbackground-color: var(--bg-color);\n\tborder: var(--border);\n\tborder-radius: var(--border-radius);\n\tpadding: calc(var(--margin) / 4);\n\theight: ${PICKER_HEIGHT}px;\n\tz-index: 100;\n\ttransition: opacity 300ms ease-in-out;\n`;\n\nconst ColorLabel = (props: { type: Colors }) => {\n\tconst { type } = props;\n\n\treturn <ColorLabelContainer>\n\t\t<span>{type}</span>\n\t\t<div>\n\t\t\t{ColorsMap[type].map((color, index) => {\n\t\t\t\treturn <span style={{ backgroundColor: color }} key={`${color}-${index}`}/>;\n\t\t\t})}\n\t\t</div>\n\t</ColorLabelContainer>;\n};\n\nexport const ChartColors = (props: {\n\tchart: ConsoleSpaceSubjectChart;\n}) => {\n\tconst { chart } = props;\n\n\tconst customColorsRef = useRef<HTMLDivElement>(null);\n\tconst pickerRef = useRef<HTMLDivElement>(null);\n\tconst [ pickerState, setPickerState ] = useState<PickerState>({ top: 0, left: 0, width: 0, visible: false });\n\tconst forceUpdate = useForceUpdate();\n\tuseCollapseFixedThing(pickerRef, () => setPickerState({ ...pickerState, visible: false }));\n\n\tconst onColorsChange = async (option: DropdownOption) => {\n\t\tif (option.value === CUSTOM_COLORS) {\n\t\t\tchart.colors = [ '#ff0000', '#00ff00', '#0000ff' ];\n\t\t} else {\n\t\t\tchart.colors = option.value as string;\n\t\t}\n\t\tforceUpdate();\n\t};\n\tconst onColorClicked = (index: number) => (event: React.MouseEvent<HTMLSpanElement>) => {\n\t\tconst { top } = (event.target as HTMLSpanElement).getBoundingClientRect();\n\t\tconst { left: containerLeft, width } = customColorsRef.current!.getBoundingClientRect();\n\t\tconst { left: firstLeft } = (customColorsRef.current!.querySelector('span:first-child'))!.getBoundingClientRect();\n\t\tconsole.log((chart.colors || [])[index]);\n\t\tsetPickerState({\n\t\t\ttop: top - PICKER_HEIGHT - 6,\n\t\t\tleft: firstLeft,\n\t\t\twidth: width - (firstLeft - containerLeft),\n\t\t\tvisible: true,\n\t\t\tcolor: (chart.colors || [])[index],\n\t\t\tcolorIndex: index\n\t\t});\n\t};\n\n\tconst colors = [\n\t\t...Object.keys(ColorsMap).map(type => ({ value: type, label: <ColorLabel type={type as Colors}/> }))\n\t\t// { value: CUSTOM_COLORS, label: 'Custom Series' }\n\t];\n\tlet selectedColor;\n\tif (chart.colors && typeof chart.colors === 'string') {\n\t\tselectedColor = chart.colors;\n\t} else if (Array.isArray(chart.colors)) {\n\t\tselectedColor = CUSTOM_COLORS;\n\t} else {\n\t\tselectedColor = Colors.STANDARD;\n\t}\n\n\treturn <Fragment>\n\t\t<SettingsSegmentRowLabel>Color Series:</SettingsSegmentRowLabel>\n\t\t<ColorsDropdown value={selectedColor} options={colors} onChange={onColorsChange}/>\n\t\t<CustomColors data-visible={Array.isArray(chart.colors)} ref={customColorsRef}>\n\t\t\t{new Array(24).fill(1).map((x, index) => {\n\t\t\t\treturn <CustomColor key={index} color={(chart.colors || [])[index]}\n\t\t\t\t                    onClick={onColorClicked(index)}/>;\n\t\t\t})}\n\t\t\t<ColorPicker {...pickerState} ref={pickerRef}>\n\t\t\t</ColorPicker>\n\t\t</CustomColors>\n\t</Fragment>;\n};","import { faCog, faCompressArrowsAlt, faExpandArrowsAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, RefObject, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useForceUpdate } from '../../../../../common/utils';\nimport { ConsoleSpace, ConsoleSpaceSubject, ConsoleSpaceSubjectChart } from '../../../../../services/console/types';\nimport Button, { ButtonType } from '../../../../component/button';\nimport { LinkButton } from '../../../../component/console/link-button';\nimport { useDialog } from '../../../../context/dialog';\nimport { ChartDiagram } from '../../../chart/chart-diagram';\nimport { useSubjectContext } from '../context';\nimport { ChartSettingsPanel } from './chart-settings-panel';\nimport { ChartRect } from './types';\nimport { CHART_MIN_HEIGHT, CHART_MIN_WIDTH, generateChartRect } from './utils';\n\nenum DragType {\n\tNONE = 'none',\n\tDND = 'drag-drop',\n\tRESIZE_TOP = 'resize-top',\n\tRESIZE_LEFT = 'resize-left',\n\tRESIZE_RIGHT = 'resize-right',\n\tRESIZE_BOTTOM = 'resize-bottom',\n\tRESIZE_TOP_LEFT = 'resize-top-left',\n\tRESIZE_TOP_RIGHT = 'resize-top-right',\n\tRESIZE_BOTTOM_LEFT = 'resize-bottom-left',\n\tRESIZE_BOTTOM_RIGHT = 'resize-bottom-right'\n}\n\ninterface DragState {\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\ttype: DragType;\n\tstartX: number;\n\tstartY: number;\n}\n\nconst ChartContainer = styled.div\n\t.attrs<{ 'data-max': boolean, rect: ChartRect | null, relative: boolean }>(\n\t\t({ 'data-max': max, rect, relative }\n\t\t) => {\n\t\t\treturn {\n\t\t\t\t'data-widget': 'console-subject-view-chart',\n\t\t\t\tstyle: {\n\t\t\t\t\tposition: max ? 'fixed' : (relative ? 'relative' : 'absolute'),\n\t\t\t\t\ttop: (relative && !max) ? (void 0) : rect?.top,\n\t\t\t\t\tleft: (relative && !max) ? (void 0) : rect?.left,\n\t\t\t\t\twidth: (relative && !max) ? (void 0) : rect?.width,\n\t\t\t\t\theight: (relative && !max) ? (void 0) : rect?.height,\n\t\t\t\t\tborderRadius: max ? 0 : '',\n\t\t\t\t\tzIndex: max ? 2 : ''\n\t\t\t\t}\n\t\t\t};\n\t\t})<{ 'data-max': boolean, rect: ChartRect | null, relative: boolean }>`\n\tdisplay          : block;\n\tborder-radius    : var(--border-radius);\n\tborder           : var(--border);\n\tbackground-color : var(--bg-color);\n\ttransition       : all 300ms ease-in-out;\n\t&[data-max=false]:hover {\n\t\tbox-shadow : var(--console-hover-shadow);\n\t}\n`;\nconst ChartDragHandle = styled.div`\n\tdisplay        : flex;\n\tflex-direction : column;\n\tposition       : absolute;\n\ttop            : -3px;\n\tleft           : -3px;\n\twidth          : calc(100% + 6px);\n\theight         : calc(100% + 6px);\n`;\nconst ChartDragHandlePart = styled.div`\n\tdisplay  : block;\n\tposition : absolute;\n\t&[data-locked=true] {\n\t\tdisplay : none;\n\t}\n\t&[data-position=${DragType.RESIZE_TOP}],\n\t&[data-position=${DragType.RESIZE_BOTTOM}] {\n\t\tleft   : 6px;\n\t\twidth  : calc(100% - 12px);\n\t\tcursor : row-resize;\n\t}\n\t&[data-position=${DragType.RESIZE_LEFT}],\n\t&[data-position=${DragType.RESIZE_RIGHT}] {\n\t\ttop    : 6px;\n\t\theight : calc(100% - 12px);\n\t\tcursor : col-resize;\n\t}\n\t&[data-position^=${DragType.RESIZE_TOP}] {\n\t\ttop    : 0;\n\t\theight : 6px;\n\t}\n\t&[data-position^=${DragType.RESIZE_BOTTOM}] {\n\t\tbottom : 0;\n\t\theight : 6px;\n\t}\n\t&[data-position$=left] {\n\t\tleft  : 0;\n\t\twidth : 6px;\n\t}\n\t&[data-position$=right] {\n\t\tright : 0;\n\t\twidth : 6px;\n\t}\n\t&[data-position=${DragType.RESIZE_TOP_LEFT}] {\n\t\tcursor : nw-resize;\n\t}\n\t&[data-position=${DragType.RESIZE_TOP_RIGHT}] {\n\t\tcursor : ne-resize;\n\t}\n\t&[data-position=${DragType.RESIZE_BOTTOM_RIGHT}] {\n\t\tcursor : se-resize;\n\t}\n\t&[data-position=${DragType.RESIZE_BOTTOM_LEFT}] {\n\t\tcursor : sw-resize;\n\t}\n\t&[data-part-type=dragging] {\n\t\tdisplay  : none;\n\t\tposition : fixed;\n\t\ttop      : 0;\n\t\tleft     : 0;\n\t\twidth    : 100vw;\n\t\theight   : 100vh;\n\t\t//background-color: rgba(0, 0, 0, 0.05);\n\t\tz-index  : 1000;\n\t\t&:not([data-position=${DragType.NONE}]) {\n\t\t\tdisplay : block;\n\t\t}\n\t\t&[data-position=${DragType.DND}] {\n\t\t\tcursor : move;\n\t\t}\n\t}\n`;\nconst Header = styled.div.attrs({\n\t'data-widget': 'console-subject-view-chart-header'\n})`\n\tdisplay       : flex;\n\talign-items   : center;\n\tfont-variant  : petite-caps;\n\tfont-size     : 0.8em;\n\tfont-weight   : var(--font-demi-bold);\n\theight        : 40px;\n\tmargin        : 3px 3px 0;\n\tpadding       : 0 calc(var(--margin) / 2);\n\tborder-bottom : var(--border);\n\tcursor        : move;\n\t&[data-locked=true] {\n\t\tcursor : default;\n\t}\n\t> span:first-child {\n\t\tflex-grow : 1;\n\t}\n`;\nconst HeaderButtons = styled.div.attrs({\n\t'data-widget': 'console-subject-view-chart-header-buttons'\n})`\n\tdisplay      : flex;\n\talign-items  : center;\n\tmargin-right : calc(var(--margin) / -4);\n\t&[data-visible=false] {\n\t\t> button:not(:first-child) {\n\t\t\tdisplay : none;\n\t\t}\n\t}\n\t&[data-expanded=true] {\n\t\t> button:first-child > svg {\n\t\t\ttransform : rotateZ(180deg);\n\t\t}\n\t}\n\t> button {\n\t\theight : 32px;\n\t\twidth  : 32px;\n\t\t&:first-child > svg {\n\t\t\ttransition : transform 300ms ease-in-out;\n\t\t}\n\t\t> svg {\n\t\t\tfont-size : 0.8em;\n\t\t}\n\t}\n`;\nconst Body = styled.div.attrs({\n\t'data-widget': 'console-subject-view-chart-body'\n})`\n\tflex-grow : 1;\n\tposition  : relative;\n\tmargin    : 0 3px 3px;\n`;\n\nconst resizeFromTop = (top: number, height: number, clientY: number, startY: number) => {\n\tlet newHeight: number, newTop: number;\n\tif (clientY <= startY) {\n\t\t// more height gained from top\n\t\tnewHeight = Math.max(height + startY - clientY, CHART_MIN_HEIGHT);\n\t\tnewTop = Math.max(top + clientY - startY, 0);\n\t} else if (clientY - startY <= height) {\n\t\t// reduce height, but still on top of bottom border\n\t\tnewHeight = Math.max(height - (clientY - startY), CHART_MIN_HEIGHT);\n\t\tnewTop = Math.max(top + clientY - startY, 0);\n\t} else {\n\t\t// resize from top side, mouse client Y is under original bottom border\n\t\t// which means new height is min value, so just simply move top\n\t\t// and top is current mouse client Y\n\t\tnewHeight = CHART_MIN_HEIGHT;\n\t\tnewTop = Math.max(top + clientY - startY, 0);\n\t}\n\treturn { top: newTop, height: newHeight };\n};\n\nconst resizeFromBottom = (top: number, height: number, clientY: number, startY: number) => {\n\tlet newHeight: number, newTop = top;\n\tif (startY - clientY <= 0) {\n\t\t// more height gained from bottom\n\t\tnewHeight = Math.max(height + clientY - startY, CHART_MIN_HEIGHT);\n\t} else if (startY - clientY <= height) {\n\t\t// reduce height, but still on bottom of top border\n\t\tnewHeight = Math.max(height - (startY - clientY), CHART_MIN_HEIGHT);\n\t\tif (newHeight === CHART_MIN_HEIGHT) {\n\t\t\t// start to push, not resize anymore\n\t\t\tnewTop = Math.max(top - (startY - clientY - (height - CHART_MIN_HEIGHT)), 0);\n\t\t}\n\t} else {\n\t\t// resize from bottom side, mouse client Y is above original top border\n\t\t// which means new height is min value, so just simply move top\n\t\t// and top is current mouse client Y subtract current height change\n\t\tnewHeight = CHART_MIN_HEIGHT;\n\t\tnewTop = Math.max(top - (startY - clientY - (height - CHART_MIN_HEIGHT)), 0);\n\t}\n\treturn { top: newTop, height: newHeight };\n};\n\nconst resizeFromLeft = (left: number, width: number, clientX: number, startX: number) => {\n\tlet newWidth: number, newLeft: number;\n\tif (clientX <= startX) {\n\t\t// more width gained from left\n\t\tnewWidth = Math.max(width + startX - clientX, CHART_MIN_WIDTH);\n\t\tnewLeft = Math.max(left + clientX - startX, 0);\n\t} else if (clientX - startX <= width) {\n\t\t// reduce width, but still on left of right border\n\t\tnewWidth = Math.max(width - (clientX - startX), CHART_MIN_WIDTH);\n\t\tnewLeft = Math.max(left + clientX - startX, 0);\n\t} else {\n\t\t// resize from left side, mouse client X is over original right border\n\t\t// which means new width is min value, so just simply move left\n\t\t// and left is current mouse client X\n\t\tnewWidth = CHART_MIN_WIDTH;\n\t\tnewLeft = Math.max(left + clientX - startX, 0);\n\t}\n\treturn { left: newLeft, width: newWidth };\n};\n\nconst resizeFromRight = (left: number, width: number, clientX: number, startX: number) => {\n\tlet newWidth: number, newLeft = left;\n\tif (startX - clientX <= 0) {\n\t\t// more width gained from right\n\t\tnewWidth = Math.max(width + clientX - startX, CHART_MIN_WIDTH);\n\t} else if (startX - clientX <= width) {\n\t\t// reduce width, but still on right of left border\n\t\tnewWidth = Math.max(width - (startX - clientX), CHART_MIN_WIDTH);\n\t\tif (newWidth === CHART_MIN_WIDTH) {\n\t\t\t// start to push, not resize anymore\n\t\t\tnewLeft = Math.max(left - (startX - clientX - (width - CHART_MIN_WIDTH)), 0);\n\t\t}\n\t} else {\n\t\t// resize from right side, mouse client X is over original left border\n\t\t// which means new width is min value, so just simply move left\n\t\t// and left is current mouse client X subtract current width change\n\t\tnewWidth = CHART_MIN_WIDTH;\n\t\tnewLeft = Math.max(left - (startX - clientX - (width - CHART_MIN_WIDTH)), 0);\n\t}\n\treturn { left: newLeft, width: newWidth };\n};\n\nexport const Chart = (props: {\n\tcontainerRef: RefObject<HTMLDivElement>;\n\tspace: ConsoleSpace;\n\tsubject: ConsoleSpaceSubject;\n\tchart: ConsoleSpaceSubjectChart;\n\tlocked: boolean;\n\trelative?: boolean;\n\tsettings?: boolean;\n\tonDeleteChart: (chart: ConsoleSpaceSubjectChart) => void;\n}) => {\n\tconst {\n\t\tcontainerRef,\n\t\tspace, subject, chart,\n\t\trelative = false, settings = true,\n\t\tonDeleteChart\n\t} = props;\n\t// lock me when one of relative or locked is true\n\tconst locked = props.relative || props.locked;\n\n\tconst dialog = useDialog();\n\tconst { save: saveSubject } = useSubjectContext();\n\tconst chartRef = useRef<HTMLDivElement>(null);\n\tconst headerRef = useRef<HTMLDivElement>(null);\n\tconst headerButtonsRef = useRef<HTMLDivElement>(null);\n\tconst [ max, setMax ] = useState(false);\n\tconst [ settingsVisible, setSettingsVisible ] = useState(false);\n\tconst [ dragState, setDragState ] = useState<DragState>({\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t\ttype: DragType.NONE,\n\t\tstartX: 0,\n\t\tstartY: 0\n\t});\n\tconst forceUpdate = useForceUpdate();\n\tuseEffect(() => {\n\t\t// initialize rect, defensive\n\t\tif (chart.rect) {\n\t\t\treturn;\n\t\t}\n\t\tchart.rect = generateChartRect(containerRef.current!);\n\t\tforceUpdate();\n\t});\n\tuseEffect(() => {\n\t\t// @ts-ignore\n\t\tconst resizeObserver = new ResizeObserver(() => {\n\t\t\tif (!containerRef.current || !chartRef.current || !max) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst chartContainer = chartRef.current;\n\t\t\tconst {\n\t\t\t\ttop: currentTop,\n\t\t\t\tleft: currentLeft,\n\t\t\t\twidth: currentWidth,\n\t\t\t\theight: currentHeight\n\t\t\t} = chartContainer.getBoundingClientRect();\n\t\t\tconst { top, left, width, height } = maxChart();\n\t\t\t// console.log(top, left, width, height);\n\t\t\t// console.log(currentTop, currentLeft, currentWidth, currentHeight);\n\t\t\tif (top === currentTop && left === currentLeft && width === currentWidth && height === currentHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tforceUpdate();\n\t\t});\n\t\tresizeObserver.observe(containerRef.current);\n\t\treturn () => resizeObserver.disconnect();\n\t});\n\n\tif (!chart.rect) {\n\t\treturn null;\n\t}\n\n\tconst maxChart = () => {\n\t\tconst { top, left } = containerRef.current!.getBoundingClientRect();\n\t\tconst { offsetWidth, offsetHeight } = containerRef.current!;\n\t\treturn {\n\t\t\ttop: top - 1,\n\t\t\tleft: left - 1,\n\t\t\twidth: offsetWidth + 2,\n\t\t\theight: offsetHeight + 2\n\t\t};\n\t};\n\n\tconst onMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tif (max || locked || !chartRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\t// start dnd\n\t\tconst { clientX, clientY } = event;\n\t\tconst top = parseFloat(chartRef.current.style.top);\n\t\tconst left = parseFloat(chartRef.current.style.left);\n\t\tconst width = parseFloat(chartRef.current.style.width);\n\t\tconst height = parseFloat(chartRef.current.style.height);\n\t\tconst target = event.target as HTMLElement;\n\t\tconst position = target.getAttribute('data-position');\n\t\tif (position) {\n\t\t\t// sides and corners\n\t\t\tchartRef.current.style.transition = 'none';\n\t\t\tchartRef.current.style.boxShadow = 'var(--console-primary-hover-shadow)';\n\t\t\tsetDragState({ top, left, width, height, type: position as DragType, startX: clientX, startY: clientY });\n\t\t} else if (headerRef.current?.contains(target) && !headerButtonsRef.current?.contains(target)) {\n\t\t\t// in header, but not in header buttons\n\t\t\tchartRef.current.style.transition = 'none';\n\t\t\tchartRef.current.style.boxShadow = 'var(--console-primary-hover-shadow)';\n\t\t\tsetDragState({ top, left, width, height, type: DragType.DND, startX: clientX, startY: clientY });\n\t\t}\n\t};\n\tconst releaseDraggingIfCan = () => {\n\t\tif (dragState.type !== DragType.NONE) {\n\t\t\t// end dnd\n\t\t\tif (chartRef.current) {\n\t\t\t\tconst chartContainer = chartRef.current;\n\t\t\t\tchartContainer.style.transition = '';\n\t\t\t\tchartContainer.style.boxShadow = '';\n\t\t\t\tconst { width, height } = chartContainer.getBoundingClientRect();\n\t\t\t\tchart.rect = {\n\t\t\t\t\ttop: parseInt(chartContainer.style.top),\n\t\t\t\t\tleft: parseInt(chartContainer.style.left),\n\t\t\t\t\twidth,\n\t\t\t\t\theight\n\t\t\t\t};\n\t\t\t}\n\t\t\tsetDragState({ top: 0, left: 0, width: 0, height: 0, type: DragType.NONE, startX: 0, startY: 0 });\n\t\t\twindow.getSelection()?.removeAllRanges();\n\t\t\tsaveSubject();\n\t\t}\n\t};\n\tconst onMouseUp = () => releaseDraggingIfCan();\n\tconst onMouseLeave = () => releaseDraggingIfCan();\n\tconst onMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tif (max || locked || !chartRef.current || dragState.type === DragType.NONE) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { clientX, clientY } = event;\n\t\tconst chartContainer = chartRef.current;\n\t\tconst chartStyle = chartContainer.style;\n\t\tconst { top, left, width, height, type } = dragState;\n\t\tconst { startX, startY } = dragState;\n\n\t\tswitch (type) {\n\t\t\tcase DragType.DND: {\n\t\t\t\t// console.log('top:', top, startY, clientY, top + clientY - startY, 'left:', left, startX, clientX, left + clientX - startX);\n\t\t\t\tchartStyle.top = `${Math.max(0, top + clientY - startY)}px`;\n\t\t\t\tchartStyle.left = `${Math.max(0, left + clientX - startX)}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_TOP: {\n\t\t\t\tconst { top: newTop, height: newHeight } = resizeFromTop(top, height, clientY, startY);\n\t\t\t\tchartStyle.top = `${newTop}px`;\n\t\t\t\tchartStyle.height = `${newHeight}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_BOTTOM: {\n\t\t\t\tconst { top: newTop, height: newHeight } = resizeFromBottom(top, height, clientY, startY);\n\t\t\t\tchartStyle.top = `${newTop}px`;\n\t\t\t\tchartStyle.height = `${newHeight}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_LEFT: {\n\t\t\t\tconst { left: newLeft, width: newWidth } = resizeFromLeft(left, width, clientX, startX);\n\t\t\t\tchartStyle.left = `${newLeft}px`;\n\t\t\t\tchartStyle.width = `${newWidth}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_RIGHT: {\n\t\t\t\tconst { left: newLeft, width: newWidth } = resizeFromRight(left, width, clientX, startX);\n\t\t\t\tchartStyle.left = `${newLeft}px`;\n\t\t\t\tchartStyle.width = `${newWidth}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_TOP_LEFT: {\n\t\t\t\tconst { top: newTop, height: newHeight } = resizeFromTop(top, height, clientY, startY);\n\t\t\t\tconst { left: newLeft, width: newWidth } = resizeFromLeft(left, width, clientX, startX);\n\t\t\t\tchartStyle.top = `${newTop}px`;\n\t\t\t\tchartStyle.left = `${newLeft}px`;\n\t\t\t\tchartStyle.width = `${newWidth}px`;\n\t\t\t\tchartStyle.height = `${newHeight}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_TOP_RIGHT: {\n\t\t\t\tconst { top: newTop, height: newHeight } = resizeFromTop(top, height, clientY, startY);\n\t\t\t\tconst { left: newLeft, width: newWidth } = resizeFromRight(left, width, clientX, startX);\n\t\t\t\tchartStyle.top = `${newTop}px`;\n\t\t\t\tchartStyle.left = `${newLeft}px`;\n\t\t\t\tchartStyle.width = `${newWidth}px`;\n\t\t\t\tchartStyle.height = `${newHeight}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_BOTTOM_LEFT: {\n\t\t\t\tconst { top: newTop, height: newHeight } = resizeFromBottom(top, height, clientY, startY);\n\t\t\t\tconst { left: newLeft, width: newWidth } = resizeFromLeft(left, width, clientX, startX);\n\t\t\t\tchartStyle.top = `${newTop}px`;\n\t\t\t\tchartStyle.left = `${newLeft}px`;\n\t\t\t\tchartStyle.width = `${newWidth}px`;\n\t\t\t\tchartStyle.height = `${newHeight}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DragType.RESIZE_BOTTOM_RIGHT: {\n\t\t\t\tconst { top: newTop, height: newHeight } = resizeFromBottom(top, height, clientY, startY);\n\t\t\t\tconst { left: newLeft, width: newWidth } = resizeFromRight(left, width, clientX, startX);\n\t\t\t\tchartStyle.top = `${newTop}px`;\n\t\t\t\tchartStyle.left = `${newLeft}px`;\n\t\t\t\tchartStyle.width = `${newWidth}px`;\n\t\t\t\tchartStyle.height = `${newHeight}px`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\tconst onToggleMaxClicked = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tsetMax(!max);\n\t};\n\tconst onOpenSettingsClicked = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tsetSettingsVisible(true);\n\t};\n\tconst onCloseSettings = async () => {\n\t\tawait saveSubject(true);\n\t\tsetSettingsVisible(false);\n\t};\n\tconst onDeleteConfirmClicked = () => {\n\t\tonDeleteChart(chart);\n\t\tdialog.hide();\n\t};\n\tconst onDeleteClicked = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tdialog.show(\n\t\t\t<div data-widget='dialog-console-delete'>\n\t\t\t\t<span>Are you sure to delete this chart?</span>\n\t\t\t</div>,\n\t\t\t<Fragment>\n\t\t\t\t<div style={{ flexGrow: 1 }}/>\n\t\t\t\t<Button inkType={ButtonType.PRIMARY} onClick={onDeleteConfirmClicked}>Yes</Button>\n\t\t\t\t<Button inkType={ButtonType.DEFAULT} onClick={dialog.hide}>Cancel</Button>\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n\tconst rect = max ? maxChart() : chart.rect;\n\n\treturn <ChartContainer data-max={max} rect={rect} relative={relative} ref={chartRef}>\n\t\t<ChartDragHandle onMouseDown={onMouseDown} onMouseUp={onMouseUp}\n\t\t                 onMouseMove={onMouseMove} onMouseLeave={onMouseLeave}>\n\t\t\t<Header data-position={DragType.DND} data-locked={locked} ref={headerRef}>\n\t\t\t\t<span>{chart.name || 'Noname'}</span>\n\t\t\t\t<HeaderButtons data-visible={!locked} data-expanded={max} ref={headerButtonsRef}>\n\t\t\t\t\t<LinkButton ignoreHorizontalPadding={true} tooltip={max ? 'Minimize' : 'Maximize'} center={true}\n\t\t\t\t\t            onClick={onToggleMaxClicked}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={max ? faCompressArrowsAlt : faExpandArrowsAlt}/>\n\t\t\t\t\t</LinkButton>\n\t\t\t\t\t{settings\n\t\t\t\t\t\t? <LinkButton ignoreHorizontalPadding={true} tooltip='Open Settings' center={true}\n\t\t\t\t\t\t              onClick={onOpenSettingsClicked}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCog}/>\n\t\t\t\t\t\t</LinkButton>\n\t\t\t\t\t\t: null}\n\t\t\t\t\t<LinkButton ignoreHorizontalPadding={true} tooltip='Delete Chart' center={true}\n\t\t\t\t\t            onClick={onDeleteClicked}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes}/>\n\t\t\t\t\t</LinkButton>\n\t\t\t\t</HeaderButtons>\n\t\t\t</Header>\n\t\t\t<Body>\n\t\t\t\t<ChartDiagram space={space} subject={subject} chart={chart} visible={!settingsVisible}/>\n\t\t\t\t<ChartSettingsPanel space={space} subject={subject} chart={chart} visible={!locked && settingsVisible}\n\t\t\t\t                    closeSettings={onCloseSettings}/>\n\t\t\t</Body>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_TOP} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_LEFT} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_RIGHT} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_BOTTOM} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_TOP_LEFT} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_TOP_RIGHT} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_BOTTOM_LEFT} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-position={DragType.RESIZE_BOTTOM_RIGHT} data-locked={locked}/>\n\t\t\t<ChartDragHandlePart data-part-type='dragging' data-position={dragState.type} data-locked={locked}/>\n\t\t</ChartDragHandle>\n\t</ChartContainer>;\n};","import React, { Fragment } from 'react';\nimport { ConsoleSpaceSubjectChart } from '../../../../../services/console/types';\nimport { ChartColors } from './chart-colors';\nimport { SettingsSegmentTitle } from './components';\n\nexport const ChartSettingsRender = (props: {\n\tchart: ConsoleSpaceSubjectChart;\n}) => {\n\tconst { chart } = props;\n\n\treturn <Fragment>\n\t\t<SettingsSegmentTitle><span>Render</span></SettingsSegmentTitle>\n\t\t<ChartColors chart={chart}/>\n\t</Fragment>;\n};","import { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from \"react\";\nimport { useForceUpdate } from '../../../../../common/utils';\nimport {\n\tConsoleSpace,\n\tConsoleSpaceSubject,\n\tConsoleSpaceSubjectChart,\n\tConsoleSpaceSubjectChartType\n} from '../../../../../services/console/types';\nimport Dropdown, { DropdownOption } from '../../../../component/dropdown';\nimport Input from '../../../../component/input';\nimport { DangerObjectButton } from '../../../../component/object-button';\nimport { ChartTypeDropdownOptions, defendChart } from '../../../chart/chart-defender';\nimport { ChartSettingsAdmin } from './chart-settings-admin';\nimport { ChartSettingsDimensions } from './chart-settings-dimensions';\nimport { ChartSettingsIndicators } from './chart-settings-indicators';\nimport { ChartSettingsRender } from './chart-settings-render';\nimport {\n\tBottomGapper,\n\tSettingsBackdrop,\n\tSettingsBody,\n\tSettingsContainer,\n\tSettingsFooter,\n\tSettingsHeader,\n\tSettingsRowLabel\n} from './components';\n\nexport const ChartSettingsPanel = (props: {\n\tspace: ConsoleSpace;\n\tsubject: ConsoleSpaceSubject;\n\tchart: ConsoleSpaceSubjectChart;\n\tvisible: boolean;\n\tcloseSettings: () => void;\n}) => {\n\tconst { space, subject, chart, visible, closeSettings } = props;\n\n\tconst forceUpdate = useForceUpdate();\n\n\tconst onNameChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tchart.name = event.target.value;\n\t\tforceUpdate();\n\t};\n\tconst onTypeChanged = async (option: DropdownOption) => {\n\t\tchart.type = option.value as ConsoleSpaceSubjectChartType;\n\t\tforceUpdate();\n\t};\n\tconst onSettingsCloseClicked = () => closeSettings();\n\n\tdefendChart(chart);\n\n\treturn <SettingsContainer data-visible={visible}>\n\t\t<SettingsBackdrop/>\n\t\t<SettingsHeader>\n\t\t\t<span>{chart.name || 'Noname'}</span>\n\t\t</SettingsHeader>\n\t\t<SettingsBody>\n\t\t\t<SettingsRowLabel>Name:</SettingsRowLabel>\n\t\t\t<Input value={chart.name || ''} onChange={onNameChanged}/>\n\t\t\t<SettingsRowLabel>Type:</SettingsRowLabel>\n\t\t\t<Dropdown options={ChartTypeDropdownOptions} value={chart.type} onChange={onTypeChanged}/>\n\t\t\t<ChartSettingsDimensions space={space} subject={subject} chart={chart}/>\n\t\t\t<ChartSettingsIndicators space={space} subject={subject} chart={chart}/>\n\t\t\t<ChartSettingsRender chart={chart}/>\n\t\t\t<ChartSettingsAdmin chart={chart}/>\n\t\t\t<BottomGapper/>\n\t\t</SettingsBody>\n\t\t<SettingsFooter>\n\t\t\t<DangerObjectButton onClick={onSettingsCloseClicked}>\n\t\t\t\t<FontAwesomeIcon icon={faDoorOpen}/>\n\t\t\t\t<span>Done & Close</span>\n\t\t\t</DangerObjectButton>\n\t\t</SettingsFooter>\n\t</SettingsContainer>;\n};","import { useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { Theme } from '../../../../theme/types';\n\nexport interface ConsoleMenuUsable {\n\tmenuWidth: number;\n\tsetMenuWidth: (width: number) => void;\n}\n\nexport const useConsoleMenu = (): ConsoleMenuUsable => {\n\tconst theme = useTheme();\n\tconst minWidth = (theme as Theme).consoleMenuWidth;\n\tconst [ width, setWidth ] = useState<number>(minWidth);\n\n\treturn {\n\t\tmenuWidth: width,\n\t\tsetMenuWidth: setWidth\n\t};\n};","import { EventEmitter } from \"events\";\nimport { useState } from 'react';\nimport { useForceUpdate } from '../../../common/utils';\nimport { ConsoleMessage } from '../../../services/console/types';\n\nexport type MessageEvent = string;\n\nexport interface ConsoleMessagesStorage<M extends ConsoleMessage> {\n\tinitialized: boolean;\n\tunread: Array<M>;\n\tallUnreadLoaded: boolean;\n\tread: Array<M>;\n\tallReadLoaded: boolean;\n}\n\nconst distinct = <T extends ConsoleMessage>(messages: Array<T>, exclusive: Array<T>): Array<T> => {\n\tconst ids = new Set<string>(messages.map(message => message.id));\n\tconst exclusiveIds = new Set<string>(exclusive.map(message => message.id));\n\treturn messages\n\t\t.sort((n1, n2) => n1.createDate.localeCompare(n2.createDate))\n\t\t.reverse()\n\t\t.filter(message => {\n\t\t\tif (ids.has(message.id)) {\n\t\t\t\tids.delete(message.id);\n\t\t\t\treturn !exclusiveIds.has(message.id);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n};\n\nexport interface ConsoleMessagesUsable<M extends ConsoleMessage, E extends MessageEvent> {\n\treadAll: () => void;\n\treadOne: (message: M) => void;\n\tfetchUnread: (options?: { pageSize?: number, endTime?: string }) => Promise<void>;\n\tfetchRead: (options?: { pageSize?: number, endTime?: string }) => Promise<void>;\n\tfetchLatest: () => Promise<void>;\n\ton: (event: E, listener: (...args: Array<any>) => void) => void;\n\toff: (event: E, listener: (...args: Array<any>) => void) => void;\n}\n\nexport const useMessages = <M extends ConsoleMessage, E extends MessageEvent>(options: {\n\tupdateAsRead: (messages: Array<M>) => Promise<void>;\n\tlistReadMessages: (options?: { endTime?: string; pageSize?: number; }) => Promise<{ list: Array<M>, allLoaded: boolean }>;\n\tlistUnreadMessages: (options?: { endTime?: string; pageSize?: number; }) => Promise<{ list: Array<M>, allLoaded: boolean }>;\n\tgetLatestMessages: (options?: { endTime?: string; pageSize?: number; }) => Promise<Array<M>>;\n\ttypeStr: string;\n\tlatestArrivedEvent: E\n}): ConsoleMessagesStorage<M> & ConsoleMessagesUsable<M, E> => {\n\tconst {\n\t\tupdateAsRead, listReadMessages, listUnreadMessages, getLatestMessages,\n\t\ttypeStr, latestArrivedEvent\n\t} = options;\n\n\tconst [ emitter ] = useState(new EventEmitter());\n\tconst forceUpdate = useForceUpdate();\n\tconst [ state ] = useState<ConsoleMessagesStorage<M>>({\n\t\tinitialized: false,\n\t\tunread: [],\n\t\tallUnreadLoaded: false,\n\t\tread: [],\n\t\tallReadLoaded: false\n\t});\n\tconst mergeToState = (newData: Partial<ConsoleMessagesStorage<M>>) => {\n\t\t// @ts-ignore\n\t\tObject.keys(newData).forEach(key => state[key] = newData[key]);\n\t\tforceUpdate();\n\t};\n\n\tconst readAll = async () => {\n\t\tif (state.unread.length !== 0) {\n\t\t\tconst unread = state.unread;\n\t\t\tconst read = distinct([ ...state.read, ...unread ], []);\n\t\t\tmergeToState({ unread: [], read });\n\t\t\tawait updateAsRead(unread);\n\t\t}\n\t};\n\tconst readOne = async (message: M) => {\n\t\tconst unread = state.unread.filter(n => n !== message);\n\t\tconst read = distinct([ ...state.read, message ], []);\n\t\tmergeToState({ read, unread });\n\t\tawait updateAsRead([ message ]);\n\t};\n\n\tconst fetchRead = async (options?: { pageSize?: number, endTime?: string }) => {\n\t\tconst { pageSize = 30, endTime } = options || {};\n\n\t\ttry {\n\t\t\tconst { list, allLoaded } = await listReadMessages({ pageSize, endTime });\n\t\t\tmergeToState({\n\t\t\t\tread: distinct([ ...state.read, ...list ], state.unread),\n\t\t\t\tallReadLoaded: allLoaded\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.groupCollapsed(`%cError on fetch read ${typeStr}.`, 'color:rgb(251,71,71)');\n\t\t\tconsole.error(e);\n\t\t\tconsole.groupEnd();\n\t\t}\n\t};\n\tconst fetchUnread = async (options?: { pageSize?: number, endTime?: string }) => {\n\t\tconst { pageSize = 30, endTime } = options || {};\n\n\t\ttry {\n\t\t\tconst { list, allLoaded } = await listUnreadMessages({ pageSize, endTime });\n\t\t\tmergeToState({\n\t\t\t\tunread: distinct([ ...state.unread, ...list ], state.read),\n\t\t\t\tallUnreadLoaded: allLoaded\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.groupCollapsed(`%cError on fetch unread ${typeStr}.`, 'color:rgb(251,71,71)');\n\t\t\tconsole.error(e);\n\t\t\tconsole.groupEnd();\n\t\t}\n\t};\n\tconst fetchLatest = async (initialized: boolean = true) => {\n\t\ttry {\n\t\t\tconst latest = await getLatestMessages();\n\t\t\tif (latest.length !== 0) {\n\t\t\t\tmergeToState({\n\t\t\t\t\tinitialized,\n\t\t\t\t\tunread: distinct([ ...state.unread, ...latest ], state.read)\n\t\t\t\t});\n\t\t\t\temitter.emit(latestArrivedEvent, latest[0]);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.groupCollapsed(`%cError on fetch latest ${typeStr}.`, 'color:rgb(251,71,71)');\n\t\t\tconsole.error(e);\n\t\t\tconsole.groupEnd();\n\t\t}\n\t};\n\tconst on = (event: E, listener: (...args: Array<any>) => void) => emitter.on(event, listener);\n\tconst off = (event: E, listener: (...args: Array<any>) => void) => emitter.off(event, listener);\n\n\treturn {\n\t\t...state,\n\t\treadAll,\n\t\treadOne,\n\t\tfetchRead,\n\t\tfetchUnread,\n\t\tfetchLatest,\n\t\ton,\n\t\toff\n\t};\n};","import { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { TooltipAlignment, useTooltip } from '../context/console-tooltip';\n\nconst MenuItemContainer = styled.div.attrs({\n\t'data-widget': 'menu-item-container'\n})`\n\tdisplay: flex;\n\tposition: relative;\n\tpadding: 0 calc((var(--console-menu-width) - var(--console-menu-item-icon-size)) / 2) 0 calc(var(--margin) / 4);\n\tmin-height: var(--console-menu-height);\n\talign-items: center;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: var(--console-primary-color);\n\t\t> div:last-child {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t&[data-active=true] {\n\t\t> div:first-child {\n\t\t\tcolor: var(--invert-color);\n\t\t\tbackground-color: var(--console-primary-color);\n\t\t}\n\t}\n\t> div:first-child {\n\t\tborder-radius: var(--border-radius);\n\t\theight: 32px;\n\t\tmin-height: 32px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n`;\nconst MenuItemIcon = styled(FontAwesomeIcon).attrs({\n\t'data-widget': 'menu-item-icon'\n})<{ 'icon-size'?: number }>`\n\t&[data-widget='menu-item-icon'] {\n\t\twidth: var(--console-menu-item-icon-size);\n\t\tfont-size: ${({ 'icon-size': iconSize }) => iconSize != null ? `${iconSize}em` : ''};\n\t}\n`;\nconst MenuItemLabel = styled.div`\n\tposition: relative;\n\tflex-grow: 1;\n\tmargin-left: calc((var(--console-menu-width) - 32px) / 2);\n\topacity: 0.7;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tfont-variant: petite-caps;\n`;\n\nexport const MenuItem = (props: {\n\ticon: IconProp,\n\ticonSize?: number,\n\tlabel: string\n\tshowTooltip: boolean,\n\tclassName?: string,\n\tactive?: boolean\n\tonClick?: (rect: DOMRect) => void;\n\tvisible?: boolean;\n}) => {\n\tconst { icon, iconSize, label, showTooltip, className, active, onClick, visible = true } = props;\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\n\tconst { mouseEnter, mouseLeave } = useTooltip({\n\t\tshow: showTooltip,\n\t\ttooltip: label,\n\t\tref: containerRef,\n\t\trect: () => ({ align: TooltipAlignment.LEFT, offsetX: -5 })\n\t});\n\n\tif (!visible) {\n\t\treturn null;\n\t}\n\n\tconst onClicked = () => {\n\t\tonClick && onClick(containerRef.current!.getBoundingClientRect());\n\t};\n\n\treturn <MenuItemContainer className={className} data-active={active}\n\t                          ref={containerRef}\n\t                          onMouseEnter={mouseEnter} onMouseLeave={mouseLeave}\n\t                          onClick={onClicked}>\n\t\t<div><MenuItemIcon icon={icon} icon-size={iconSize}/></div>\n\t\t<MenuItemLabel>{label}</MenuItemLabel>\n\t</MenuItemContainer>;\n};","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from '../../logo';\n\nconst LogoContainer = styled.div.attrs({ 'data-widget': 'console-logo-container' })`\n\tdisplay: flex;\n\tpadding: calc(var(--margin) / 2) calc((var(--console-menu-width) - var(--console-menu-item-icon-size)) / 2) \\\n\t\t\t calc(var(--margin) / 2) calc(var(--margin) / 4);\n\talign-items: center;\n`;\nconst TopLogo = styled(Logo)`\n\twidth: var(--console-menu-item-icon-size);\n\theight: var(--console-menu-item-icon-size);\n`;\nconst TopTitle = styled.div`\n\tfont-family: var(--console-title-font-family);\n\tfont-weight: var(--console-title-font-weight);\n\tfont-style: italic;\n\tfont-size: 1.8em;\n\tletter-spacing: 2px;\n\tfont-variant: petite-caps;\n\tmargin-left: calc((var(--console-menu-width) - var(--console-menu-item-icon-size)) / 2);\n\toverflow-x: hidden;\n\twhite-space: nowrap;\n`;\n\nexport const MenuLogo = (props: {\n\ttitle?: string;\n}) => {\n\tconst { title = 'Watchmen' } = props;\n\treturn <LogoContainer>\n\t\t<TopLogo/>\n\t\t<TopTitle>{title}</TopTitle>\n\t</LogoContainer>;\n};","import styled from 'styled-components';\n\nexport const MenuSeparator = styled.div<{ width?: number }>`\n\tmargin: 0 calc(var(--margin) / 4);\n\theight: 1px;\n\tmin-height: 1px;\n\twidth: calc(${({ width }) => `${width}px`} - var(--margin) / 2);\n\tbackground-color: var(--console-menu-separator-color);\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { ConsoleUser } from '../types';\nimport { UserAvatar } from '../user-avatar';\n\nconst UserContainer = styled.div.attrs({ 'data-widget': 'console-user-container' })`\n\tdisplay: flex;\n\tpadding: calc(var(--margin) / 2) calc((var(--console-menu-width) - var(--console-menu-item-icon-size)) / 2) \\\n\t\t\t calc(var(--margin) / 2) calc(var(--margin) / 4);\n\talign-items: center;\n`;\nconst UserName = styled.div`\n\tposition: relative;\n\tflex-grow: 1;\n\tmargin-left: calc((var(--console-menu-width) - 32px) / 2);\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tfont-variant: petite-caps;\n`;\n\nexport const MenuUser = (props: { user: ConsoleUser }) => {\n\tconst { user: { name } } = props;\n\n\treturn <UserContainer>\n\t\t<UserAvatar name={name}/>\n\t\t<UserName>{name}</UserName>\n\t</UserContainer>;\n};","import React from 'react';\nimport styled, { keyframes, useTheme } from 'styled-components';\nimport { Theme } from '../../../theme/types';\n\nconst Container = styled.div.attrs({\n\t'data-widget': 'console-horizontal-loading'\n})`\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\tjustify-content: space-around;\n\ttransition: opacity 300ms ease-in-out;\n\t&[data-visible=true] {\n\t\topacity: 1;\n\t}\n\t&[data-visible=false] {\n\t\topacity: 0;\n\t}\n`;\n\nconst createRollingAnimation = (options: { distance: number, opacity: 0.2 | 0.6 | 1 }) => {\n\tconst { distance, opacity } = options;\n\tconst opacityList: Array<number> = ({\n\t\t'1': [ 1, 0.6, 0.2, 0.6, 1, 0.6, 0.2, 0.6, 1, 0.6, 0.2, 0.6, 1 ],\n\t\t'0.6': [ 0.6, 0.2, 0.6, 1, 0.6, 0.2, 0.6, 1, 0.6, 0.2, 0.6, 1, 0.6 ],\n\t\t'0.2': [ 0.2, 0.6, 1, 0.6, 0.2, 0.6, 1, 0.6, 0.2, 0.6, 1, 0.6, 0.2 ]\n\t} as any)[`${opacity}`] || [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];\n\treturn keyframes`${new Array(13).fill(1).map((v, index, array) => {\n\t\tlet marginLeft = 0;\n\t\tlet rotateY = 0;\n\t\tlet opacity = opacityList[index];\n\t\tswitch (true) {\n\t\t\tcase index === 0 || index === 12:\n\t\t\t\tmarginLeft = 0 - distance;\n\t\t\t\trotateY = 0;\n\t\t\t\tbreak;\n\t\t\tcase index === 1 || index === 11:\n\t\t\t\tmarginLeft = 0 - distance / 3 * 2;\n\t\t\t\trotateY = 180;\n\t\t\t\tbreak;\n\t\t\tcase index === 2 || index === 10:\n\t\t\t\tmarginLeft = 0 - distance / 3;\n\t\t\t\trotateY = 360;\n\t\t\t\tbreak;\n\t\t\tcase index === 3 || index === 9:\n\t\t\t\tmarginLeft = 0;\n\t\t\t\trotateY = 540;\n\t\t\t\tbreak;\n\t\t\tcase index === 4 || index === 8:\n\t\t\t\tmarginLeft = distance / 3;\n\t\t\t\trotateY = 720;\n\t\t\t\tbreak;\n\t\t\tcase index === 5 || index === 7:\n\t\t\t\tmarginLeft = distance / 3 * 2;\n\t\t\t\trotateY = 900;\n\t\t\t\tbreak;\n\t\t\tcase index === 6:\n\t\t\t\tmarginLeft = distance;\n\t\t\t\trotateY = 1080;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn `\n\t\t\t\t${index / (array.length - 1) * 100}% {\n\t\t\t\t\ttransform: rotateY(${rotateY}deg);\n\t\t\t\t\tmargin-left: ${marginLeft}px;\n\t\t\t\t\topacity: ${opacity};\n\t\t\t\t}\n\t\t\t`;\n\t}).join('')}`;\n};\nconst HorizontalCircle = styled.div<{ width: number, opacity: 0.2 | 0.6 | 1, distance: number }>`\n\tdisplay: block;\n\tposition: absolute;\n\tborder-radius: 100%;\n\tbackground-color: var(--primary-color);\n\topacity: ${({ opacity }) => opacity};\n\tleft: calc(50% - ${({ width }) => width / 2}px);\n\twidth: ${({ width }) => width}px;\n\theight: ${({ width }) => width}px;\n\tuser-select: none;\n\tpointer-events: none;\n\tanimation: ${({ distance, opacity }) => createRollingAnimation({ distance, opacity })} 6s linear infinite;\n`;\n\nexport const HorizontalLoading = (props: { className?: string, visible: boolean }) => {\n\tconst { className, visible } = props;\n\n\treturn <Container className={className} data-visible={visible}>\n\t\t<HorizontalCircle width={12} opacity={1} distance={80}/>\n\t\t<HorizontalCircle width={16} opacity={0.6} distance={70}/>\n\t\t<HorizontalCircle width={20} opacity={0.2} distance={60}/>\n\t</Container>;\n};\n\nconst BlendSmall = keyframes`\n\tfrom {\n\t\ttransform: translateX(0);\n\t}\n\tto {\n\t\ttransform: translateX(160px);\n\t}\n`;\nconst BlendMiddle = keyframes`\n\tfrom {\n\t\ttransform: translateX(0);\n\t}\n\tto {\n\t\ttransform: translateX(120px);\n\t}\n`;\nconst BlendLarge = keyframes`\n\tfrom {\n\t\ttransform: translateX(0);\n\t}\n\tto {\n\t\ttransform: translateX(80px);\n\t}\n`;\n\nconst BlendCircle = styled.div.attrs<{ left: number | string, size: number, color: string }>(({\n\t                                                                                              left,\n\t                                                                                              size,\n\t                                                                                              color\n                                                                                              }) => {\n\treturn {\n\t\tstyle: {\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\tmarginTop: 20 - size,\n\t\t\tleft,\n\t\t\tbackgroundColor: color\n\t\t}\n\t};\n})<{ left: number | string, size: number, color: string }>`\n\tdisplay: block;\n\tposition: absolute;\n\tborder-radius: 50%;\n\t&[data-small] {\n\t\tanimation: ${BlendSmall} 5s infinite alternate;\n\t}\n\t&[data-middle] {\n\t\tanimation: ${BlendMiddle} 5s infinite alternate;\n\t}\n\t&[data-large] {\n\t\tanimation: ${BlendLarge} 5s infinite alternate;\n\t}\n`;\nexport const BlendLoading = (props: { className?: string, visible: boolean }) => {\n\tconst { className, visible } = props;\n\tconst theme = useTheme() as Theme;\n\n\treturn <Container className={className} data-visible={visible} style={{ filter: 'blur(2px) contrast(10)' }}>\n\t\t<BlendCircle left='calc(50% - 40px)' size={20} color={theme.successColor} data-large/>\n\t\t<BlendCircle left='calc(50% - 60px)' size={16} color={theme.dangerColor} data-middle/>\n\t\t<BlendCircle left='calc(50% - 80px)' size={12} color={theme.primaryColor} data-small/>\n\t</Container>;\n};","import { useEffect } from 'react';\nimport {\n\tgetLatestNotifications,\n\tlistReadNotifications,\n\tlistUnreadNotifications,\n\tupdateNotificationsAsRead\n} from '../../../services/console/notification';\nimport { ConsoleNotification } from '../../../services/console/types';\nimport { ConsoleMessagesStorage, ConsoleMessagesUsable, useMessages } from './console-messages';\n\nexport enum ConsoleNotificationEvent {\n\tLATEST_RECEIVED = 'latest-notification-received'\n}\n\nexport interface ConsoleNotificationsStorage extends ConsoleMessagesStorage<ConsoleNotification> {\n}\n\nexport interface ConsoleNotificationsUsable extends ConsoleMessagesUsable<ConsoleNotification, ConsoleNotificationEvent> {\n}\n\nexport const useConsoleNotifications = () => {\n\tconst notifications = useMessages<ConsoleNotification, ConsoleNotificationEvent>({\n\t\tupdateAsRead: updateNotificationsAsRead,\n\t\tlistReadMessages: async (options?: {\n\t\t\tendTime?: string;\n\t\t\tpageSize?: number;\n\t\t}) => {\n\t\t\tconst response = await listReadNotifications(options);\n\t\t\treturn {\n\t\t\t\tlist: response.notifications,\n\t\t\t\tallLoaded: response.allLoaded\n\t\t\t};\n\t\t},\n\t\tlistUnreadMessages: async (options?: {\n\t\t\tendTime?: string;\n\t\t\tpageSize?: number;\n\t\t}) => {\n\t\t\tconst response = await listUnreadNotifications(options);\n\t\t\treturn {\n\t\t\t\tlist: response.notifications,\n\t\t\t\tallLoaded: response.allLoaded\n\t\t\t};\n\t\t},\n\t\tgetLatestMessages: getLatestNotifications,\n\t\ttypeStr: 'notifications',\n\t\tlatestArrivedEvent: ConsoleNotificationEvent.LATEST_RECEIVED\n\t});\n\n\t// TODO simulate data for demo purpose\n\tuseEffect(() => {\n\t\tif (!notifications.initialized) {\n\t\t\tsetTimeout(async () => {\n\t\t\t\tawait notifications.fetchLatest();\n\t\t\t}, 30000);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [ notifications.initialized ]);\n\n\treturn notifications;\n};\n","import dayjs from \"dayjs\";\nimport { ConsoleNotification, ConsoleNotificationCategory, ConsoleNotifications } from \"./types\";\n\nexport interface NotificationResponse {\n\tnotifications: ConsoleNotifications;\n\tallLoaded: boolean;\n}\n\nexport const listUnreadNotifications = async (options?: {\n\tendTime?: string;\n\tpageSize?: number;\n}): Promise<NotificationResponse> => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve({\n\t\t\t\tnotifications: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"5\",\n\t\t\t\t\t\tsubject: \"Awesome report for investigating customers distribution.\",\n\t\t\t\t\t\tcategory: ConsoleNotificationCategory.REPORT_PUSHED,\n\t\t\t\t\t\tbody: \"A distribution diagram of customers of age bracket and place of residence.\",\n\t\t\t\t\t\tsender: \"Damon Lindelof\",\n\t\t\t\t\t\tcreateDate: \"2020/11/05 20:18:19\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"4\",\n\t\t\t\t\t\tsubject: \"Scatter support dynamic effect now.\",\n\t\t\t\t\t\tcategory: ConsoleNotificationCategory.CHART_TYPE_PUSHED,\n\t\t\t\t\t\tbody: \"Use dynamic effect, active your chart!\",\n\t\t\t\t\t\tsender: \"Sally Jupiter\",\n\t\t\t\t\t\tcreateDate: \"2020/11/03 09:55:09\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"3\",\n\t\t\t\t\t\tsubject: \"A big space for marketing digging.\",\n\t\t\t\t\t\tcategory: ConsoleNotificationCategory.SPACE_PUSHED,\n\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\"After 3 weeks great work, the marketing space is online now.\\nThanks to all involved in making this happen!\\nFollow us to find more...\",\n\t\t\t\t\t\tsender: \"Sally Jupiter\",\n\t\t\t\t\t\tcreateDate: \"2020/11/01 11:24:01\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"2\",\n\t\t\t\t\t\tsubject: \"Jeffrey Dean Morgan left.\",\n\t\t\t\t\t\tcategory: ConsoleNotificationCategory.GROUP_LEFT,\n\t\t\t\t\t\tbody: 'Jeffrey Dean Morgan left group \"Oklahoma\".',\n\t\t\t\t\t\tsender: \"Roy Raymond\",\n\t\t\t\t\t\tcreateDate: \"2020/10/14 15:42:00\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"1\",\n\t\t\t\t\t\tsubject: \"Hello there.\",\n\t\t\t\t\t\tcategory: ConsoleNotificationCategory.GROUP_JOINED,\n\t\t\t\t\t\tbody: 'Welcome to group \"Oklahoma\", guess which one here?',\n\t\t\t\t\t\tsender: \"Damon Lindelof\",\n\t\t\t\t\t\tcreateDate: \"2020/10/05 17:45:37\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tallLoaded: true,\n\t\t\t});\n\t\t}, 1000);\n\t});\n};\nexport const listReadNotifications = async (options?: {\n\tendTime?: string;\n\tpageSize?: number;\n}): Promise<NotificationResponse> => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve({\n\t\t\t\tnotifications: [],\n\t\t\t\tallLoaded: true,\n\t\t\t});\n\t\t}, 3000);\n\t});\n};\n\nexport const getLatestNotifications = async (options?: {\n\tendTime?: string;\n\tpageSize?: number;\n}): Promise<ConsoleNotifications> => {\n\treturn [\n\t\t{\n\t\t\tid: \"6\",\n\t\t\tsubject: \"Jeffrey Dean Morgan join us again.\",\n\t\t\tcategory: ConsoleNotificationCategory.GROUP_JOINED,\n\t\t\tbody: \"Misoperation must be prevented on system level.\",\n\t\t\tsender: \"Damon Lindelof\",\n\t\t\tcreateDate: dayjs().format(\"YYYY-MM-DD HH:mm:ss\"),\n\t\t} as ConsoleNotification,\n\t];\n};\n\nexport const updateNotificationsAsRead = async (notifications: ConsoleNotifications): Promise<void> => {\n\treturn;\n};\n","export interface ConsoleMessage {\n\tid: string;\n\tsubject: string;\n\tbody: string;\n\timage?: string;\n\tsender: string;\n\tcreateDate: string;\n}\n\nexport enum ConsoleNotificationCategory {\n\tCHART_TYPE_PUSHED = \"CHART_TYPE_PUSHED\",\n\n\tSPACE_PUSHED = \"SPACE_PUSHED\",\n\tTOPIC_PUSHED = \"TOPIC_PUSHED\",\n\tFACTOR_PUSHED = \"FACTOR_PUSHED\",\n\n\tREPORT_PUSHED = \"REPORT_PUSHED\",\n\n\tGROUP_JOINED = \"GROUP_JOINED\",\n\tGROUP_LEFT = \"GROUP_LEFT\",\n\n\tSPACE_JOINED = \"SPACE_JOINED\",\n\tSPACE_LEFT = \"SPACE_LEFT\",\n\n\tSUBSCRIBE_REPORT_CHANGED = \"SUBSCRIBE_REPORT_CHANGED\",\n\tSUBSCRIBE_REPORT_DELETED = \"SUBSCRIBE_REPORT_DELETED\",\n}\n\nexport interface ConsoleNotification extends ConsoleMessage {\n\tcategory: ConsoleNotificationCategory;\n}\n\nexport type ConsoleNotifications = Array<ConsoleNotification>;\n\nexport interface ConsoleMail extends ConsoleMessage {}\n\nexport type ConsoleMails = Array<ConsoleMail>;\n\nexport enum ConsoleTopicFactorType {\n\tSEQUENCE = \"sequence\",\n\tNUMBER = \"number\",\n\tTEXT = \"text\",\n\tDATETIME = \"datetime\",\n\tBOOLEAN = \"boolean\",\n\tENUM = \"enum\",\n}\n\nexport interface ConsoleTopicFactor {\n\tfactorId: string;\n\tname: string;\n\tlabel: string;\n\ttype: ConsoleTopicFactorType;\n\tenum?: string;\n}\n\nexport interface ConsoleTopic {\n\ttopicId: string;\n\tcode: string;\n\tname: string;\n\tfactors: Array<ConsoleTopicFactor>;\n}\n\nexport enum ConsoleTopicRelationshipType {\n\tONE_2_ONE = \"one-2-one\",\n\tONE_2_MANY = \"one-2-many\",\n\tMANY_2_ONE = \"many-2-one\",\n}\n\nexport interface ConsoleTopicRelationship {\n\trelationId: string;\n\tsourceTopicId: string;\n\tsourceFactorNames: Array<string>;\n\ttargetTopicId: string;\n\ttargetFactorNames: Array<string>;\n\ttype: ConsoleTopicRelationshipType;\n\t/** target must have data on source has data when strict is true */\n\tstrictToTarget: boolean;\n\t/** source must have data on target has data when strict is true */\n\tstrictToSource: boolean;\n}\n\nexport enum ConsoleSpaceType {\n\t/** public for all authorized users */\n\tPUBLIC = \"public\",\n\t/** create by user himself/herself, base on one public space */\n\tPRIVATE = \"private\",\n}\n\nexport interface ConsoleSpace {\n\tspaceId: string;\n\tname: string;\n\ttopics: Array<ConsoleTopic>;\n\ttopicRelations?: Array<ConsoleTopicRelationship>;\n}\n\nexport interface ConsoleSpaceSubjectDataSetFilter {}\n\nexport enum FilterJointType {\n\tAND = \"and\",\n\tOR = \"or\",\n}\n\nexport interface ConsoleSpaceSubjectDataSetFilterJoint extends ConsoleSpaceSubjectDataSetFilter {\n\tjointType: FilterJointType;\n\tfilters: Array<ConsoleSpaceSubjectDataSetFilter>;\n}\n\nexport enum FilterExpressionOperator {\n\tEQUALS = \"equals\",\n\tNOT_EQUALS = \"not-equals\",\n\tLESS = \"less\",\n\tLESS_EQUALS = \"less-equals\",\n\tMORE = \"more\",\n\tMORE_EQUALS = \"more-equals\",\n\tIN = \"in\",\n\tNOT_IN = \"not-in\",\n\t// for date time\n\tYEAR_OF = \"year-of\",\n\tHALF_YEAR_OF = \"half-year-of\",\n\tQUARTER_OF = \"quarter-of\",\n\tMONTH_OF = \"month-of\",\n\tWEEK_OF_YEAR = \"week-of-year\",\n\tWEEK_OF_MONTH = \"week-of-month\",\n\tWEEKDAYS = \"weekdays\",\n\tTILL_NOW = \"till-now\",\n}\n\nexport interface ConsoleSpaceSubjectDataSetFilterExpression extends ConsoleSpaceSubjectDataSetFilter {\n\ttopicId?: string;\n\tfactorId?: string;\n\toperator?: FilterExpressionOperator;\n\tvalue?: string;\n}\n\nexport enum ColumnExpressionOperator {\n\tNONE = \"none\",\n\tADD = \"add\",\n\tSUBTRACT = \"subtract\",\n\tMULTIPLY = \"multiply\",\n\tDIVIDE = \"divide\",\n\tMODULUS = \"modulus\",\n}\n\nexport interface ConsoleSpaceSubjectDataSetColumn {\n\ttopicId?: string;\n\tfactorId?: string;\n\toperator?: ColumnExpressionOperator;\n\tsecondaryTopicId?: string;\n\tsecondaryFactorId?: string;\n\talias?: string;\n}\n\nexport enum TopicJoinType {\n\tLEFT = \"left\",\n\tRIGHT = \"right\",\n\tINNER = \"inner\",\n}\n\nexport interface ConsoleSpaceSubjectDataSetJoin {\n\ttopicId?: string;\n\tfactorId?: string;\n\tsecondaryTopicId?: string;\n\tsecondaryFactorId?: string;\n\ttype?: TopicJoinType;\n}\n\nexport enum ConsoleSpaceSubjectChartType {\n\tCOUNT = \"count\",\n\tBAR = \"bar\",\n\tLINE = \"line\",\n\tSCATTER = \"scatter\",\n\tPIE = \"pie\",\n\tDOUGHNUT = \"doughnut\",\n\tNIGHTINGALE = \"nightingale\",\n\tSUNBURST = \"sunburst\",\n\tTREE = \"tree\",\n\tTREEMAP = \"treemap\",\n}\n\nexport enum ConsoleSpaceSubjectChartIndicatorAggregator {\n\tNONE = \"none\",\n\tCOUNT = \"count\",\n\tSUMMARY = \"sum\",\n\tAVERAGE = \"avg\",\n\tMEDIAN = \"med\",\n\tMAXIMUM = \"max\",\n\tMINIMUM = \"min\",\n}\n\nexport interface ConsoleSpaceSubjectChartIndicator extends ConsoleSpaceSubjectDataSetColumn {\n\taggregator: ConsoleSpaceSubjectChartIndicatorAggregator;\n}\n\nexport interface ConsoleSpaceSubjectChartDimension extends ConsoleSpaceSubjectDataSetColumn {}\n\nexport type ConsoleSpaceSubjectChartDataSetRow = Array<any>;\nexport type ConsoleSpaceSubjectChartDataSetGrid = Array<ConsoleSpaceSubjectChartDataSetRow>;\n\nexport interface ConsoleSpaceSubjectChartDataSetColumn {\n\ttopicId: string;\n\tfactorId: string;\n}\n\nexport interface ConsoleSpaceSubjectChartDataSet {\n\tmeta?: Array<ConsoleSpaceSubjectChartDataSetColumn>;\n\tdata: ConsoleSpaceSubjectChartDataSetGrid;\n}\n\nexport interface ConsoleSpaceSubjectChart {\n\tchartId?: string;\n\tname?: string;\n\ttype?: ConsoleSpaceSubjectChartType;\n\tindicators: Array<ConsoleSpaceSubjectChartIndicator>;\n\tdimensions: Array<ConsoleSpaceSubjectChartDimension>;\n\t// for subject chart view\n\trect?: {\n\t\ttop: number;\n\t\tleft: number;\n\t\twidth: number;\n\t\theight: number;\n\t};\n\tpredefined?: boolean;\n\tcolors?: string | Array<string>;\n}\n\nexport interface ConsoleSpaceSubject {\n\tsubjectId: string;\n\tname: string;\n\ttopicCount: number;\n\tgraphicsCount: number;\n\tlastVisitTime: string;\n\tcreatedAt: string;\n\tdataset?: {\n\t\tfilters?: Array<ConsoleSpaceSubjectDataSetFilter>;\n\t\tcolumns?: Array<ConsoleSpaceSubjectDataSetColumn>;\n\t\tjoins?: Array<ConsoleSpaceSubjectDataSetJoin>;\n\t};\n\tgraphics?: Array<ConsoleSpaceSubjectChart>;\n}\n\nexport interface ConsoleSpaceGroup {\n\tgroupId: string;\n\tname: string;\n\tsubjects: Array<ConsoleSpaceSubject>;\n}\n\nexport interface ConnectedConsoleSpace extends ConsoleSpace {\n\tconnectId: string;\n\ttype: ConsoleSpaceType;\n\tlastVisitTime: string;\n\tgroups: Array<ConsoleSpaceGroup>;\n\tsubjects: Array<ConsoleSpaceSubject>;\n}\n\nexport interface ConsoleDashboardChart {\n\tspaceId: string;\n\tconnectId: string;\n\tsubjectId: string;\n\tchartId: string;\n\trect?: {\n\t\ttop: number;\n\t\tleft: number;\n\t\twidth: number;\n\t\theight: number;\n\t};\n}\n\nexport interface ConsoleDashboard {\n\tdashboardId: string;\n\tname: string;\n\tlastVisitTime: string;\n\tcurrent?: boolean;\n\tgraphics: Array<ConsoleDashboardChart>;\n}\n\nexport enum ConsoleFavoriteType {\n\tSPACE = \"space\",\n\tDASHBOARD = \"dashboard\",\n}\n\nexport interface ConsoleFavorite {\n\ttype: ConsoleFavoriteType;\n}\n\nexport interface ConsoleFavoriteSpace extends ConsoleFavorite {\n\ttype: ConsoleFavoriteType.SPACE;\n\tconnectId: string;\n}\n\nexport interface ConsoleFavoriteDashboard extends ConsoleFavorite {\n\ttype: ConsoleFavoriteType.DASHBOARD;\n\tdashboardId: string;\n}\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { TooltipAlignment, useTooltip } from './context/console-tooltip';\n\nexport const createLinkButtonBackgroundAnimation = ({ opacity = 0.2 }) => {\n\treturn `\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t\twidth: 0;\n\t\t\theight: 0;\n\t\t\tborder-radius: var(--border-radius);\n\t\t\tbackground-color: transparent;\n\t\t\topacity: ${opacity};\n\t\t\ttransition: all 300ms ease-in-out;\n\t\t}\n\t\t&:hover:before {\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tbackground-color: var(--console-waive-color);\n\t\t}\n\t`;\n};\nconst Button = styled.button<{ 'ignore-horizontal-padding'?: boolean }>`\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 4px ${({ 'ignore-horizontal-padding': ignoreHorizontalPadding }) => ignoreHorizontalPadding ? '4px' : 'calc(var(--margin) / 2)'};\n\tborder: 0;\n\tappearance: none;\n\toutline: none;\n\tcolor: currentColor;\n\tbackground-color: transparent;\n\tcursor: pointer;\n\ttransition: all 300ms ease-in-out;\n\t${createLinkButtonBackgroundAnimation({ opacity: 0.2 })}\n`;\n\nexport const LinkButton = (props: {\n\ttooltip?: string;\n\tcenter?: boolean;\n\tright?: boolean;\n\toffsetX?: number;\n\toffsetY?: number;\n\tignoreHorizontalPadding?: boolean;\n\tonClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n\tchildren: ((props: any) => React.ReactNode) | React.ReactNode\n}) => {\n\tconst {\n\t\ttooltip,\n\t\tcenter = false,\n\t\tright = false,\n\t\toffsetX = 0,\n\t\toffsetY = 10,\n\t\tignoreHorizontalPadding,\n\t\tonClick,\n\t\tchildren\n\t} = props;\n\n\tconst buttonRef = useRef<HTMLButtonElement>(null);\n\tconst { mouseEnter, mouseLeave, hide } = useTooltip({\n\t\tshow: !!tooltip,\n\t\ttooltip,\n\t\tref: buttonRef,\n\t\trect: () => ({\n\t\t\talign: center ? TooltipAlignment.CENTER : (right ? TooltipAlignment.RIGHT : TooltipAlignment.LEFT),\n\t\t\toffsetY,\n\t\t\toffsetX\n\t\t})\n\t});\n\n\tconst onClicked = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tif (onClick) {\n\t\t\thide && hide();\n\t\t\tonClick(event);\n\t\t}\n\t};\n\n\treturn <Button ignore-horizontal-padding={ignoreHorizontalPadding}\n\t               onMouseEnter={mouseEnter} onMouseLeave={mouseLeave}\n\t               onClick={onClicked}\n\t               ref={buttonRef}>\n\t\t{children}\n\t</Button>;\n};","import color from 'color';\n\nconst baseColors1 = [ '#60acfc', '#32d3eb', '#5bc49f', '#feb64d', '#ff7c7c', '#9287e7' ];\nconst baseColors2 = [ '#238ee4', '#42B1C2', '#8DD86F', '#FD8C56', '#E14D7C', '#6163D9' ];\nconst baseColors3 = [ '#31A3E5', '#39C6BB', '#CCED48', '#F66B5B', '#CA4697', '#5057D6' ];\nconst baseColors4 = [ '#2EB1D9', '#55CEA3', '#FED535', '#F75559', '#A542AF', '#5479CD' ];\n\nexport const BaseColors6 = baseColors1;\nexport const BaseColors12 = [ ...baseColors1, ...baseColors2 ];\nexport const BaseColors24 = [ ...baseColors1, ...baseColors2, ...baseColors3, ...baseColors4 ];\n\nconst base24 = BaseColors24.map(c => color(c));\nexport const DarkenColors24 = base24.map(c => c.darken(0.1).rgb().toString());\nexport const LightColors24 = base24.map(c => c.lighten(0.2).rgb().toString());\nexport const LighterColors24 = base24.map(c => c.lighten(0.4).rgb().toString());\n\nexport const [ DarkenColors12, LightColors12, LighterColors12 ] = [ DarkenColors24, LightColors24, LighterColors24 ].map(series => {\n\treturn series.filter((c, index) => index % 2 === 0);\n});\nexport const [ DarkenColors6, LightColors6, LighterColors6 ] = [ DarkenColors24, LightColors24, LighterColors24 ].map(series => {\n\treturn series.filter((c, index) => index % 4 === 0);\n});","import { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Theme } from '../../theme/types';\n\nexport interface DropdownOption {\n\tvalue: string | number | boolean;\n\tlabel: string | ((props: any) => React.ReactNode) | React.ReactNode;\n}\n\ninterface State {\n\tactive: boolean;\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\tminWidth: number;\n}\n\nconst DropdownContainer = styled.div.attrs<State & { itemCount: number }>(() => {\n\treturn { 'data-widget': 'dropdown' };\n})<State & { itemCount: number }>(({ theme, top, height, itemCount }) => {\n\tconst atBottom = top + height + Math.min(itemCount, 8) * (theme as Theme).height + 2 < window.innerHeight;\n\treturn `\n\t\tposition: relative;\n\t\tpadding: 6px var(--input-indent);\n\t\toutline: none;\n\t\tappearance: none;\n\t\tborder: var(--border);\n\t\tborder-radius: var(--border-radius);\n\t\tfont-size: var(--font-size);\n\t\theight: var(--height);\n\t\tline-height: var(--line-height);\n\t\tcolor: var(--font-color);\n\t\tbackground-color: transparent;\n\t\ttransition: all 300ms ease-in-out;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tcursor: pointer;\n\t\twidth: 100%;\n\t\t> svg {\n\t\t\topacity: 0;\n\t\t\tmargin-left: var(--letter-gap);\n\t\t\ttransition: all 300ms ease-in-out;\n\t\t}\n\t\t&:hover,\n\t\t&:focus {\n\t\t\t> svg {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t\t&[data-options-visible=true]:focus {\n\t\t\tborder-bottom-left-radius: ${atBottom ? 0 : 'var(--border-radius)'};\n\t\t\tborder-bottom-right-radius: ${atBottom ? 0 : 'var(--border-radius)'};\n\t\t\tborder-top-left-radius: ${atBottom ? 'var(--border-radius)' : 0};\n\t\t\tborder-top-right-radius: ${atBottom ? 'var(--border-radius)' : 0};\n\t\t\t> div:last-child {\n\t\t\t\topacity: 1;\n\t\t\t\tpointer-events: auto;\n\t\t\t}\n\t\t}\n\t`;\n});\nconst Label = styled.span`\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow-x: hidden;\n\tflex-grow: 1;\n`;\nconst Options = styled.div.attrs<State & { itemCount: number }>(({ theme, top, left, height, minWidth, itemCount }) => {\n\tconst atBottom = top + height + Math.min(itemCount, 8) * (theme as Theme).height + 2 < window.innerHeight;\n\treturn {\n\t\tstyle: {\n\t\t\ttop: atBottom ? (top + height - 1) : 'unset',\n\t\t\tbottom: atBottom ? 'unset' : `calc(100vh - ${top + 1}px)`,\n\t\t\tleft,\n\t\t\tminWidth,\n\t\t\tborderTopLeftRadius: atBottom ? 0 : 'var(--border-radius)',\n\t\t\tborderTopRightRadius: atBottom ? 0 : 'var(--border-radius)',\n\t\t\tborderBottomLeftRadius: atBottom ? 'var(--border-radius)' : 0,\n\t\t\tborderBottomRightRadius: atBottom ? 'var(--border-radius)' : 0\n\t\t}\n\t};\n})<State & { itemCount: number }>`\n\tposition: fixed;\n\tmax-height: calc(var(--height) * 8 + 2px);\n\tpointer-events: none;\n\topacity: 0;\n\tbackground-color: var(--bg-color);\n\tborder: var(--border);\n\ttransition: opacity 300ms ease-in-out;\n\tz-index: 999;\n\toverflow-y: auto;\n\t> span {\n\t\theight: var(--height);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 6px var(--input-indent);\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\t&:hover {\n\t\t\tbackground-color: var(--hover-color);\n\t\t}\n\t}\n`;\n\nconst getPosition = (container: HTMLDivElement) => {\n\tconst rect = container.getBoundingClientRect();\n\treturn {\n\t\ttop: rect.top,\n\t\tleft: rect.left,\n\t\twidth: rect.width,\n\t\theight: rect.height\n\t};\n};\n\nconst Dropdown = (props: {\n\tclassName?: string,\n\toptions: Array<DropdownOption>,\n\tonChange: (option: DropdownOption) => Promise<void | { active: boolean }>,\n\tvalue?: string | number | boolean,\n\tplease?: string\n\tselect?: (value: string | number | boolean) => ((props: any) => React.ReactNode) | React.ReactNode;\n}) => {\n\tconst { className, options = [], onChange, value, please = '', select, ...rest } = props;\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst [ state, setState ] = useState<State>({ active: false, top: 0, left: 0, width: 0, height: 0, minWidth: 0 });\n\n\tuseEffect(() => {\n\t\tconst onScroll = () => {\n\t\t\tif (!state.active) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { top, left, width, height } = getPosition(containerRef.current!);\n\t\t\tsetState({ ...state, top, left, width, height, minWidth: width });\n\t\t};\n\t\twindow.addEventListener('scroll', onScroll, true);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', onScroll, true);\n\t\t};\n\t});\n\n\tlet selectedLabel;\n\tif (value == null) {\n\t\tselectedLabel = please;\n\t} else if (select) {\n\t\tselectedLabel = select(value) || please;\n\t} else {\n\t\tconst selectedOption = options.find(option => option.value === value);\n\t\tselectedLabel = selectedOption ? selectedOption.label : please;\n\t}\n\n\tconst onClicked = () => {\n\t\tconst { top, left, width, height } = getPosition(containerRef.current!);\n\t\tsetState({ active: true, top, left, width, height, minWidth: width });\n\t};\n\tconst onBlurred = () => setState({ ...state, active: false });\n\tconst onOptionClicked = (option: DropdownOption) => async () => {\n\t\tconst ret = await onChange(option);\n\t\tif (!ret) {\n\t\t\tsetState({ ...state, active: false });\n\t\t} else {\n\t\t\tsetState({ ...state, active: ret.active });\n\t\t}\n\t};\n\n\treturn <DropdownContainer className={className}\n\t                          data-options-visible={state.active}\n\t                          {...state}\n\t                          {...rest}\n\t                          itemCount={options.length}\n\t                          ref={containerRef}\n\t                          role='input' tabIndex={0}\n\t                          onClick={onClicked} onBlur={onBlurred}>\n\t\t<Label>{selectedLabel}</Label>\n\t\t<FontAwesomeIcon icon={faCaretDown}/>\n\t\t<Options {...state} itemCount={options.length}>\n\t\t\t{options.map(option => {\n\t\t\t\treturn <span key={`${option.value}`} onClick={onOptionClicked(option)}>\n\t\t\t\t\t{option.label}\n\t\t\t\t</span>;\n\t\t\t})}\n\t\t</Options>\n\t</DropdownContainer>;\n};\n\nexport default Dropdown;","import { EventEmitter } from 'events';\nimport { useEffect, useState } from 'react';\nimport { useForceUpdate } from '../../../common/utils';\nimport { fetchDashboards } from '../../../services/console/dashboard';\nimport { ConsoleDashboard } from '../../../services/console/types';\n\nexport enum ConsoleDashboardsEvent {\n\tDASHBOARD_ADDED = 'dashboard-added',\n\tDASHBOARD_DELETED = 'dashboard-deleted',\n\tDASHBOARD_RENAMED = 'dashboard-renamed'\n}\n\nexport type DashboardAddedListener = (space: ConsoleDashboard) => void;\nexport type DashboardDeletedListener = (space: ConsoleDashboard) => void;\nexport type DashboardRenamedListener = (space: ConsoleDashboard) => void;\n\nexport interface ConsoleDashboardsStorage {\n\tinitialized: boolean;\n\titems: Array<ConsoleDashboard>;\n}\n\nexport interface ConsoleDashboardsUsable {\n\taddDashboard: (dashboard: ConsoleDashboard) => void;\n\taddDashboardAddedListener: (listener: DashboardAddedListener) => void;\n\tremoveDashboardAddedListener: (listener: DashboardAddedListener) => void;\n\n\tdeleteDashboard: (dashboard: ConsoleDashboard) => void;\n\taddDashboardDeletedListener: (listener: DashboardDeletedListener) => void;\n\tremoveDashboardDeletedListener: (listener: DashboardDeletedListener) => void;\n\n\tdashboardRenamed: (dashboard: ConsoleDashboard) => void;\n\taddDashboardRenamedListener: (listener: DashboardRenamedListener) => void;\n\tremoveDashboardRenamedListener: (listener: DashboardRenamedListener) => void;\n}\n\nexport const useConsoleDashboards = () => {\n\tconst [ emitter ] = useState(new EventEmitter());\n\tconst [ state ] = useState<ConsoleDashboardsStorage>({\n\t\tinitialized: false,\n\t\titems: []\n\t});\n\tconst [ usable ] = useState<ConsoleDashboardsUsable>({\n\t\taddDashboard: (dashboard: ConsoleDashboard) => {\n\t\t\tstate.initialized = true;\n\t\t\tstate.items.push(dashboard);\n\t\t\temitter.emit(ConsoleDashboardsEvent.DASHBOARD_ADDED, dashboard);\n\t\t},\n\t\taddDashboardAddedListener: (listener: DashboardAddedListener) => emitter.on(ConsoleDashboardsEvent.DASHBOARD_ADDED, listener),\n\t\tremoveDashboardAddedListener: (listener: DashboardAddedListener) => emitter.off(ConsoleDashboardsEvent.DASHBOARD_ADDED, listener),\n\n\t\tdeleteDashboard: (dashboard: ConsoleDashboard) => {\n\t\t\tstate.initialized = true;\n\t\t\t// eslint-disable-next-line\n\t\t\tconst index = state.items.findIndex(d => d.dashboardId == dashboard.dashboardId);\n\t\t\tif (index !== -1) {\n\t\t\t\tstate.items.splice(index, 1);\n\t\t\t}\n\t\t\temitter.emit(ConsoleDashboardsEvent.DASHBOARD_DELETED, dashboard);\n\t\t},\n\t\taddDashboardDeletedListener: (listener: DashboardDeletedListener) => emitter.on(ConsoleDashboardsEvent.DASHBOARD_DELETED, listener),\n\t\tremoveDashboardDeletedListener: (listener: DashboardDeletedListener) => emitter.off(ConsoleDashboardsEvent.DASHBOARD_DELETED, listener),\n\n\t\tdashboardRenamed: (dashboard: ConsoleDashboard) => emitter.emit(ConsoleDashboardsEvent.DASHBOARD_RENAMED, dashboard),\n\t\taddDashboardRenamedListener: (listener: DashboardRenamedListener) => emitter.on(ConsoleDashboardsEvent.DASHBOARD_RENAMED, listener),\n\t\tremoveDashboardRenamedListener: (listener: DashboardRenamedListener) => emitter.off(ConsoleDashboardsEvent.DASHBOARD_RENAMED, listener)\n\t});\n\tconst forceUpdate = useForceUpdate();\n\n\t// TODO simulate data for demo purpose\n\tuseEffect(() => {\n\t\tif (!state.initialized) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst dashboards = await fetchDashboards();\n\t\t\t\t\tstate.initialized = true;\n\t\t\t\t\tstate.items.push(...dashboards);\n\t\t\t\t\tforceUpdate();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.groupCollapsed(`%cError on fetch dashboards.`, 'color:rgb(251,71,71)');\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tconsole.groupEnd();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}, [ forceUpdate, state ]);\n\n\treturn { ...state, ...usable };\n};","import { getLatestMails, listReadMails, listUnreadMails, updateMailsAsRead } from '../../../services/console/mail';\nimport { ConsoleMail } from '../../../services/console/types';\nimport { ConsoleMessagesStorage, ConsoleMessagesUsable, useMessages } from './console-messages';\n\nexport enum ConsoleMailEvent {\n\tLATEST_RECEIVED = 'latest-mail-received'\n}\n\nexport interface ConsoleMailsStorage extends ConsoleMessagesStorage<ConsoleMail> {\n}\n\nexport interface ConsoleMailsUsable extends ConsoleMessagesUsable<ConsoleMail, ConsoleMailEvent> {\n}\n\nexport const useConsoleMails = () => {\n\treturn useMessages({\n\t\tupdateAsRead: updateMailsAsRead,\n\t\tlistReadMessages: async (options?: {\n\t\t\tendTime?: string;\n\t\t\tpageSize?: number;\n\t\t}) => {\n\t\t\tconst response = await listReadMails(options);\n\t\t\treturn {\n\t\t\t\tlist: response.mails,\n\t\t\t\tallLoaded: response.allLoaded\n\t\t\t};\n\t\t},\n\t\tlistUnreadMessages: async (options?: {\n\t\t\tendTime?: string;\n\t\t\tpageSize?: number;\n\t\t}) => {\n\t\t\tconst response = await listUnreadMails(options);\n\t\t\treturn {\n\t\t\t\tlist: response.mails,\n\t\t\t\tallLoaded: response.allLoaded\n\t\t\t};\n\t\t},\n\t\tgetLatestMessages: getLatestMails,\n\t\ttypeStr: 'mails',\n\t\tlatestArrivedEvent: ConsoleMailEvent.LATEST_RECEIVED\n\t});\n};\n","import { ConsoleFavorite, ConsoleFavoriteDashboard, ConsoleFavoriteSpace, ConsoleFavoriteType } from './types';\n\nexport const fetchFavorites = async (): Promise<Array<ConsoleFavorite>> => {\n\treturn [ {\n\t\tdashboardId: '1',\n\t\ttype: ConsoleFavoriteType.DASHBOARD\n\t} as ConsoleFavoriteDashboard, {\n\t\tconnectId: '2',\n\t\ttype: ConsoleFavoriteType.SPACE\n\t} as ConsoleFavoriteSpace ];\n};","import { ConsoleMails } from './types';\n\nexport interface MailResponse {\n\tmails: ConsoleMails;\n\tallLoaded: boolean;\n}\n\nexport const listUnreadMails = async (options?: {\n\tendTime?: string;\n\tpageSize?: number;\n}): Promise<MailResponse> => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve({\n\t\t\t\tmails: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: '1',\n\t\t\t\t\t\tsubject: 'Hello there.',\n\t\t\t\t\t\tbody: 'Welcome to group \"Oklahoma\", guess which one here?',\n\t\t\t\t\t\tsender: 'Damon Lindelof',\n\t\t\t\t\t\tcreateDate: '2020/10/05 17:45:37'\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tallLoaded: true\n\t\t\t});\n\t\t}, 1000);\n\t});\n};\nexport const listReadMails = async (options?: {\n\tendTime?: string;\n\tpageSize?: number;\n}): Promise<MailResponse> => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve({\n\t\t\t\tmails: [],\n\t\t\t\tallLoaded: true\n\t\t\t});\n\t\t}, 3000);\n\t});\n};\n\nexport const getLatestMails = async (options?: {\n\tendTime?: string;\n\tpageSize?: number;\n}): Promise<ConsoleMails> => {\n\treturn [];\n};\n\nexport const updateMailsAsRead = async (mails: ConsoleMails): Promise<void> => {\n\treturn;\n};","import {EventEmitter} from 'events';\nimport {useEffect, useState} from 'react';\nimport {useForceUpdate} from '../../../common/utils';\nimport {fetchAvailableSpaces, fetchConnectedSpaces} from '../../../services/console/space';\nimport {ConnectedConsoleSpace, ConsoleSpace} from '../../../services/console/types';\n\nexport enum ConsoleSpacesEvent {\n\tSPACE_ADDED = 'space-added',\n\tSPACE_DELETED = 'space-deleted',\n\tSPACE_RENAMED = 'space-renamed'\n}\n\nexport type ConsoleSpaceAddedListener = (space: ConnectedConsoleSpace) => void;\nexport type ConsoleSpaceDeletedListener = (space: ConnectedConsoleSpace) => void;\nexport type ConsoleSpaceRenamedListener = (space: ConnectedConsoleSpace) => void;\n\nexport interface ConsoleSpacesStorage {\n\tinitialized: boolean;\n\tconnected: Array<ConnectedConsoleSpace>;\n\tavailable: Array<ConsoleSpace>;\n}\n\nexport interface ConsoleSpacesUsable {\n\taddSpace: (space: ConnectedConsoleSpace) => void;\n\taddSpaceAddedListener: (listener: ConsoleSpaceAddedListener) => void;\n\tremoveSpaceAddedListener: (listener: ConsoleSpaceAddedListener) => void;\n\n\tdeleteSpace: (space: ConnectedConsoleSpace) => void;\n\taddSpaceDeletedListener: (listener: ConsoleSpaceDeletedListener) => void;\n\tremoveSpaceDeletedListener: (listener: ConsoleSpaceDeletedListener) => void;\n\n\tspaceRenamed: (space: ConnectedConsoleSpace) => void;\n\taddSpaceRenamedListener: (listener: ConsoleSpaceRenamedListener) => void;\n\tremoveSpaceRenamedListener: (listener: ConsoleSpaceRenamedListener) => void;\n}\n\nexport const useConsoleSpaces = () => {\n\tconst [ emitter ] = useState(new EventEmitter());\n\tconst [ state ] = useState<ConsoleSpacesStorage>({\n\t\tinitialized: false,\n\t\tconnected: [],\n\t\tavailable: []\n\t});\n\tconst [ usable ] = useState<ConsoleSpacesUsable>({\n\t\taddSpace: (space: ConnectedConsoleSpace) => {\n\t\t\tstate.initialized = true;\n\t\t\tstate.connected.push(space);\n\t\t\temitter.emit(ConsoleSpacesEvent.SPACE_ADDED, space);\n\t\t},\n\t\taddSpaceAddedListener: (listener: ConsoleSpaceAddedListener) => emitter.on(ConsoleSpacesEvent.SPACE_ADDED, listener),\n\t\tremoveSpaceAddedListener: (listener: ConsoleSpaceAddedListener) => emitter.off(ConsoleSpacesEvent.SPACE_ADDED, listener),\n\n\t\tdeleteSpace: (space: ConnectedConsoleSpace) => {\n\t\t\tstate.initialized = true;\n\t\t\t// eslint-disable-next-line\n\t\t\tconst index = state.connected.findIndex(s => s.connectId == space.connectId);\n\t\t\tif (index !== -1) {\n\t\t\t\tstate.connected.splice(index, 1);\n\t\t\t}\n\t\t\temitter.emit(ConsoleSpacesEvent.SPACE_DELETED, space);\n\t\t},\n\t\taddSpaceDeletedListener: (listener: ConsoleSpaceDeletedListener) => emitter.on(ConsoleSpacesEvent.SPACE_DELETED, listener),\n\t\tremoveSpaceDeletedListener: (listener: ConsoleSpaceDeletedListener) => emitter.off(ConsoleSpacesEvent.SPACE_DELETED, listener),\n\n\t\tspaceRenamed: (space: ConnectedConsoleSpace) => emitter.emit(ConsoleSpacesEvent.SPACE_RENAMED, space),\n\t\taddSpaceRenamedListener: (listener: ConsoleSpaceRenamedListener) => emitter.on(ConsoleSpacesEvent.SPACE_RENAMED, listener),\n\t\tremoveSpaceRenamedListener: (listener: ConsoleSpaceRenamedListener) => emitter.off(ConsoleSpacesEvent.SPACE_RENAMED, listener)\n\t});\n\tconst forceUpdate = useForceUpdate();\n\n\t// TODO simulate data for demo purpose\n\tuseEffect(() => {\n\t\tif (state.initialized) {\n\t\t\treturn;\n\t\t}\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst connected = await fetchConnectedSpaces();\n\t\t\t\tconst available = await fetchAvailableSpaces();\n\t\t\t\tstate.initialized = true;\n\t\t\t\tstate.connected.push(...connected);\n\t\t\t\tstate.available.push(...available);\n\t\t\t\tforceUpdate();\n\t\t\t} catch (e) {\n\t\t\t\tconsole.groupCollapsed(`%cError on fetch spaces.`, 'color:rgb(251,71,71)');\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.groupEnd();\n\t\t\t}\n\t\t})();\n\t}, [ forceUpdate, state ]);\n\n\treturn { ...state, ...usable };\n};","import React, { useState } from 'react';\nimport { findAccount } from '../../../services/account/account-session';\nimport { ConsoleMenuUsable, useConsoleMenu } from '../../component/console/context/console-menu';\nimport { ConsoleTooltipContextProvider } from '../../component/console/context/console-tooltip';\nimport { ConsoleUser } from '../../component/console/types';\nimport { ConsoleDashboardsStorage, ConsoleDashboardsUsable, useConsoleDashboards } from './console-dashboards';\nimport { ConsoleFavoritesStorage, ConsoleFavoritesUsable, useConsoleFavorites } from './console-favorites';\nimport { ConsoleMailsStorage, ConsoleMailsUsable, useConsoleMails } from './console-mails';\nimport {\n\tConsoleNotificationsStorage,\n\tConsoleNotificationsUsable,\n\tuseConsoleNotifications\n} from './console-nofitications';\nimport { ConsoleSettingsStorage, ConsoleSettingsUsable, useConsoleSettings } from './console-settings';\nimport { ConsoleSpacesStorage, ConsoleSpacesUsable, useConsoleSpaces } from './console-spaces';\n\nexport interface ConsoleContext {\n\tmenu: ConsoleMenuUsable;\n\tuser: ConsoleUser;\n\tnotifications: ConsoleNotificationsStorage & ConsoleNotificationsUsable;\n\tmails: ConsoleMailsStorage & ConsoleMailsUsable;\n\tspaces: ConsoleSpacesStorage & ConsoleSpacesUsable;\n\tdashboards: ConsoleDashboardsStorage & ConsoleDashboardsUsable;\n\tfavorites: ConsoleFavoritesStorage & ConsoleFavoritesUsable;\n\tsettings: ConsoleSettingsStorage & ConsoleSettingsUsable;\n}\n\nconst Context = React.createContext<ConsoleContext>({} as ConsoleContext);\nContext.displayName = 'ConsoleContext';\n\nexport const ConsoleContextProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst menu = useConsoleMenu();\n\tconst [ currentUser ] = useState<ConsoleUser>(() => {\n\t\treturn {\n\t\t\tname: findAccount()?.name || 'Walter Kovacs'\n\t\t};\n\t});\n\tconst notifications = useConsoleNotifications();\n\tconst mails = useConsoleMails();\n\tconst spaces = useConsoleSpaces();\n\tconst dashboards = useConsoleDashboards();\n\tconst favorites = useConsoleFavorites();\n\tconst settings = useConsoleSettings();\n\n\tconst context = {\n\t\tmenu,\n\t\tuser: currentUser,\n\t\tnotifications,\n\t\tmails,\n\t\tspaces,\n\t\tdashboards,\n\t\tfavorites,\n\t\tsettings\n\t};\n\n\treturn <Context.Provider value={context}>\n\t\t<ConsoleTooltipContextProvider>\n\t\t\t{children}\n\t\t</ConsoleTooltipContextProvider>\n\t</Context.Provider>;\n};\n\nexport const useConsoleContext = () => {\n\treturn React.useContext(Context);\n};\n","import { useEffect, useState } from 'react';\nimport { useForceUpdate } from '../../../common/utils';\nimport { fetchFavorites } from '../../../services/console/favorites';\nimport { ConsoleFavorite } from '../../../services/console/types';\n\nexport interface ConsoleFavoritesStorage {\n\tinitialized: boolean;\n\titems: Array<ConsoleFavorite>;\n\tpinned: boolean;\n\tvisible: boolean;\n\tinvoker?: {\n\t\trect: DOMRect;\n\t\tisMenuExpanded: boolean\n\t}\n}\n\nexport interface ConsoleFavoritesUsable {\n\tremove: (fav: ConsoleFavorite) => void;\n\tadd: (fav: ConsoleFavorite) => void;\n\tshow: (rect: DOMRect, isMenuExpanded: boolean) => void;\n\thide: () => void;\n\tpin: () => void;\n\tunpin: () => void;\n}\n\nexport const useConsoleFavorites = () => {\n\tconst forceUpdate = useForceUpdate();\n\tconst [ state ] = useState<ConsoleFavoritesStorage>({\n\t\tinitialized: false,\n\t\titems: [],\n\t\tpinned: false,\n\t\tvisible: false\n\t});\n\n\tconst mergeToState = (newData: Partial<ConsoleFavoritesStorage>) => {\n\t\t// @ts-ignore\n\t\tObject.keys(newData).forEach(key => state[key] = newData[key]);\n\t\tforceUpdate();\n\t};\n\tconst remove = (fav: ConsoleFavorite) => {\n\t\tmergeToState({ items: state.items.filter(f => f !== fav) });\n\t};\n\tconst add = (fav: ConsoleFavorite) => {\n\t\tmergeToState({ items: [ ...state.items, fav ] });\n\t};\n\tconst show = (rect: DOMRect, isMenuExpanded: boolean) => mergeToState({\n\t\tvisible: true,\n\t\tinvoker: { rect, isMenuExpanded }\n\t});\n\tconst hide = () => {\n\t\tif (state.visible) {\n\t\t\tmergeToState({ visible: false });\n\t\t}\n\t};\n\tconst pin = () => mergeToState({ pinned: true });\n\tconst unpin = () => mergeToState({ pinned: false, visible: false });\n\n\t// TODO simulate data for demo purpose\n\tuseEffect(() => {\n\t\tif (!state.initialized) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst items = await fetchFavorites();\n\t\t\t\t\tmergeToState({ initialized: true, items });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.groupCollapsed(`%cError on fetch favorites.`, 'color:rgb(251,71,71)');\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tconsole.groupEnd();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [ state.initialized ]);\n\n\treturn {\n\t\t...state,\n\t\tremove,\n\t\tadd,\n\t\tshow,\n\t\thide,\n\t\tpin,\n\t\tunpin\n\t};\n};","import React, { useEffect, useState } from 'react';\nimport { saveSubject } from '../../../../services/console/space';\nimport {\n\tConnectedConsoleSpace,\n\tConsoleSpace,\n\tConsoleSpaceGroup,\n\tConsoleSpaceSubject,\n\tConsoleTopic,\n\tConsoleTopicFactor,\n\tConsoleTopicRelationship\n} from '../../../../services/console/types';\nimport { DropdownOption } from '../../../component/dropdown';\nimport { useConsoleContext } from '../../context/console-context';\n\ninterface SpaceDefs {\n\tspace: ConsoleSpace;\n\ttopics: Array<DropdownOption & { topic: ConsoleTopic }>;\n\tfactors: { [key in string]: Array<DropdownOption & { topic: ConsoleTopic, factor: ConsoleTopicFactor }> };\n\trelations: Array<DropdownOption & {\n\t\tsource: { topic: ConsoleTopic, factors: Array<ConsoleTopicFactor> },\n\t\ttarget: { topic: ConsoleTopic, factors: Array<ConsoleTopicFactor> },\n\t\trelation: ConsoleTopicRelationship\n\t}>\n}\n\nexport interface SubjectContext {\n\tdefs: SpaceDefs;\n\tsave: (immediately?: boolean) => Promise<void>;\n}\n\nconst Context = React.createContext<SubjectContext>({} as SubjectContext);\nContext.displayName = 'SubjectContext';\n\nconst computeSpaceDefs = (available: Array<ConsoleSpace>, space: ConnectedConsoleSpace): SpaceDefs => {\n\t// eslint-disable-next-line\n\tconst spaceDef = available.find(s => s.spaceId == space.spaceId)!;\n\tconst topicOptions = spaceDef.topics.map(topic => ({ label: topic.name, value: topic.topicId, topic }));\n\tconst factorOptions = spaceDef.topics.reduce((all, topic) => {\n\t\tall[topic.topicId] = topic.factors.map(factor => ({\n\t\t\tlabel: factor.label,\n\t\t\tvalue: factor.factorId,\n\t\t\tfactor,\n\t\t\ttopic\n\t\t}));\n\t\treturn all;\n\t}, {} as { [key in string]: Array<DropdownOption & { topic: ConsoleTopic, factor: ConsoleTopicFactor }> });\n\tconst relationOptions = (spaceDef.topicRelations || []).map(relation => {\n\t\treturn {\n\t\t\tvalue: relation.relationId,\n\t\t\tlabel: '',\n\t\t\tsource: {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\ttopic: topicOptions.find(topic => topic.value == relation.sourceTopicId)!.topic,\n\t\t\t\tfactors: relation.sourceFactorNames.map(factorName => factorOptions[relation.sourceTopicId]!.find(({ factor }) => factor.name === factorName)!.factor)\n\t\t\t},\n\t\t\ttarget: {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\ttopic: topicOptions.find(topic => topic.value == relation.targetTopicId)!.topic,\n\t\t\t\tfactors: relation.targetFactorNames.map(factorName => factorOptions[relation.targetTopicId]!.find(({ factor }) => factor.name === factorName)!.factor)\n\t\t\t},\n\t\t\trelation\n\t\t};\n\t});\n\n\treturn {\n\t\tspace: spaceDef,\n\t\ttopics: topicOptions,\n\t\tfactors: factorOptions,\n\t\trelations: relationOptions\n\t};\n};\n\nexport const SubjectContextProvider = (props: {\n\tspace: ConnectedConsoleSpace;\n\tgroup?: ConsoleSpaceGroup;\n\tsubject: ConsoleSpaceSubject;\n\tdoSave?: (subject: ConsoleSpaceSubject) => Promise<void>;\n\tchildren?: ((props: any) => React.ReactNode) | React.ReactNode;\n}) => {\n\tconst { space, subject, doSave, children } = props;\n\n\tconst { spaces: { available } = { available: [ space ] } } = useConsoleContext() || {};\n\tconst [ defs, setDefs ] = useState<SpaceDefs>(computeSpaceDefs(available, space));\n\tconst [ saveTimeoutHandle, setSaveTimeoutHandle ] = useState<number | null>(null);\n\tuseEffect(() => {\n\t\tif (available.length === 1 && available[0] === space) {\n\t\t\treturn;\n\t\t}\n\t\tsetDefs(computeSpaceDefs(available, space));\n\t}, [ space, available ]);\n\n\tconst save = async (immediately: boolean = false) => {\n\t\tif (saveTimeoutHandle) {\n\t\t\tclearTimeout(saveTimeoutHandle);\n\t\t}\n\t\tif (immediately) {\n\t\t\tsetSaveTimeoutHandle(null);\n\t\t\tif (doSave) {\n\t\t\t\tawait doSave(subject);\n\t\t\t} else {\n\t\t\t\tawait saveSubject(subject);\n\t\t\t}\n\t\t} else {\n\t\t\tsetSaveTimeoutHandle(setTimeout(async () => {\n\t\t\t\tsetSaveTimeoutHandle(null);\n\t\t\t\tif (doSave) {\n\t\t\t\t\tawait doSave(subject);\n\t\t\t\t} else {\n\t\t\t\t\tawait saveSubject(subject);\n\t\t\t\t}\n\t\t\t}, 3000));\n\t\t}\n\t};\n\n\treturn <Context.Provider value={{ defs, save }}>{children}</Context.Provider>;\n};\n\nexport const useSubjectContext = () => {\n\treturn React.useContext(Context);\n};\n\n","import { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport enum TooltipAlignment {\n\tLEFT = 'left',\n\tRIGHT = 'right',\n\tCENTER = 'center'\n}\n\nexport interface ComputedTooltipRect {\n\talign: TooltipAlignment;\n\tmaxWidth?: number;\n\toffsetX?: number;\n\toffsetY?: number;\n}\n\nexport interface TooltipRect extends ComputedTooltipRect {\n\ttrigger: DOMRect;\n}\n\nexport interface ConsoleTooltipContext {\n\tshow: (tooltip: ((props: any) => React.ReactNode) | React.ReactNode, rect: TooltipRect) => void;\n\thide: () => void;\n}\n\ninterface TooltipContent {\n\ttooltip: ((props: any) => React.ReactNode) | React.ReactNode,\n\trect: TooltipRect\n}\n\nconst Context = React.createContext<ConsoleTooltipContext>({} as ConsoleTooltipContext);\nContext.displayName = 'ConsoleTooltipContext';\n\nconst TooltipContainer = styled.div.attrs<{ rect?: TooltipRect, 'data-show': boolean }>(({\n\t                                                                                         rect: {\n\t\t                                                                                         align,\n\t\t                                                                                         maxWidth,\n\t\t                                                                                         offsetY = 0,\n\t\t                                                                                         offsetX = 0,\n\t\t                                                                                         trigger\n\t                                                                                         } = {},\n\t                                                                                         'data-show': visible\n                                                                                         }) => {\n\tconst { y = 0, x = 0, width = 0 } = trigger || {};\n\treturn {\n\t\t'data-widget': 'console-tooltip',\n\t\tstyle: {\n\t\t\tmaxWidth: maxWidth || 200,\n\t\t\tbottom: visible ? `calc(100vh - ${y - offsetY}px)` : -1000,\n\t\t\tleft: align === TooltipAlignment.LEFT ? (x - offsetX) : (align === TooltipAlignment.CENTER ? (x + width / 2) : 'unset'),\n\t\t\tright: align === TooltipAlignment.RIGHT ? `calc(100vw - ${x + width - offsetX}px)` : 'unset',\n\t\t\ttransform: `scale(0.91666667) ${align === TooltipAlignment.CENTER ? 'translateX(-50%)' : ''}`,\n\t\t\ttransformOrigin: align === TooltipAlignment.LEFT ? 'bottom left' : (align === TooltipAlignment.RIGHT ? 'bottom right' : 'bottom left')\n\t\t}\n\t};\n}) <{ rect?: TooltipRect }>`\n\tdisplay: flex;\n\tposition: fixed;\n\tmin-height: ${({ theme }) => theme.consoleTooltipMinHeight}px;\n\tmin-width: 120px;\n\talign-items: center;\n\tfont-size: 12px;\n\tfont-weight: var(--font-bold);\n\tfont-stretch: expanded;\n\tborder-radius: var(--border-radius);\n\tpadding: calc(var(--margin) / 6) calc(var(--margin) / 2);\n\tbackground-color: var(--console-tooltip-bg-color);\n\tcolor: var(--invert-color);\n\topacity: 0;\n\tpointer-events: none;\n\tuser-select: none;\n\ttransition: opacity 300ms ease-in-out;\n\tz-index: 10000;\n\t&[data-show=true] {\n\t\topacity: 1;\n\t}\n`;\n\nconst Caret = styled(FontAwesomeIcon).attrs<{ rect?: TooltipRect }>(({\n\t                                                                     rect: {\n\t\t                                                                     align,\n\t\t                                                                     trigger: { width = 0 } = {}\n\t                                                                     } = {}\n                                                                     }) => {\n\treturn {\n\t\tstyle: {\n\t\t\tleft: align === TooltipAlignment.LEFT ? 16 : (align === TooltipAlignment.CENTER ? 'calc(50% - 4px)' : 'unset'),\n\t\t\tright: align === TooltipAlignment.RIGHT ? 16 : 'unset'\n\t\t}\n\t};\n})<{ rect?: TooltipRect }>`\n\tdisplay: block;\n\tposition: absolute;\n\tcolor: var(--console-tooltip-bg-color);\n\tfont-size: 1.2em;\n\ttop: calc(100% - 6px);\n`;\n\nexport const ConsoleTooltipContextProvider = (props: { children?: ((props: any) => React.ReactNode) | React.ReactNode }) => {\n\tconst { children } = props;\n\n\tconst [ content, setContent ] = useState<TooltipContent | null>(null);\n\tconst [ functions ] = useState({\n\t\tshow: (tooltip: ((props: any) => React.ReactNode) | React.ReactNode, rect: TooltipRect) => {\n\t\t\tsetContent({ tooltip, rect });\n\t\t},\n\t\thide: () => setContent(null)\n\t});\n\n\treturn <Context.Provider value={functions}>\n\t\t{children}\n\t\t<TooltipContainer data-show={content != null}\n\t\t                  rect={content?.rect}>\n\t\t\t{content?.tooltip}\n\t\t\t<Caret icon={faCaretDown} rect={content?.rect}/>\n\t\t</TooltipContainer>\n\t</Context.Provider>;\n};\n\nexport const useTooltipContext = () => {\n\treturn React.useContext(Context);\n};\n\nconst notShow = () => {\n};\nexport const useTooltip = <T extends HTMLElement>(options: {\n\tshow: boolean,\n\tref: React.RefObject<T>,\n\ttooltip?: string,\n\trect: (rect: DOMRect) => ComputedTooltipRect\n}) => {\n\tconst { show, ref, tooltip, rect } = options;\n\n\tconst tooltipContext = useTooltipContext();\n\tif (!show) {\n\t\treturn {\n\t\t\tcontext: tooltipContext,\n\t\t\tmouseEnter: notShow,\n\t\t\tmouseLeave: notShow\n\t\t};\n\t}\n\n\tconst onMouseEnter = () => {\n\t\tif (!ref.current || !tooltip) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst trigger = ref.current.getBoundingClientRect();\n\t\ttooltipContext.show(tooltip, { ...rect(trigger), trigger });\n\t};\n\n\treturn {\n\t\tcontext: tooltipContext,\n\t\tmouseEnter: onMouseEnter,\n\t\tmouseLeave: tooltipContext.hide,\n\t\tshow: (tooltip: string) => {\n\t\t\tconst trigger = ref.current!.getBoundingClientRect();\n\t\t\ttooltipContext.show(tooltip, { ...rect(trigger), trigger });\n\t\t},\n\t\thide: tooltipContext.hide\n\t};\n};\n\n"],"sourceRoot":""}